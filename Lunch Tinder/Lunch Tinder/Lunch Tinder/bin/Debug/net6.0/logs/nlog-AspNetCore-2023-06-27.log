2023-06-27 09:15:56.1482|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:15:59.6546|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:15:59.6982|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:15:59.6982|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:15:59.6982|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:15:59.7255|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:15:59.7457|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:16:00.1109|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:16:00.1109|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:16:00.1109|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:16:00.1109|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:16:00.1109|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:16:00.8599|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:16:00.9875|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:16:01.0107|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:16:01.0648|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 09:16:01.2954|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 232.3374ms. 
2023-06-27 09:16:01.2954|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 288.5723ms 
2023-06-27 09:16:01.2954|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:16:01.4723|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:16:01.4723|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:16:01.4723|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-27 09:16:01.4830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 9.9427ms 
2023-06-27 09:16:01.4830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 625.3473ms 
2023-06-27 09:16:01.4830|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-27 09:16:01.4830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 13.9580ms 
2023-06-27 09:16:01.5238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.4131ms 
2023-06-27 09:16:12.4377|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 
2023-06-27 09:16:12.4377|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:16:12.4377|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:16:12.9182|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 09:16:13.0922|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 09:16:13.0922|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 09:16:13.0922|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:16:13.0922|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 650.9357ms 
2023-06-27 09:16:13.0922|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:16:13.0922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:16:13.1054|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 - 302 0 - 667.7131ms 
2023-06-27 09:16:13.1054|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:16:13.1054|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:16:13.1511|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:16:13.2833|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:16:13.2960|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:16:13.3425|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:16:13.3425|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:16:13.3714|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 27.9108ms. 
2023-06-27 09:16:13.3714|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 262.0617ms 
2023-06-27 09:16:13.3714|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:16:13.3714|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 273.0687ms 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2688ms 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/site.css was not modified 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - - 304 - text/css 0.4482ms 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=WLJh6RNFL_na_FwfncOE1gyFVzuYD88KVKv8NEV9xIo - - 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/AdminHome.css was not modified 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=WLJh6RNFL_na_FwfncOE1gyFVzuYD88KVKv8NEV9xIo - - - 304 - text/css 0.6789ms 
2023-06-27 09:16:13.3870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:16:13.4012|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.1967ms 
2023-06-27 09:16:17.9925|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:16:17.9949|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:16:17.9949|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:16:18.0214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:16:18.0396|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:16:18.0506|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 11.1674ms. 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 65.8764ms 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 70.4583ms 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=NNesx0dKJI75gae8XNk1rPas2Jg4_L9SY2BKztSkPqU - - 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4617ms 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/lunchgroupevent.css was not modified 
2023-06-27 09:16:18.0615|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=NNesx0dKJI75gae8XNk1rPas2Jg4_L9SY2BKztSkPqU - - - 304 - text/css 0.8773ms 
2023-06-27 09:16:18.0755|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.9075ms 
2023-06-27 09:20:58.2080|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:20:59.4386|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:20:59.4594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:20:59.4594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:20:59.4594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:20:59.4742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:20:59.4847|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:20:59.5748|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:20:59.5748|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:20:59.5748|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:20:59.5748|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:20:59.5748|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:21:02.0023|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:21:03.8185|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:21:03.8654|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:21:03.8654|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:21:03.8654|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:21:03.8924|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:21:03.9136|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:21:04.1398|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:21:04.1398|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:21:04.1398|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:21:04.1398|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:21:04.1398|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:21:04.9445|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:21:05.0399|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:21:05.0583|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:21:05.0923|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:21:05.0923|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 34.4592ms 
2023-06-27 09:21:05.0923|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:21:05.1133|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:21:05.1133|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 172.8933ms 
2023-06-27 09:21:05.1238|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:21:05.1238|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:21:05.3635|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:21:05.6774|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:21:05.6859|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:21:05.7457|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:21:05.7457|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:21:05.8850|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 137.4024ms. 
2023-06-27 09:21:05.8850|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 764.6608ms 
2023-06-27 09:21:05.8850|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:21:05.9221|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 808.7402ms 
2023-06-27 09:21:05.9221|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:21:05.9221|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.8176ms 
2023-06-27 09:21:05.9348|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:21:05.9505|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.6761ms 
2023-06-27 09:21:08.6225|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 09:21:08.6225|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:21:08.6225|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:21:08.6996|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:21:08.7540|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 09:21:08.7649|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:21:08.7649|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 09:21:08.7759|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 09:21:08.7759|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 09:21:08.8520|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 67.9105ms. 
2023-06-27 09:21:08.8520|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 222.0323ms 
2023-06-27 09:21:08.8520|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 231.9613ms 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/InviteToLunchGroup.css?v=GoyjKHcK-4wpJ4t7ijTpMPwv8AenVquSCo_MbFx5wdo - - 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4366ms 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/CreateLunchEventForGroup.css?v=KaTQYlCUcoajrkudHaJhr8kfITxV2Z-Ppd6h--fwffg - - 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /js/site.js was not modified 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/InviteToLunchGroup.css was not modified 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/CreateLunchEventForGroup.css was not modified 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/LunchGroupDetails.css was not modified 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - - 304 - application/javascript 5.7648ms 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/InviteToLunchGroup.css?v=GoyjKHcK-4wpJ4t7ijTpMPwv8AenVquSCo_MbFx5wdo - - - 304 - text/css 5.8333ms 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - - 304 - text/css 6.2168ms 
2023-06-27 09:21:08.8545|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/CreateLunchEventForGroup.css?v=KaTQYlCUcoajrkudHaJhr8kfITxV2Z-Ppd6h--fwffg - - - 304 - text/css 5.6750ms 
2023-06-27 09:21:08.8691|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:21:08.8691|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.9703ms 
2023-06-27 09:21:12.1638|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:21:12.1638|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4193ms 
2023-06-27 09:21:13.5739|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:21:13.5739|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:21:13.5739|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:21:13.5950|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:21:13.6070|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:21:13.6070|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:21:13.6070|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 8.6102ms. 
2023-06-27 09:21:13.6070|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 41.9472ms 
2023-06-27 09:21:13.6070|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:21:13.6193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 45.4655ms 
2023-06-27 09:21:13.6193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:21:13.6193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:21:13.6193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4334ms 
2023-06-27 09:21:13.6193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8336ms 
2023-06-27 09:26:08.2002|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:26:08.2002|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:26:08.2002|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:26:08.2002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:26:08.2002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:26:08.2002|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:26:08.2212|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 11.1521ms. 
2023-06-27 09:26:08.2212|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 15.3382ms 
2023-06-27 09:26:08.2212|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:26:08.2212|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 24.9051ms 
2023-06-27 09:26:08.2305|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:26:08.2305|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3251ms 
2023-06-27 09:26:08.2305|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:26:08.2305|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6193ms 
2023-06-27 09:33:03.1835|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:33:04.3972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:33:04.4186|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:33:04.4186|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:33:04.4186|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:33:04.4351|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:33:04.4351|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:33:04.5430|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:33:04.5430|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:33:04.5430|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:33:04.5430|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:33:04.5430|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:33:07.7066|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:33:09.3828|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:33:09.4216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:33:09.4216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:33:09.4216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:33:09.4455|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:33:09.4628|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:33:09.6234|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:33:09.6234|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:33:09.6234|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:33:09.6234|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:33:09.6234|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:33:10.0721|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:33:10.1679|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:33:10.1863|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:33:10.2176|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:33:10.2176|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 31.6247ms 
2023-06-27 09:33:10.2176|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:33:10.2431|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:33:10.2438|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 174.2090ms 
2023-06-27 09:33:10.2438|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:33:10.2438|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:33:10.4830|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:33:10.7957|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:33:10.7957|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:33:10.8634|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:33:10.8698|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:33:11.0001|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 134.7357ms. 
2023-06-27 09:33:11.0001|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 749.9724ms 
2023-06-27 09:33:11.0001|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:33:11.0349|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 791.7522ms 
2023-06-27 09:33:11.0349|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:33:11.0418|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.2886ms 
2023-06-27 09:33:11.0418|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:33:11.0642|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.3836ms 
2023-06-27 09:33:13.9043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:33:13.9043|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:33:13.9043|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:33:14.0237|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:33:14.0405|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:33:14.0509|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:33:14.0645|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 13.9486ms. 
2023-06-27 09:33:14.0645|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 155.7282ms 
2023-06-27 09:33:14.0645|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:33:14.0645|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 161.5195ms 
2023-06-27 09:33:14.0744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:33:14.0744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:33:14.0744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4387ms 
2023-06-27 09:33:14.0744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5069ms 
2023-06-27 09:34:33.6398|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:34:35.3974|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:34:35.4381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:34:35.4381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:34:35.4381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:34:35.4614|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:34:35.4783|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:34:35.6348|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:34:35.6349|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:34:35.6349|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:34:35.6349|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:34:35.6349|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:34:35.9395|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:34:36.0350|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:34:36.0545|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:34:36.0897|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:34:36.0897|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.5681ms 
2023-06-27 09:34:36.0897|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:34:36.1162|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 179.7792ms 
2023-06-27 09:34:36.1162|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:34:36.1267|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:34:36.1267|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:34:36.3702|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:34:36.6856|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:34:36.6856|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:34:36.7531|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:34:36.7531|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:34:36.8917|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 136.3197ms. 
2023-06-27 09:34:36.8917|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 767.8987ms 
2023-06-27 09:34:36.8917|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:34:36.9255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 809.1606ms 
2023-06-27 09:34:36.9255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:34:36.9255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1192ms 
2023-06-27 09:34:36.9346|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:34:36.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.7068ms 
2023-06-27 09:34:39.1157|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 09:34:39.1213|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:34:39.1213|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:34:39.1926|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:34:39.2417|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 09:34:39.2515|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:34:39.2515|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 09:34:39.2515|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 09:34:39.2666|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 60.0599ms. 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 202.2989ms 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 213.0499ms 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:34:39.3263|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2952ms 
2023-06-27 09:34:39.3430|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:34:39.3430|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4256ms 
2023-06-27 09:34:41.3854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - 
2023-06-27 09:34:41.3854|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:34:41.3854|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:34:41.4056|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:34:41.4156|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:34:41.4156|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:34:41.4156|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 8.8424ms. 
2023-06-27 09:34:41.4156|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 39.2548ms 
2023-06-27 09:34:41.4156|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:34:41.4156|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - - 200 - text/html;+charset=utf-8 42.7302ms 
2023-06-27 09:34:41.4345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:34:41.4345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:34:41.4345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3551ms 
2023-06-27 09:34:41.4345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3568ms 
2023-06-27 09:34:44.0996|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 09:34:44.0996|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:34:44.0996|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:34:44.1040|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 09:34:44.1040|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 09:34:44.1040|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 09:34:44.1040|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 09:34:44.1040|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.1265ms. 
2023-06-27 09:34:44.1040|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 11.4242ms 
2023-06-27 09:34:44.1040|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 09:34:44.1040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 14.6528ms 
2023-06-27 09:34:44.1213|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:34:44.1213|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2633ms 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:34:46.6891|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:34:46.6891|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 2.9239ms. 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 4.7057ms 
2023-06-27 09:34:46.6891|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:34:46.6972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - - 200 - text/html;+charset=utf-8 8.1387ms 
2023-06-27 09:34:46.6972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:34:46.6972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:34:46.6972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2549ms 
2023-06-27 09:34:46.6972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3679ms 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:39:54.6389|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:39:54.6389|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 5.6297ms. 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 7.0344ms 
2023-06-27 09:39:54.6389|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:39:54.6520|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - - 200 - text/html;+charset=utf-8 13.0247ms 
2023-06-27 09:39:54.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ - - 
2023-06-27 09:39:54.6821|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:39:54.6821|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:39:54.6821|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 1.6286ms 
2023-06-27 09:39:54.6821|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5743ms 
2023-06-27 09:39:54.6982|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:39:54.6982|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ - - - 200 2221 text/css 19.4863ms 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:47:49.7412|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:47:49.7412|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 4.7335ms. 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 9.0085ms 
2023-06-27 09:47:49.7412|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:47:49.7618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventId=31 - - - 200 - text/html;+charset=utf-8 20.6290ms 
2023-06-27 09:47:49.7618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ - - 
2023-06-27 09:47:49.7618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:47:49.7618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:47:49.7618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2389ms 
2023-06-27 09:47:49.7761|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/lunchgroupevent.css was not modified 
2023-06-27 09:47:49.7761|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ - - - 304 - text/css 5.4114ms 
2023-06-27 09:47:49.7761|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.6014ms 
2023-06-27 09:50:10.4865|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ&__browserLink_refresh=60e0e37045984e63a671609ac2dd808d - - 
2023-06-27 09:50:10.4964|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:50:10.4964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Hp4D8hx7bHvtmOZ5A_z6vvnw0TOKrotU6dnfnCeqlhQ&__browserLink_refresh=60e0e37045984e63a671609ac2dd808d - - - 200 1649 text/css 10.0494ms 
2023-06-27 09:50:21.8718|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:50:23.6924|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:50:23.7349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:50:23.7349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:50:23.7349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:50:23.7638|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:50:23.7823|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:50:23.9516|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:50:23.9516|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:50:23.9516|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:50:23.9516|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:50:23.9516|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:50:24.3791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:50:24.4831|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:50:24.5040|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:50:24.5387|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:50:24.5387|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.1455ms 
2023-06-27 09:50:24.5387|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:50:24.5641|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:50:24.5641|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 188.3096ms 
2023-06-27 09:50:24.5857|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:50:24.5857|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:50:24.8474|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:50:25.1880|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:50:25.1969|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:50:25.2594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:50:25.2594|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:50:25.4032|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 141.6884ms. 
2023-06-27 09:50:25.4032|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 820.4721ms 
2023-06-27 09:50:25.4032|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:50:25.4369|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:50:25.4369|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 875.5817ms 
2023-06-27 09:50:25.4369|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.2855ms 
2023-06-27 09:50:25.4464|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:50:25.4596|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.2139ms 
2023-06-27 09:50:28.1042|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:50:28.1042|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:50:28.1042|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:50:28.2259|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:50:28.2424|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:50:28.2424|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:50:28.2648|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 11.6879ms. 
2023-06-27 09:50:28.2648|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 156.0146ms 
2023-06-27 09:50:28.2648|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:50:28.2648|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 164.3627ms 
2023-06-27 09:50:28.2736|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=ojqni_yrFmVKJfOfZpB_7ijQSS1kqWVl-Ee_rJCrcDY - - 
2023-06-27 09:50:28.2736|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:50:28.2736|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:50:28.2736|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5057ms 
2023-06-27 09:50:28.2736|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.5732ms 
2023-06-27 09:50:28.2892|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:50:28.2892|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=ojqni_yrFmVKJfOfZpB_7ijQSS1kqWVl-Ee_rJCrcDY - - - 200 1649 text/css 15.7297ms 
2023-06-27 09:51:41.3000|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=ojqni_yrFmVKJfOfZpB_7ijQSS1kqWVl-Ee_rJCrcDY&__browserLink_refresh=972dc24b5f8243eaaefd2476d539f8af - - 
2023-06-27 09:51:41.3056|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:51:41.3056|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=ojqni_yrFmVKJfOfZpB_7ijQSS1kqWVl-Ee_rJCrcDY&__browserLink_refresh=972dc24b5f8243eaaefd2476d539f8af - - - 200 1507 text/css 5.7010ms 
2023-06-27 09:51:59.0584|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:52:00.8521|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:52:00.8933|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:52:00.8933|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:52:00.8933|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:52:00.9194|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:52:00.9370|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:52:01.1036|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:52:01.1036|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:52:01.1036|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:52:01.1036|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:52:01.1036|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:52:01.8956|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:52:01.9974|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:52:02.0164|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:52:02.0511|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:52:02.0557|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.3753ms 
2023-06-27 09:52:02.0557|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:52:02.0746|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:52:02.0746|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 182.9228ms 
2023-06-27 09:52:02.0864|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:52:02.0864|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:52:02.3246|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:52:02.6381|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:52:02.6559|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:52:02.7154|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:52:02.7154|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:52:02.8599|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 141.7247ms. 
2023-06-27 09:52:02.8599|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 776.4043ms 
2023-06-27 09:52:02.8599|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:52:02.8930|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:52:02.8930|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 820.0564ms 
2023-06-27 09:52:02.8930|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1265ms 
2023-06-27 09:52:02.9018|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:52:02.9181|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.3056ms 
2023-06-27 09:52:05.2895|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:52:05.2895|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:52:05.2895|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:52:05.4100|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:52:05.4313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:52:05.4313|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:52:05.4532|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 10.0969ms. 
2023-06-27 09:52:05.4532|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 159.217ms 
2023-06-27 09:52:05.4532|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:52:05.4532|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 164.8325ms 
2023-06-27 09:52:05.4617|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=9wjb5inOGNSgem8-M6hy0eYG62wstumnA4xJOVZKlfs - - 
2023-06-27 09:52:05.4617|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:52:05.4617|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:52:05.4617|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4152ms 
2023-06-27 09:52:05.4617|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.9412ms 
2023-06-27 09:52:05.4782|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:52:05.4782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=9wjb5inOGNSgem8-M6hy0eYG62wstumnA4xJOVZKlfs - - - 200 1507 text/css 16.6184ms 
2023-06-27 09:52:56.5135|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:52:58.2371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:52:58.2766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:52:58.2766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:52:58.2766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:52:58.3020|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:52:58.3214|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:52:58.4769|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:52:58.4769|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:52:58.4769|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:52:58.4769|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:52:58.4769|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:52:58.8266|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:52:58.9265|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:52:58.9463|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:52:58.9789|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:52:58.9789|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.0669ms 
2023-06-27 09:52:58.9789|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:52:59.0029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 09:52:59.0029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 179.2016ms 
2023-06-27 09:52:59.0130|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:52:59.0130|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 09:52:59.2547|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 09:52:59.5689|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 09:52:59.5857|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 09:52:59.6499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 09:52:59.6499|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 09:52:59.7882|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 136.1389ms. 
2023-06-27 09:52:59.7882|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 778.2207ms 
2023-06-27 09:52:59.7882|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 09:52:59.8212|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:52:59.8212|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 819.6804ms 
2023-06-27 09:52:59.8212|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1494ms 
2023-06-27 09:52:59.8212|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:52:59.8458|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.2608ms 
2023-06-27 09:53:01.1855|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 09:53:01.1855|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:53:01.1855|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 09:53:01.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 09:53:01.3284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 09:53:01.3396|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 14.191ms. 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 163.3728ms 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 169.1672ms 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=riSXgjyXpPqybXGGAN1J4MuVxIfu8lbeRz6FffyOjdw - - 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 09:53:01.3534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4211ms 
2023-06-27 09:53:01.3666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3195ms 
2023-06-27 09:53:01.3666|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 09:53:01.3666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=riSXgjyXpPqybXGGAN1J4MuVxIfu8lbeRz6FffyOjdw - - - 200 1469 text/css 14.6144ms 
2023-06-27 09:59:56.1434|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 09:59:58.9271|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:59:58.9699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:59:58.9699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 09:59:58.9699|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 09:59:58.9962|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 09:59:59.0145|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 09:59:59.1768|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 09:59:59.1768|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 09:59:59.1784|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 09:59:59.1784|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 09:59:59.1784|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 09:59:59.8340|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 09:59:59.9396|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 09:59:59.9589|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 09:59:59.9937|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 09:59:59.9937|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.1685ms 
2023-06-27 09:59:59.9937|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:00:00.0234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:00:00.0234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 192.9806ms 
2023-06-27 10:00:00.0234|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:00:00.0234|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:00.2750|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:00:00.6489|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:00:00.6716|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:00:00.7461|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:00:00.7461|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:00:00.9125|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 163.9047ms. 
2023-06-27 10:00:00.9125|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 881.6742ms 
2023-06-27 10:00:00.9125|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:00:00.9499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 926.4254ms 
2023-06-27 10:00:00.9499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:00.9499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.0219ms 
2023-06-27 10:00:00.9605|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:00.9826|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.0670ms 
2023-06-27 10:00:37.1096|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 10:00:38.9855|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:00:39.0251|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:00:39.0251|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:00:39.0251|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:00:39.0501|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 10:00:39.0687|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 10:00:39.2613|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 10:00:39.2613|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 10:00:39.2613|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 10:00:39.2613|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 10:00:39.2613|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 10:00:39.8347|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:00:39.9279|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:00:39.9462|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:00:39.9780|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:00:39.9780|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 32.1564ms 
2023-06-27 10:00:39.9780|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:00:40.0009|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:00:40.0009|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 169.3210ms 
2023-06-27 10:00:40.0113|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:00:40.0113|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:40.2546|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:00:40.5710|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:00:40.5884|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:00:40.6516|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:00:40.6516|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:00:40.7931|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 139.2845ms. 
2023-06-27 10:00:40.7931|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 784.673ms 
2023-06-27 10:00:40.7931|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:00:40.8267|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:40.8267|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 827.2629ms 
2023-06-27 10:00:40.8267|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 3.9690ms 
2023-06-27 10:00:40.8354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:40.8507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.2522ms 
2023-06-27 10:00:43.7559|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 10:00:43.7603|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:00:43.7603|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 10:00:43.8690|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__p_0 
2023-06-27 10:00:43.8690|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:00:43.8842|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 10:00:43.8842|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 12.0112ms. 
2023-06-27 10:00:43.8842|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 134.6827ms 
2023-06-27 10:00:43.8842|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:00:43.8972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 141.3161ms 
2023-06-27 10:00:43.8972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:43.8972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:43.8972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4588ms 
2023-06-27 10:00:43.8972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4739ms 
2023-06-27 10:00:45.3325|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:45.3325|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4781ms 
2023-06-27 10:00:48.2876|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:00:48.2900|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:00:48.2900|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:48.3107|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:00:48.3204|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:00:48.3204|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:00:48.3377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:00:48.3377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:00:48.3377|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 62.6613ms. 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 108.7794ms 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 116.5304ms 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:48.4012|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2468ms 
2023-06-27 10:00:48.4150|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:48.4150|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2600ms 
2023-06-27 10:00:53.3309|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/CheckUsernameEmail?usernameemail=adminemail@gmail.com - - 
2023-06-27 10:00:53.3309|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder)' 
2023-06-27 10:00:53.3309|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CheckUsernameEmail", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CheckUsernameEmail(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:53.3519|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__usernameemail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[EmailAddress] = @__usernameemail_0 OR [u].[UserName] = @__usernameemail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 10:00:53.3519|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor|Executing JsonResult, writing value of type '<>f__AnonymousType1`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'. 
2023-06-27 10:00:53.3811|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder) in 48.55ms 
2023-06-27 10:00:53.3811|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder)' 
2023-06-27 10:00:53.3811|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/CheckUsernameEmail?usernameemail=adminemail@gmail.com - - - 200 - application/json;+charset=utf-8 50.5970ms 
2023-06-27 10:00:54.3881|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 352 
2023-06-27 10:00:54.3881|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-27 10:00:54.3881|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "InviteToLunchGroup", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] InviteToLunchGroup(Lunch_Tinder.ViewModels.VMInviteLG) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:54.5241|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [InvitesLG] ([LunchGroupName], [Status], [UsernameEmail])
OUTPUT INSERTED.[InviteID]
VALUES (@p0, @p1, @p2); 
2023-06-27 10:00:54.5768|INFO|Lunch_Tinder.Services.MailService|initiating send mail async method 
2023-06-27 10:00:57.2372|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-27 10:00:57.2372|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder) in 2840.9337ms 
2023-06-27 10:00:57.2372|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-27 10:00:57.2372|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 352 - 302 0 - 2849.7159ms 
2023-06-27 10:00:57.2372|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:00:57.2411|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:00:57.2411|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:00:57.2411|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.5163ms. 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 11.2752ms 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:00:57.2411|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 14.3765ms 
2023-06-27 10:00:57.2610|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:57.2610|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2633ms 
2023-06-27 10:00:57.2610|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:57.2610|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4452ms 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 5.3069ms 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 8.7443ms 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:00:59.9131|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:00:59.9387|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 13.9606ms. 
2023-06-27 10:00:59.9387|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 14.2678ms 
2023-06-27 10:00:59.9387|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:00:59.9387|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 15.7493ms 
2023-06-27 10:00:59.9468|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:00:59.9468|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:00:59.9468|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3752ms 
2023-06-27 10:00:59.9468|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.9230ms 
2023-06-27 10:01:36.0069|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=adminemail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:01:36.0069|INFO|Microsoft.AspNetCore.Authorization.DefaultAuthorizationService|Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user. 
2023-06-27 10:01:36.0069|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies was challenged. 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=adminemail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 15.4133ms 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FAcceptLunchGroupInvite%3Femail%3Dadminemail%2540gmail.com%26lunchgroup%3DSoftware%2520Development - - 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 5.2478ms. 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 5.4915ms 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:01:36.0224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FAcceptLunchGroupInvite%3Femail%3Dadminemail%2540gmail.com%26lunchgroup%3DSoftware%2520Development - - - 200 - text/html;+charset=utf-8 8.2978ms 
2023-06-27 10:01:36.0410|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:01:36.0410|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:01:36.0410|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4374ms 
2023-06-27 10:01:36.0410|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2030ms 
2023-06-27 10:01:47.6480|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 366 
2023-06-27 10:01:47.6480|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:01:47.6480|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:01:47.6480|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:01:47.7957|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor|Executing RedirectResult, redirecting to /User/AcceptLunchGroupInvite?email=adminemail%40gmail.com&lunchgroup=Software%20Development. 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 146.522ms 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 366 - 302 0 - 150.8451ms 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=adminemail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:01:47.7957|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:01:47.8039|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:01:52.8545|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:01:55.1085|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:02:01.8002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000), @__lunchgroup_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__email_0 AND [i].[LunchGroupName] = @__lunchgroup_1 
2023-06-27 10:02:25.2082|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:02:34.1171|WARN|Microsoft.EntityFrameworkCore.Query|The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results. 
2023-06-27 10:02:34.1171|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:02:41.1458|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:02:41.1570|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:02:47.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p4='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [LunchGroupUser] ([LunchGroupsGroupId], [UsersUserId])
VALUES (@p0, @p1);
UPDATE [LunchGroups] SET [Description] = @p2, [GroupName] = @p3
OUTPUT 1
WHERE [GroupId] = @p4; 
2023-06-27 10:02:58.5126|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [InvitesLG] SET [LunchGroupName] = @p0, [Status] = @p1, [UsernameEmail] = @p2
OUTPUT 1
WHERE [InviteID] = @p3; 
2023-06-27 10:05:35.5868|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 10:05:37.3609|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:05:37.4042|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:05:37.4042|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:05:37.4042|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:05:37.4296|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 10:05:37.4474|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 10:05:37.6050|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 10:05:37.6050|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 10:05:37.6050|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 10:05:37.6050|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 10:05:37.6050|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 10:05:38.2596|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:05:38.3550|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:05:38.3744|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:05:38.4077|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:05:38.4077|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.4832ms 
2023-06-27 10:05:38.4077|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:05:38.4303|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:05:38.4303|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 173.2444ms 
2023-06-27 10:05:38.4303|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:05:38.4303|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:05:38.6852|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:05:38.9920|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:05:38.9920|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:05:39.0545|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:05:39.0701|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:05:39.2022|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 136.3423ms. 
2023-06-27 10:05:39.2022|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 764.8829ms 
2023-06-27 10:05:39.2022|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:05:39.2386|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 808.2764ms 
2023-06-27 10:05:39.2386|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:05:39.2436|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1270ms 
2023-06-27 10:05:39.2436|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:05:39.2623|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.3287ms 
2023-06-27 10:05:40.9700|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:05:40.9700|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:05:40.9773|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:05:41.0444|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:05:41.0981|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:05:41.1086|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:05:41.1160|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:05:41.1160|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:05:41.1160|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:05:41.1883|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 60.7419ms. 
2023-06-27 10:05:41.1883|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 210.971ms 
2023-06-27 10:05:41.1883|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:05:41.1883|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 220.6295ms 
2023-06-27 10:05:41.1987|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:05:41.1987|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2963ms 
2023-06-27 10:05:41.1987|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:05:41.1987|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3274ms 
2023-06-27 10:05:44.3661|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=adminemail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:05:44.3661|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:05:44.3661|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:05:52.0280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:05:52.0280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:05:52.0280|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000), @__lunchgroup_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__email_0 AND [i].[LunchGroupName] = @__lunchgroup_1 
2023-06-27 10:05:52.0460|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:05:57.0276|WARN|Microsoft.EntityFrameworkCore.Query|The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results. 
2023-06-27 10:05:57.0276|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:05:57.0448|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:05:57.0448|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:05:57.1831|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p4='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [LunchGroupUser] ([LunchGroupsGroupId], [UsersUserId])
VALUES (@p0, @p1);
UPDATE [LunchGroups] SET [Description] = @p2, [GroupName] = @p3
OUTPUT 1
WHERE [GroupId] = @p4; 
2023-06-27 10:06:23.2237|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 10:06:25.0954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:06:25.1361|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:06:25.1361|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:06:25.1361|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:06:25.1594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 10:06:25.1794|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 10:06:25.3366|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 10:06:25.3366|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 10:06:25.3366|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 10:06:25.3366|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 10:06:25.3366|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 10:06:25.9927|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:06:26.0910|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:06:26.1114|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:06:26.1499|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:06:26.1499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 38.7059ms 
2023-06-27 10:06:26.1499|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:06:26.1731|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:06:26.1731|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 183.1801ms 
2023-06-27 10:06:26.1921|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:06:26.1921|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:06:26.4301|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:06:26.7419|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:06:26.7577|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:06:26.8216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:06:26.8216|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:06:26.9653|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 141.3947ms. 
2023-06-27 10:06:26.9653|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 776.268ms 
2023-06-27 10:06:26.9653|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:06:27.0009|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:06:27.0009|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 829.4833ms 
2023-06-27 10:06:27.0009|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1733ms 
2023-06-27 10:06:27.0087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:06:27.0232|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.4833ms 
2023-06-27 10:06:29.9096|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 10:06:29.9133|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:06:29.9133|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 10:06:30.0211|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__p_0 
2023-06-27 10:06:30.0245|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:06:30.0245|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 10:06:30.0449|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 11.9872ms. 
2023-06-27 10:06:30.0449|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 130.4252ms 
2023-06-27 10:06:30.0449|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:06:30.0449|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 136.6725ms 
2023-06-27 10:06:30.0555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:06:30.0555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:06:30.0555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5032ms 
2023-06-27 10:06:30.0555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.7431ms 
2023-06-27 10:06:31.1753|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:06:31.1753|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3698ms 
2023-06-27 10:06:36.2592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:06:36.2592|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:06:36.2592|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:06:36.2831|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:06:36.2918|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:06:36.2918|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:06:36.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:06:36.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:06:36.3087|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 60.5036ms. 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 105.573ms 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 113.0491ms 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:06:36.3699|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2079ms 
2023-06-27 10:06:36.3836|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:06:36.3836|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4411ms 
2023-06-27 10:08:14.1260|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 10:08:16.5716|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:08:16.6147|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:08:16.6174|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:08:16.6174|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:08:16.6411|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 10:08:16.6603|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 10:08:16.8475|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 10:08:16.8475|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 10:08:16.8475|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 10:08:16.8501|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 10:08:16.8501|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 10:08:17.4285|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:08:17.5249|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:08:17.5434|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:08:17.5767|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:08:17.5767|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.9728ms 
2023-06-27 10:08:17.5767|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:08:17.5999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:08:17.6011|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 174.7080ms 
2023-06-27 10:08:17.6194|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:08:17.6194|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:08:17.8972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:08:18.2246|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:08:18.2423|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:08:18.3044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:08:18.3044|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:08:18.4594|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 152.9818ms. 
2023-06-27 10:08:18.4630|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 842.8626ms 
2023-06-27 10:08:18.4630|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:08:18.5046|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 904.5476ms 
2023-06-27 10:08:18.5046|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:08:18.5094|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.5155ms 
2023-06-27 10:08:18.5094|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:08:18.5437|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 31.1876ms 
2023-06-27 10:08:21.7366|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:08:21.7415|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:08:21.7415|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:08:21.8107|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:08:21.8635|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:08:21.8743|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:08:21.8826|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:08:21.8826|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:08:21.8826|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:08:21.9552|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 59.2257ms. 
2023-06-27 10:08:21.9552|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 211.0473ms 
2023-06-27 10:08:21.9552|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:08:21.9552|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 221.2808ms 
2023-06-27 10:08:21.9666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:08:21.9666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3869ms 
2023-06-27 10:08:21.9666|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:08:21.9773|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.9683ms 
2023-06-27 10:08:27.0782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:08:27.0782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3431ms 
2023-06-27 10:10:27.0058|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 10:10:28.8414|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:10:28.8827|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:10:28.8827|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 10:10:28.8827|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 10:10:28.9084|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 10:10:28.9258|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 10:10:29.0796|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 10:10:29.0796|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 10:10:29.0796|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 10:10:29.0796|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 10:10:29.0796|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 10:10:29.8667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:10:29.9650|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:10:29.9855|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:10:30.0210|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:10:30.0252|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 36.0276ms 
2023-06-27 10:10:30.0252|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:10:30.0443|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:10:30.0443|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 182.0349ms 
2023-06-27 10:10:30.0550|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:10:30.0550|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:10:30.3000|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:10:30.6027|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:10:30.6189|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:10:30.6648|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:10:30.6798|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:10:30.8171|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 141.3568ms. 
2023-06-27 10:10:30.8207|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 764.8597ms 
2023-06-27 10:10:30.8207|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:10:30.8543|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 809.9833ms 
2023-06-27 10:10:30.8543|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:10:30.8543|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.2344ms 
2023-06-27 10:10:30.8543|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:10:30.8743|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.3860ms 
2023-06-27 10:10:34.5165|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 10:10:34.5165|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:10:34.5165|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 10:10:34.6270|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__p_0 
2023-06-27 10:10:34.6270|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:10:34.6407|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 10.7089ms. 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 129.6785ms 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 135.9871ms 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:10:34.6511|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3828ms 
2023-06-27 10:10:34.6641|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.9336ms 
2023-06-27 10:10:36.0601|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:10:36.0601|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3841ms 
2023-06-27 10:10:36.8046|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:10:36.8046|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:10:36.8046|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:10:36.8270|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:10:36.8364|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:10:36.8364|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:10:36.8535|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:10:36.8535|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:10:36.8535|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:10:36.9123|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 57.7587ms. 
2023-06-27 10:10:36.9123|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 103.1917ms 
2023-06-27 10:10:36.9123|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:10:36.9152|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 110.6462ms 
2023-06-27 10:10:36.9152|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:10:36.9152|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3794ms 
2023-06-27 10:10:36.9287|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:10:36.9287|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6631ms 
2023-06-27 10:10:40.9869|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/CheckUsernameEmail?usernameemail=useremail@gmail.com - - 
2023-06-27 10:10:40.9869|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder)' 
2023-06-27 10:10:40.9869|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CheckUsernameEmail", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CheckUsernameEmail(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:10:41.0057|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__usernameemail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[EmailAddress] = @__usernameemail_0 OR [u].[UserName] = @__usernameemail_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 10:10:41.0072|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor|Executing JsonResult, writing value of type '<>f__AnonymousType1`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'. 
2023-06-27 10:10:41.0346|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder) in 46.443ms 
2023-06-27 10:10:41.0346|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.CheckUsernameEmail (Lunch Tinder)' 
2023-06-27 10:10:41.0346|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/CheckUsernameEmail?usernameemail=useremail@gmail.com - - - 200 - application/json;+charset=utf-8 47.8462ms 
2023-06-27 10:10:41.7076|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 351 
2023-06-27 10:10:41.7076|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-27 10:10:41.7164|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "InviteToLunchGroup", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] InviteToLunchGroup(Lunch_Tinder.ViewModels.VMInviteLG) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:10:41.8381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [InvitesLG] ([LunchGroupName], [Status], [UsernameEmail])
OUTPUT INSERTED.[InviteID]
VALUES (@p0, @p1, @p2); 
2023-06-27 10:10:41.8859|INFO|Lunch_Tinder.Services.MailService|initiating send mail async method 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder) in 2139.093ms 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 351 - 302 0 - 2148.2374ms 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:10:43.8554|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:10:43.8554|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 10:10:43.8554|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 10:10:43.8554|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 8.9808ms. 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 12.5136ms 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 15.4138ms 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:10:43.8712|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2191ms 
2023-06-27 10:10:43.8859|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:10:43.8859|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.2906ms 
2023-06-27 10:11:00.9386|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:11:00.9386|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:11:00.9386|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:11:10.7875|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:11:18.0322|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:11:27.9375|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000), @__lunchgroup_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__email_0 AND [i].[LunchGroupName] = @__lunchgroup_1 
2023-06-27 10:11:38.6875|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder) in 49678.9408ms 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 49685.8731ms 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:11:50.6216|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 10:11:50.6216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 10:11:50.6216|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 10:11:50.6312|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 10:11:50.6312|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 10:11:50.6312|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 2.6657ms. 
2023-06-27 10:11:50.6312|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 4.4049ms 
2023-06-27 10:11:50.6312|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 10:11:50.6312|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 9.3868ms 
2023-06-27 10:11:50.6667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:11:50.6667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2162ms 
2023-06-27 10:11:50.6667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:11:50.6667|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.4621ms 
2023-06-27 10:11:54.4013|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-27 10:11:54.4013|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:11:54.4013|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 2911.7598ms 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 2915.1184ms 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:11:57.3159|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:11:57.3200|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 16.0339ms. 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 16.3392ms 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 17.8288ms 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3073ms 
2023-06-27 10:11:57.3355|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6353ms 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Authorization.DefaultAuthorizationService|Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user. 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies was challenged. 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 8.2116ms 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FAcceptLunchGroupInvite%3Femail%3Duseremail%2540gmail.com%26lunchgroup%3DSoftware%2520Development - - 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:12:01.9616|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 5.2479ms. 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 5.5714ms 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FAcceptLunchGroupInvite%3Femail%3Duseremail%2540gmail.com%26lunchgroup%3DSoftware%2520Development - - - 200 - text/html;+charset=utf-8 7.2226ms 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3409ms 
2023-06-27 10:12:01.9788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.1596ms 
2023-06-27 10:12:09.0268|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 364 
2023-06-27 10:12:09.0268|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:12:09.0268|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:12:09.0268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:12:09.1682|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor|Executing RedirectResult, redirecting to /User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development. 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 139.9465ms 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 364 - 302 0 - 143.4473ms 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:12:09.1682|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:12:13.9269|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:12:19.7523|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:12:21.0419|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000), @__lunchgroup_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__email_0 AND [i].[LunchGroupName] = @__lunchgroup_1 
2023-06-27 10:12:22.4680|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:12:44.8722|WARN|Microsoft.EntityFrameworkCore.Query|The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results. 
2023-06-27 10:12:44.8722|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:12:51.4576|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:12:51.4661|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:12:51.5174|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p4='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [LunchGroupUser] ([LunchGroupsGroupId], [UsersUserId])
VALUES (@p0, @p1);
UPDATE [LunchGroups] SET [Description] = @p2, [GroupName] = @p3
OUTPUT 1
WHERE [GroupId] = @p4; 
2023-06-27 10:13:12.7798|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [InvitesLG] SET [LunchGroupName] = @p0, [Status] = @p1, [UsernameEmail] = @p2
OUTPUT 1
WHERE [InviteID] = @p3; 
2023-06-27 10:13:44.5040|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/ViewLunchGroup?groupName=Software%20Development. 
2023-06-27 10:13:44.5071|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder) in 95331.121ms 
2023-06-27 10:13:44.5071|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:13:44.5071|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 95340.7822ms 
2023-06-27 10:13:44.5262|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - 
2023-06-27 10:13:44.5262|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-27 10:13:44.5262|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ViewLunchGroup", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ViewLunchGroup(System.String) on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 10:13:44.5835|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:13:44.6017|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 10:13:44.6017|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName], [t2].[LunchGroupsGroupId], [t2].[UsersUserId], [t2].[UserId], [t2].[EmailAddress], [t2].[Password], [t2].[UserName], [t2].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime], [t1].[EventsEventId] AS [EventsEventId0], [t1].[RestaurantOptionsRestaurantID], [t1].[RestaurantID], [t1].[RestaurantDescription], [t1].[RestaurantName]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
    LEFT JOIN (
        SELECT [e1].[EventsEventId], [e1].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
        FROM [EventRestaurant] AS [e1]
        INNER JOIN [Restaurants] AS [r] ON [e1].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
    ) AS [t1] ON [e0].[EventId] = [t1].[EventsEventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t2] ON [t].[GroupId] = [t2].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t2].[LunchGroupsGroupId], [t2].[UsersUserId] 
2023-06-27 10:13:44.6017|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml. 
2023-06-27 10:13:44.6257|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml executed in 12.9489ms. 
2023-06-27 10:13:44.6257|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder) in 97.6878ms 
2023-06-27 10:13:44.6257|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-27 10:13:44.6257|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 103.0644ms 
2023-06-27 10:13:44.6417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - 
2023-06-27 10:13:44.6417|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/ViewLunchGroupDetailsLGU.css was not modified 
2023-06-27 10:13:44.6417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - - 304 - text/css 5.6939ms 
2023-06-27 10:13:44.6501|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:13:44.6501|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2531ms 
2023-06-27 10:13:44.6501|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:13:44.6501|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8861ms 
2023-06-27 10:18:16.7234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-27 10:18:16.7350|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:18:16.7350|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:18:21.7417|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 10:18:22.1366|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:18:22.4362|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000), @__lunchgroup_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__email_0 AND [i].[LunchGroupName] = @__lunchgroup_1 
2023-06-27 10:18:23.6503|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:18:25.9950|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 10:18:28.4398|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [InvitesLG] SET [LunchGroupName] = @p0, [Status] = @p1, [UsernameEmail] = @p2
OUTPUT 1
WHERE [InviteID] = @p3; 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/ViewLunchGroup?groupName=Software%20Development. 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder) in 16476.2008ms 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 16488.0840ms 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ViewLunchGroup", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ViewLunchGroup(System.String) on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 10:18:33.2111|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 10:18:33.2111|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName], [t2].[LunchGroupsGroupId], [t2].[UsersUserId], [t2].[UserId], [t2].[EmailAddress], [t2].[Password], [t2].[UserName], [t2].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime], [t1].[EventsEventId] AS [EventsEventId0], [t1].[RestaurantOptionsRestaurantID], [t1].[RestaurantID], [t1].[RestaurantDescription], [t1].[RestaurantName]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
    LEFT JOIN (
        SELECT [e1].[EventsEventId], [e1].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
        FROM [EventRestaurant] AS [e1]
        INNER JOIN [Restaurants] AS [r] ON [e1].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
    ) AS [t1] ON [e0].[EventId] = [t1].[EventsEventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t2] ON [t].[GroupId] = [t2].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t2].[LunchGroupsGroupId], [t2].[UsersUserId] 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml. 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml executed in 2.7188ms. 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder) in 4.6874ms 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-27 10:18:33.2111|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 9.2079ms 
2023-06-27 10:18:33.2507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:18:33.2507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2287ms 
2023-06-27 10:18:33.2507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:18:33.2574|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.2359ms 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 0.5347ms 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 1.8451ms 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 3.1354ms. 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 3.5276ms 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:18:36.2414|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 5.1096ms 
2023-06-27 10:18:36.2604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:18:36.2604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:18:36.2604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4495ms 
2023-06-27 10:18:36.2604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.8358ms 
2023-06-27 10:18:40.1131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-27 10:18:40.1131|INFO|Microsoft.AspNetCore.Authorization.DefaultAuthorizationService|Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user. 
2023-06-27 10:18:40.1131|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies was challenged. 
2023-06-27 10:18:40.1131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 302 0 - 1.7447ms 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FProfile - - 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 2.955ms. 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 3.3343ms 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Login?ReturnUrl=%2FUser%2FProfile - - - 200 - text/html;+charset=utf-8 4.8258ms 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 10:18:40.1167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2545ms 
2023-06-27 10:18:40.1345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.4471ms 
2023-06-27 14:59:36.5082|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 14:59:40.2862|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (44ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 14:59:40.3483|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 14:59:40.3483|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 14:59:40.3483|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 14:59:40.3856|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 14:59:40.4123|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 14:59:40.6831|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 14:59:40.6831|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 14:59:40.6851|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 14:59:40.6851|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 14:59:40.6851|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 14:59:41.3779|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 14:59:41.5101|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 14:59:41.5402|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 14:59:41.5876|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 14:59:41.8036|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 219.9406ms. 
2023-06-27 14:59:41.8093|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 268.7728ms 
2023-06-27 14:59:41.8093|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 14:59:41.8806|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 14:59:41.8806|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 14:59:41.8897|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 515.8751ms 
2023-06-27 14:59:41.8897|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 10.2304ms 
2023-06-27 14:59:41.9112|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.6271ms 
2023-06-27 14:59:54.8925|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 
2023-06-27 14:59:54.8925|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 14:59:54.8925|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 14:59:55.3987|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 14:59:55.5833|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 692.5559ms 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 14:59:55.5907|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 - 302 0 - 709.1711ms 
2023-06-27 14:59:55.6061|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 14:59:55.6061|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 14:59:55.6497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 14:59:55.7937|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 14:59:55.7937|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 14:59:55.8585|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 14:59:55.8585|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 14:59:55.8908|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 31.4628ms. 
2023-06-27 14:59:55.8908|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 283.9455ms 
2023-06-27 14:59:55.8908|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 14:59:55.8908|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 298.4435ms 
2023-06-27 14:59:55.9070|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 14:59:55.9070|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.8451ms 
2023-06-27 14:59:55.9070|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=WLJh6RNFL_na_FwfncOE1gyFVzuYD88KVKv8NEV9xIo - - 
2023-06-27 14:59:55.9070|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 14:59:55.9070|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.2955ms 
2023-06-27 14:59:55.9189|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/AdminHome.css was not modified 
2023-06-27 14:59:55.9189|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=WLJh6RNFL_na_FwfncOE1gyFVzuYD88KVKv8NEV9xIo - - - 304 - text/css 8.6407ms 
2023-06-27 15:00:00.1190|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - 
2023-06-27 15:00:00.1227|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:00:00.1227|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:00:00.1463|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:00:00.1560|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 15:00:00.1560|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:00:00.1754|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 15:00:00.1754|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 15:00:00.1899|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 15:00:00.2484|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 58.7325ms. 
2023-06-27 15:00:00.2484|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 123.4579ms 
2023-06-27 15:00:00.2484|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:00:00.2484|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - - 200 - text/html;+charset=utf-8 134.1879ms 
2023-06-27 15:00:00.2655|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:00:00.2655|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:00:00.2655|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3547ms 
2023-06-27 15:00:00.2655|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8974ms 
2023-06-27 15:00:01.9674|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:00:01.9674|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.3237ms 
2023-06-27 15:00:03.0317|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-27 15:00:03.0317|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-27 15:00:03.0317|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:00:03.0452|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 15:00:03.0452|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 33.5153ms. 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 45.3062ms 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 49.6647ms 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4252ms 
2023-06-27 15:00:03.0791|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/profile.css was not modified 
2023-06-27 15:00:03.0896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - - 304 - text/css 0.9958ms 
2023-06-27 15:00:03.0896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.2289ms 
2023-06-27 15:18:47.4517|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:18:51.0463|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:18:51.1080|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:18:51.1080|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:18:51.1080|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:18:51.1428|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:18:51.1675|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:18:51.3962|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:18:51.3962|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:18:51.3962|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:18:51.3962|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:18:51.3962|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:18:52.0831|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:18:52.2193|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:18:52.2461|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:18:52.2973|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:18:52.2973|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 51.9039ms 
2023-06-27 15:18:52.2973|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:18:52.3354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:18:52.3354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 258.3658ms 
2023-06-27 15:18:52.3553|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:18:52.3553|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:18:52.7096|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:18:53.1386|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:18:53.1606|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:18:53.2428|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:18:53.2514|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:18:53.4313|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 185.7084ms. 
2023-06-27 15:18:53.4363|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1079.6417ms 
2023-06-27 15:18:53.4363|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:18:53.4740|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:18:53.4740|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1140.9351ms 
2023-06-27 15:18:53.4802|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.1866ms 
2023-06-27 15:18:53.4802|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:18:53.5053|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 18.9684ms 
2023-06-27 15:19:00.6995|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - 
2023-06-27 15:19:00.6995|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:19:00.6995|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:19:00.7831|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:19:00.8455|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (46ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 15:19:00.8590|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:19:00.8590|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 15:19:00.8732|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 15:19:00.8732|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 15:19:00.9600|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 74.7126ms. 
2023-06-27 15:19:00.9600|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 251.3682ms 
2023-06-27 15:19:00.9600|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:19:00.9600|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - - 200 - text/html;+charset=utf-8 264.2862ms 
2023-06-27 15:19:00.9744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:19:00.9744|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3889ms 
2023-06-27 15:19:00.9848|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:19:00.9848|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.2962ms 
2023-06-27 15:19:43.4675|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-27 15:19:43.4675|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-27 15:19:43.4675|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:19:43.4878|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 15:19:43.4878|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-27 15:19:43.5213|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 33.1188ms. 
2023-06-27 15:19:43.5213|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 46.3943ms 
2023-06-27 15:19:43.5213|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-27 15:19:43.5213|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 59.0393ms 
2023-06-27 15:19:43.5313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:19:43.5313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:19:43.5313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3760ms 
2023-06-27 15:19:43.5313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4626ms 
2023-06-27 15:43:15.4261|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:43:18.1684|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:43:18.2089|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:43:18.2113|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:43:18.2113|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:43:18.2342|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:43:18.2522|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:43:18.4136|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:43:18.4136|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:43:18.4136|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:43:18.4136|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:43:18.4136|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:43:19.0223|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:43:19.1232|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-27 15:43:19.1323|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:43:19.1522|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:43:19.1761|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 15:43:19.3331|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 161.3458ms. 
2023-06-27 15:43:19.3381|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 185.6139ms 
2023-06-27 15:43:19.3381|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:43:19.3757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:43:19.3757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:43:19.3825|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 362.9782ms 
2023-06-27 15:43:19.3825|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.9694ms 
2023-06-27 15:43:19.3978|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.0798ms 
2023-06-27 15:43:29.2239|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 
2023-06-27 15:43:29.2257|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-27 15:43:29.2257|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:43:29.2257|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:43:29.6898|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 15:43:29.8629|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 638.2589ms 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:43:29.8687|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 259 - 302 0 - 654.4686ms 
2023-06-27 15:43:29.8812|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:43:29.8812|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:43:29.9234|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:43:30.0518|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:43:30.0645|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:43:30.1136|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:43:30.1136|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:43:30.1407|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 26.3125ms. 
2023-06-27 15:43:30.1407|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 258.8054ms 
2023-06-27 15:43:30.1407|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:43:30.1407|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 271.3371ms 
2023-06-27 15:43:30.1581|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:43:30.1581|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2367ms 
2023-06-27 15:43:30.1581|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:43:30.1646|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.0356ms 
2023-06-27 15:43:35.3327|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-27 15:43:35.3362|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:43:35.3362|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:43:35.3580|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:43:35.3661|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-27 15:43:35.3661|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:43:35.3842|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__groupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__groupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-27 15:43:35.3842|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 15:43:35.3971|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-27 15:43:35.4498|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 53.0275ms. 
2023-06-27 15:43:35.4498|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 111.6808ms 
2023-06-27 15:43:35.4498|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-27 15:43:35.4498|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 124.1643ms 
2023-06-27 15:43:35.4663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:43:35.4663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:43:35.4663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1981ms 
2023-06-27 15:43:35.4663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2805ms 
2023-06-27 15:43:38.3389|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:43:38.3389|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4108ms 
2023-06-27 15:43:40.0255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 15:43:40.0255|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:43:40.0255|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 15:43:40.0465|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 15:43:40.0604|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 15:43:40.0604|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 10.6821ms. 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 46.2227ms 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 49.5803ms 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:43:40.0737|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3129ms 
2023-06-27 15:43:40.0871|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.8875ms 
2023-06-27 15:44:28.0851|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:44:29.8840|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:44:29.9239|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:44:29.9265|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:44:29.9265|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:44:29.9487|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:44:29.9663|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:44:30.1234|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:44:30.1234|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:44:30.1234|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:44:30.1234|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:44:30.1234|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:44:30.8326|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:44:30.9339|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:44:30.9551|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:44:30.9885|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:44:30.9921|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.798ms 
2023-06-27 15:44:30.9921|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:44:31.0132|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:44:31.0132|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 183.7877ms 
2023-06-27 15:44:31.0253|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:44:31.0253|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:44:31.3103|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:44:31.6186|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:44:31.6360|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:44:31.6986|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:44:31.6986|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:44:31.8437|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 142.1376ms. 
2023-06-27 15:44:31.8437|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 821.3074ms 
2023-06-27 15:44:31.8437|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:44:31.8796|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 866.3970ms 
2023-06-27 15:44:31.8796|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:44:31.8796|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1886ms 
2023-06-27 15:44:31.8796|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:44:31.9031|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.7293ms 
2023-06-27 15:44:34.2058|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 15:44:34.2095|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:44:34.2095|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 15:44:34.3283|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 15:44:34.3507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 15:44:34.3507|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 15:44:34.3754|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 14.3926ms. 
2023-06-27 15:44:34.3754|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 165.2011ms 
2023-06-27 15:44:34.3754|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:44:34.3754|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 171.0834ms 
2023-06-27 15:44:34.3846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:44:34.3846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:44:34.3846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3749ms 
2023-06-27 15:44:34.3846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.0304ms 
2023-06-27 15:46:47.0046|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:46:48.6935|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:46:48.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:46:48.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:46:48.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:46:48.7558|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:46:48.7731|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:46:48.9320|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:46:48.9320|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:46:48.9320|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:46:48.9320|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:46:48.9320|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:46:49.6499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:46:49.7524|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:46:49.7719|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:46:49.8041|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:46:49.8041|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 32.6772ms 
2023-06-27 15:46:49.8041|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:46:49.8285|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:46:49.8285|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 181.8679ms 
2023-06-27 15:46:49.8524|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:46:49.8524|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:46:50.0936|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:46:50.4042|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:46:50.4137|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:46:50.4711|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:46:50.4769|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:46:50.6130|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 139.9809ms. 
2023-06-27 15:46:50.6130|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 763.5873ms 
2023-06-27 15:46:50.6130|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:46:50.6476|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 819.1059ms 
2023-06-27 15:46:50.6476|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:46:50.6476|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 3.9355ms 
2023-06-27 15:46:50.6476|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:46:50.6734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.4863ms 
2023-06-27 15:46:52.4507|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 15:46:52.4507|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:46:52.4560|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 15:46:52.5724|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 15:46:52.5889|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 15:46:52.5998|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 15:46:52.5998|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 11.5134ms. 
2023-06-27 15:46:52.5998|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 154.9582ms 
2023-06-27 15:46:52.5998|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:46:52.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 161.6029ms 
2023-06-27 15:46:52.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:46:52.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:46:52.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4596ms 
2023-06-27 15:46:52.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.6223ms 
2023-06-27 15:46:54.5549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 - - 
2023-06-27 15:46:54.5549|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-27 15:46:54.5549|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-27 15:46:54.5549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 - - - 405 0 - 2.2596ms 
2023-06-27 15:50:47.9232|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:50:49.6370|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:50:49.6769|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:50:49.6769|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:50:49.6769|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:50:49.7009|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:50:49.7185|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:50:49.8794|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:50:49.8794|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:50:49.8794|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:50:49.8794|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:50:49.8794|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:50:50.5315|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:50:50.6263|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:50:50.6459|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:50:50.6793|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:50:50.6793|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.7953ms 
2023-06-27 15:50:50.6793|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:50:50.7032|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:50:50.7032|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 174.5211ms 
2023-06-27 15:50:50.7032|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:50:50.7032|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:50:50.9645|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:50:51.2751|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:50:51.2842|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:50:51.3399|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:50:51.3466|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:50:51.4787|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 136.8411ms. 
2023-06-27 15:50:51.4787|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 767.7411ms 
2023-06-27 15:50:51.4787|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:50:51.5125|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 809.2962ms 
2023-06-27 15:50:51.5125|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:50:51.5175|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 3.9288ms 
2023-06-27 15:50:51.5175|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:50:51.5364|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.9911ms 
2023-06-27 15:50:54.9228|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 15:50:54.9228|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:50:54.9228|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 15:50:55.0403|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 15:50:55.0565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 15:50:55.0679|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 13.9622ms. 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 154.1675ms 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 162.1859ms 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:50:55.0815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3677ms 
2023-06-27 15:50:55.0945|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8990ms 
2023-06-27 15:50:56.5143|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 - - 
2023-06-27 15:50:56.5162|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-27 15:50:56.5162|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-27 15:50:56.5162|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 - - - 405 0 - 2.2017ms 
2023-06-27 15:53:45.9911|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 15:53:47.6932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:53:47.7337|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:53:47.7337|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 15:53:47.7337|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 15:53:47.7579|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 15:53:47.7751|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 15:53:47.9361|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 15:53:47.9361|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 15:53:47.9375|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 15:53:47.9375|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 15:53:47.9375|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 15:53:48.7139|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 15:53:48.8117|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:53:48.8309|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 15:53:48.8620|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-27 15:53:48.8620|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 31.4841ms 
2023-06-27 15:53:48.8620|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 15:53:48.8882|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-27 15:53:48.8898|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 178.3538ms 
2023-06-27 15:53:48.9205|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:53:48.9205|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-27 15:53:49.1588|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 15:53:49.4680|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-27 15:53:49.4774|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-27 15:53:49.5335|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-27 15:53:49.5335|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-27 15:53:49.6737|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 137.7879ms. 
2023-06-27 15:53:49.6737|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 757.0717ms 
2023-06-27 15:53:49.6737|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-27 15:53:49.7092|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:53:49.7092|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 821.3555ms 
2023-06-27 15:53:49.7092|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.9958ms 
2023-06-27 15:53:49.7185|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:53:49.7343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.8126ms 
2023-06-27 15:53:54.8881|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 15:53:54.8919|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:53:54.8919|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 15:53:55.0150|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 15:53:55.0331|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 15:53:55.0331|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 15:53:55.0570|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 12.693ms. 
2023-06-27 15:53:55.0570|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 163.9796ms 
2023-06-27 15:53:55.0570|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 15:53:55.0570|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 170.6399ms 
2023-06-27 15:53:55.0672|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 15:53:55.0672|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 15:53:55.0672|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.6200ms 
2023-06-27 15:53:55.0672|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.8219ms 
2023-06-27 15:53:56.8694|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 15:53:56.8694|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 15:53:56.8799|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Lunch_Tinder.ViewModels.VMEventPage, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:11:06.1782|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 1029298.87ms 
2023-06-27 16:11:06.1782|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:11:06.1782|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.NullReferenceException", "TargetSite":"Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Lunch_Tinder.ViewModels.VMEventPage, Int32)", "Message":"Object reference not set to an instance of an object.", "Data":{}, "Source":"Lunch Tinder", "HResult":-2147467261, "StackTrace":"   at Lunch_Tinder.Controllers.EventController.VoteInEvent(VMEventPage model, Int32 restaurantid) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\EventController.cs:line 184\r\n   at lambda_method327(Closure , Object , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-27 16:11:06.5346|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 application/x-www-form-urlencoded 0 - 500 - text/html;+charset=utf-8 1029666.9991ms 
2023-06-27 16:11:06.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:11:06.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:11:06.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2632ms 
2023-06-27 16:11:06.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.0516ms 
2023-06-27 16:11:11.3978|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:11:11.3978|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4940ms 
2023-06-27 16:30:23.8592|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:30:26.1058|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:30:26.1497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:30:26.1525|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:30:26.1525|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:30:26.1766|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:30:26.1954|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:30:26.3709|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:30:26.3709|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:30:26.3724|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:30:26.3724|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:30:26.3724|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:30:27.2900|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:30:27.3905|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-27 16:30:27.3905|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:30:27.4163|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:30:27.4432|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-27 16:30:27.6245|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 184.8288ms. 
2023-06-27 16:30:27.6245|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 211.7063ms 
2023-06-27 16:30:27.6245|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:30:27.6842|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:30:27.6842|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:30:27.6842|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 400.9089ms 
2023-06-27 16:30:27.6842|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.4588ms 
2023-06-27 16:30:27.7247|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 40.5371ms 
2023-06-27 16:30:42.1718|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 258 
2023-06-27 16:30:42.1718|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-27 16:30:42.1718|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:30:42.1718|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:30:42.6251|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 16:30:42.8021|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-27 16:30:42.8021|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-27 16:30:42.8021|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:30:42.8021|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 629.4102ms 
2023-06-27 16:30:42.8021|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:30:42.8128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:30:42.8128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 258 - 302 0 - 645.7065ms 
2023-06-27 16:30:42.8128|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:30:42.8128|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:30:42.8653|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:30:43.0026|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:30:43.0397|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:30:43.0663|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 26.9809ms. 
2023-06-27 16:30:43.0663|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 242.4254ms 
2023-06-27 16:30:43.0663|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:30:43.0663|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 256.9263ms 
2023-06-27 16:30:43.0850|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:30:43.0850|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/LGUser.css?v=amL6XoNSIqS4Bt3RqcUjE83un9cLHgY6UxX2ZPA9808 - - 
2023-06-27 16:30:43.0850|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2955ms 
2023-06-27 16:30:43.0850|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:30:43.0922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2977ms 
2023-06-27 16:30:43.0922|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/LGUser.css was not modified 
2023-06-27 16:30:43.0922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/LGUser.css?v=amL6XoNSIqS4Bt3RqcUjE83un9cLHgY6UxX2ZPA9808 - - - 304 - text/css 7.6246ms 
2023-06-27 16:30:46.8886|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:30:46.8886|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:30:46.8886|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:30:46.9118|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:30:46.9399|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:30:46.9399|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 9.5352ms. 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 58.2329ms 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 62.9696ms 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3042ms 
2023-06-27 16:30:46.9503|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8932ms 
2023-06-27 16:30:48.0170|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:30:48.0170|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:30:48.0170|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Lunch_Tinder.ViewModels.VMEventPage, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:32:00.0149|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:32:01.7563|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:32:01.7972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:32:01.7972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:32:01.7972|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:32:01.8230|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:32:01.8413|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:32:02.0042|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:32:02.0042|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:32:02.0042|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:32:02.0042|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:32:02.0042|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:32:02.3593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:32:02.4548|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:32:02.4746|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:32:02.5082|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:32:02.5121|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 34.1236ms 
2023-06-27 16:32:02.5121|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:32:02.5338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:32:02.5338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 178.8139ms 
2023-06-27 16:32:02.5448|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:32:02.5448|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:32:02.7901|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:32:03.1643|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:32:03.2307|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:32:03.3987|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 172.7879ms. 
2023-06-27 16:32:03.4024|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 856.8466ms 
2023-06-27 16:32:03.4024|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:32:03.4327|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 898.9350ms 
2023-06-27 16:32:03.4470|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:32:03.4516|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.5848ms 
2023-06-27 16:32:03.4516|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:32:03.4715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.2683ms 
2023-06-27 16:32:05.3792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:32:05.3792|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:32:05.3792|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:32:05.4417|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:32:05.4695|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:32:05.4695|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 13.0494ms. 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 99.8067ms 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 105.6321ms 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:32:05.4834|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3585ms 
2023-06-27 16:32:05.4989|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.2370ms 
2023-06-27 16:32:07.8392|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?model=Lunch_Tinder.ViewModels.VMEventPage&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:32:07.8411|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:32:07.8411|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Lunch_Tinder.ViewModels.VMEventPage, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:33:50.0986|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:33:51.9780|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:33:52.0214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:33:52.0214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:33:52.0214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:33:52.0466|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:33:52.0641|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:33:52.2368|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:33:52.2368|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:33:52.2368|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:33:52.2368|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:33:52.2368|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:33:52.8079|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:33:52.9106|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:33:52.9319|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:33:52.9664|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:33:52.9664|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 34.9415ms 
2023-06-27 16:33:52.9664|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:33:52.9904|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:33:52.9904|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 186.6756ms 
2023-06-27 16:33:53.0011|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:33:53.0011|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:33:53.2571|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:33:53.6302|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:33:53.6873|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:33:53.8341|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 150.9249ms. 
2023-06-27 16:33:53.8341|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 836.3386ms 
2023-06-27 16:33:53.8341|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:33:53.8687|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:33:53.8687|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 878.8116ms 
2023-06-27 16:33:53.8735|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.7956ms 
2023-06-27 16:33:53.8735|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:33:53.8929|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.2621ms 
2023-06-27 16:33:57.1401|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:33:57.1401|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:33:57.1401|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:33:57.2055|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:33:57.2337|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:33:57.2337|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 16.6419ms. 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 105.7177ms 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 112.3376ms 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:33:57.2512|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4197ms 
2023-06-27 16:33:57.2655|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.4505ms 
2023-06-27 16:33:58.7949|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:33:58.7949|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:33:58.7949|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:34:18.6392|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:34:22.1264|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Votes] ([EventVoteID], [RestaurantVoteID], [UserVoteID])
OUTPUT INSERTED.[VoteId]
VALUES (@p0, @p1, @p2); 
2023-06-27 16:34:24.4679|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:34:33.9768|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Events] SET [Description] = @p0, [EndTime] = @p1, [Name] = @p2, [StartTime] = @p3
OUTPUT 1
WHERE [EventId] = @p4; 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 36988.3482ms 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 - 302 0 - 36991.9667ms 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:34:35.7859|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:34:35.7931|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:34:35.7931|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:34:35.7931|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:34:35.7931|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:34:35.7931|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 2.7972ms. 
2023-06-27 16:34:35.7931|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 7.9479ms 
2023-06-27 16:34:35.7931|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:34:35.7931|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 12.3095ms 
2023-06-27 16:34:35.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:34:35.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:34:35.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3135ms 
2023-06-27 16:34:35.8087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.6829ms 
2023-06-27 16:35:23.6056|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:35:25.3954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:35:25.4373|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:35:25.4373|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:35:25.4373|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:35:25.4620|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:35:25.4797|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:35:25.6409|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:35:25.6409|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:35:25.6409|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:35:25.6409|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:35:25.6409|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:35:26.0630|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:35:26.1641|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:35:26.1829|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:35:26.2196|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:35:26.2196|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 37.1735ms 
2023-06-27 16:35:26.2196|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:35:26.2449|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:35:26.2449|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 184.6684ms 
2023-06-27 16:35:26.2600|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:35:26.2600|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:35:26.5010|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:26.9042|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:35:26.9686|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:35:27.1197|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 157.6046ms. 
2023-06-27 16:35:27.1251|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 864.3139ms 
2023-06-27 16:35:27.1251|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:35:27.1561|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:35:27.1561|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 911.4172ms 
2023-06-27 16:35:27.1561|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.8981ms 
2023-06-27 16:35:27.1561|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:35:27.1802|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.0351ms 
2023-06-27 16:35:29.3333|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:35:29.3333|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:35:29.3333|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:35:29.3939|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:35:29.4246|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:35:29.4246|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:35:29.4430|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:35:29.4565|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 13.8718ms. 
2023-06-27 16:35:29.4565|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 118.5614ms 
2023-06-27 16:35:29.4565|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:35:29.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 124.7572ms 
2023-06-27 16:35:29.4665|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:35:29.4665|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:35:29.4665|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3938ms 
2023-06-27 16:35:29.4665|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.6885ms 
2023-06-27 16:35:31.3607|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:35:31.3607|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:35:31.3607|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:35:37.7930|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:35:40.4780|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:35:42.0726|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Votes] SET [RestaurantVoteID] = @p0
OUTPUT 1
WHERE [VoteId] = @p1;
INSERT INTO [Votes] ([EventVoteID], [RestaurantVoteID], [UserVoteID])
OUTPUT INSERTED.[VoteId]
VALUES (@p2, @p3, @p4); 
2023-06-27 16:35:42.1393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.1393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.1393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.1393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.1534|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.1534|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.1534|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.2247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.1118|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert duplicate key row in object 'dbo.Votes' with unique index 'IX_Votes_UserVoteID'. The duplicate key value is (1).
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:0f8a821f-60f4-4630-bf50-e045d8730635
Error Number:2601,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "EventVoteID":31},{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Name":"Restaurant", "IsReadOnly":false}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-27 16:35:42.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.3064|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:35:42.3087|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:35:42.3064|ERROR|Lunch_Tinder.Data.LunchTinderContext|Failed to Update a vote to the Db {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31},{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"f89fcc96-dd92-4156-b96f-df10ecf3ea64:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel"}, "IsKeySet":false}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Lunch_Tinder.Data.LunchTinderContext.UpdateVote(Vote vote) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\VoteServices.cs:line 25"}
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 13219.4867ms 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 - 302 0 - 13222.9761ms 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:35:44.5831|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:35:50.6191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:35:50.6191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:35:50.6191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:35:50.6191|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:35:50.6242|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 3.6453ms. 
2023-06-27 16:35:50.6242|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 6037.323ms 
2023-06-27 16:35:50.6242|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:35:50.6242|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 6041.7657ms 
2023-06-27 16:35:50.6371|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:35:50.6371|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:35:50.6371|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4795ms 
2023-06-27 16:35:50.6525|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.1926ms 
2023-06-27 16:37:11.6063|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:37:13.5159|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:37:13.5570|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:37:13.5594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:37:13.5594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:37:13.5803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:37:13.5975|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:37:13.7602|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:37:13.7602|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:37:13.7618|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:37:13.7618|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:37:13.7618|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:37:14.3232|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:37:14.4238|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:37:14.4447|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:37:14.4789|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:37:14.4826|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 34.6763ms 
2023-06-27 16:37:14.4826|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:37:14.5037|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:37:14.5037|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 183.8007ms 
2023-06-27 16:37:14.5154|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:37:14.5154|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:37:14.7586|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:37:15.1314|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:37:15.1833|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:37:15.3200|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 140.6479ms. 
2023-06-27 16:37:15.3200|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 807.8609ms 
2023-06-27 16:37:15.3249|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:37:15.3593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 855.5693ms 
2023-06-27 16:37:15.3593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:37:15.3593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.5557ms 
2023-06-27 16:37:15.3593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:37:15.3815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.8478ms 
2023-06-27 16:37:20.8096|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:37:20.8096|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:37:20.8096|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:37:20.8677|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:37:20.8951|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:37:20.8951|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:37:20.9106|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:37:20.9262|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 15.9321ms. 
2023-06-27 16:37:20.9262|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 112.1223ms 
2023-06-27 16:37:20.9262|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:37:20.9262|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 118.1425ms 
2023-06-27 16:37:20.9352|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:37:20.9352|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:37:20.9352|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4546ms 
2023-06-27 16:37:20.9352|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6248ms 
2023-06-27 16:37:23.3740|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:37:23.3740|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:37:23.3740|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:37:42.7905|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:37:54.3211|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:38:16.8631|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Votes] SET [RestaurantVoteID] = @p0
OUTPUT 1
WHERE [VoteId] = @p1;
INSERT INTO [Votes] ([EventVoteID], [RestaurantVoteID], [UserVoteID])
OUTPUT INSERTED.[VoteId]
VALUES (@p2, @p3, @p4); 
2023-06-27 16:38:16.9317|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:16.9371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:16.9371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:16.9371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:16.9371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:16.9371|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:16.9538|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:17.0122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:17.0384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:16.9013|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert duplicate key row in object 'dbo.Votes' with unique index 'IX_Votes_UserVoteID'. The duplicate key value is (1).
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:7609301f-96d5-468f-9c16-4f2ddf8c7ad5
Error Number:2601,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "EventVoteID":31},{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Name":"Restaurant", "IsReadOnly":false}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:17.0934|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:38:17.1090|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:38:17.0934|ERROR|Lunch_Tinder.Data.LunchTinderContext|Failed to Update a vote to the Db {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31},{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31}]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>\r\nVote {VoteId: 3} Modified\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK Modified Originally 1\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\nVote {VoteId: 3} Modified FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"ec308849-2afb-4803-b984-ce586916a9b1", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}, {VoteId: -2147482647}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote","Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Added\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: <null>", "ShortView":"Vote {VoteId: -2147482647} Added FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"ec308849-2afb-4803-b984-ce586916a9b1:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel"}, "IsKeySet":false}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Lunch_Tinder.Data.LunchTinderContext.UpdateVote(Vote vote) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\VoteServices.cs:line 25"}
2023-06-27 16:38:18.3333|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:38:18.3333|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 54956.7378ms 
2023-06-27 16:38:18.3333|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 - 302 0 - 54966.9178ms 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:38:18.3409|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:38:18.3409|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:38:18.3409|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 2.6509ms. 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 4.4003ms 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:38:18.3409|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 7.9945ms 
2023-06-27 16:38:18.3618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:38:18.3618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:38:18.3618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2788ms 
2023-06-27 16:38:18.3618|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.6855ms 
2023-06-27 16:40:27.6789|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:40:29.7577|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:40:29.8078|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:40:29.8104|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:40:29.8104|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:40:29.8327|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:40:29.8514|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:40:30.0261|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:40:30.0261|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:40:30.0276|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:40:30.0276|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:40:30.0276|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:40:30.8387|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:40:30.9386|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:40:30.9592|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:40:30.9942|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:40:30.9984|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.483ms 
2023-06-27 16:40:30.9984|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:40:31.0183|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:40:31.0183|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 183.9450ms 
2023-06-27 16:40:31.0317|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:40:31.0317|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:40:31.2925|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:40:31.6794|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:40:31.7314|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:40:31.8791|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 152.0145ms. 
2023-06-27 16:40:31.8791|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 851.5675ms 
2023-06-27 16:40:31.8791|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:40:31.9236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:40:31.9236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 906.1130ms 
2023-06-27 16:40:31.9236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.6796ms 
2023-06-27 16:40:31.9358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:40:31.9560|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.1758ms 
2023-06-27 16:40:36.0533|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:40:36.0533|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:40:36.0594|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:40:36.1123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:40:36.1401|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:40:36.1401|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:40:36.1571|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 15.0747ms. 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 112.5414ms 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 119.8646ms 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:40:36.1718|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4574ms 
2023-06-27 16:40:36.1892|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.6446ms 
2023-06-27 16:40:37.3735|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:40:37.3735|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:40:37.3735|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:40:41.8713|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:40:47.0672|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Votes] ([EventVoteID], [RestaurantVoteID], [UserVoteID])
OUTPUT INSERTED.[VoteId]
VALUES (@p0, @p1, @p2); 
2023-06-27 16:40:47.1284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:40:47.1284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:40:47.1284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:40:47.1390|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:40:47.1390|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:40:47.1604|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:40:47.1676|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:40:47.2257|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:40:47.2497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:40:47.0994|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert duplicate key row in object 'dbo.Votes' with unique index 'IX_Votes_UserVoteID'. The duplicate key value is (1).
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:7fb02d22-9dfe-40c1-ab98-1a49b63863ff
Error Number:2601,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":1, "EventVoteID":31}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":1, "EventVoteID":31}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Detached", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Detached", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"889f4c0b-89cb-4067-9240-f27a9ea02a3d:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}"}}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-27 16:41:16.6350|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:41:18.5008|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:41:18.5428|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:41:18.5454|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:41:18.5454|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:41:18.5676|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:41:18.5883|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:41:18.7503|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:41:18.7503|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:41:18.7503|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:41:18.7503|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:41:18.7503|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:41:19.4705|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:41:19.5700|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:41:19.5898|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:41:19.6232|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:41:19.6232|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 34.0427ms 
2023-06-27 16:41:19.6232|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:41:19.6533|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:41:19.6533|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 185.7043ms 
2023-06-27 16:41:19.6533|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:41:19.6533|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:41:19.9101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:41:20.3010|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:41:20.3525|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:41:20.4832|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 134.7103ms. 
2023-06-27 16:41:20.4832|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 821.0549ms 
2023-06-27 16:41:20.4832|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:41:20.5177|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:41:20.5177|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 865.3308ms 
2023-06-27 16:41:20.5177|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.2172ms 
2023-06-27 16:41:20.5416|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:41:20.5552|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.5096ms 
2023-06-27 16:41:22.5445|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:41:22.5445|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:41:22.5445|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:41:22.6037|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:41:22.6321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:41:22.6321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:41:22.6489|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:41:22.6652|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 16.6132ms. 
2023-06-27 16:41:22.6652|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 115.9772ms 
2023-06-27 16:41:22.6652|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:41:22.6652|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 122.0496ms 
2023-06-27 16:41:22.6747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:41:22.6747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:41:22.6747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4392ms 
2023-06-27 16:41:22.6747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.5307ms 
2023-06-27 16:41:23.6646|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:41:23.6646|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:41:23.6646|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:41:28.6921|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:41:34.3795|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Votes] ([EventVoteID], [RestaurantVoteID], [UserVoteID])
OUTPUT INSERTED.[VoteId]
VALUES (@p0, @p1, @p2); 
2023-06-27 16:41:34.4437|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:41:34.4437|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:41:34.4505|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:41:34.4505|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:41:34.4505|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:41:34.4784|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:41:34.4864|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:41:34.5482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:41:34.5739|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-27 16:41:34.5742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-27 16:41:34.4133|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert duplicate key row in object 'dbo.Votes' with unique index 'IX_Votes_UserVoteID'. The duplicate key value is (1).
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:6f7847ba-115e-4bc4-9fb5-d3aa8f359d1b
Error Number:2601,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":0, "UserVoteID":1, "RestaurantVoteID":2, "EventVoteID":31}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":2, "EventVoteID":31}]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"6adc8088-9875-4668-a552-8ee290e672ae", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"VoteId PK", "ShortView":"VoteId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Detached", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"6adc8088-9875-4668-a552-8ee290e672ae", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "References":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "ForeignKeys":[{"Properties":[], "PrincipalKey":{"Properties":["Property: Event.EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingForeignKeys":["ForeignKey: EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade","ForeignKey: EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false}], "Indexes":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "DebugView":{"LongView":"EventVoteID", "ShortView":"EventVoteID"}, "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}}, "RestaurantVoteID":2, "Restaurant":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[{"VoteId":3, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31}]}}, "State":"Detached", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Testttttt", "Password":"$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]},{"GroupId":4, "GroupName":"HRLunchGroupOne", "Description":"dkfhdjkfgldf", "Users":[], "Events":[]}], "Events":[{"EventId":30, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T18:57:00Z", "EndTime":"2024-07-24T19:59:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[{"VoteId":3, "UserVoteID":1, "User":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[]}, "RestaurantVoteID":1, "Restaurant":{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]}, "EventVoteID":31, "Event":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}}], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"},{"InviteId":2, "UserName":"NoUserName", "EmailAddress":"testdb@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":92, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"Event {EventId: 30} Unchanged\r\n  EventId: 30 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '24/07/2024 19:59:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 18:57:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInvites {InviteId: 2} Unchanged\r\n  InviteId: 2 PK\r\n  EmailAddress: 'testdb@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\n  InviteID: 92 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Unchanged\r\n  GroupId: 1 PK\r\n  Description: 'We codessss'\r\n  GroupName: 'Software Development'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nLunchGroup {GroupId: 4} Unchanged\r\n  GroupId: 4 PK\r\n  Description: 'dkfhdjkfgldf'\r\n  GroupName: 'HRLunchGroupOne'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$Ufq8Pnun3ZxT2giaTKDwKOdp5IEYp1HnWvfjDNPrN4tTGdvgAKAAG'\r\n  UserName: 'Testttttt'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nVote {VoteId: 3} Unchanged\r\n  VoteId: 3 PK\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 1 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 1}\r\n  User: {UserId: 1}\r\n", "ShortView":"Event {EventId: 30} Unchanged\r\nEvent {EventId: 31} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInvites {InviteId: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 92} Unchanged\r\nLunchGroup {GroupId: 1} Unchanged\r\nLunchGroup {GroupId: 3} Unchanged\r\nLunchGroup {GroupId: 4} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nVote {VoteId: 3} Unchanged FK {EventVoteID: 31} FK {RestaurantVoteID: 1} FK {UserVoteID: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"6adc8088-9875-4668-a552-8ee290e672ae", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Vote", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    EventVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    UserVoteID (int) Required FK Index\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Votes\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Vote\r\n  Properties: \r\n    VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    EventVoteID (int) Required FK Index\r\n    RestaurantVoteID (int) Required FK Index\r\n    UserVoteID (int) Required FK Index\r\n  Navigations: \r\n    Event (Event) ToPrincipal Event Inverse: Votes\r\n    Restaurant (Restaurant) ToPrincipal Restaurant\r\n    User (User) ToPrincipal User Inverse: Vote\r\n  Keys: \r\n    VoteId PK\r\n  Foreign keys: \r\n    Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n    Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n    Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n  Indexes: \r\n    EventVoteID\r\n    RestaurantVoteID\r\n    UserVoteID Unique"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "OriginalValue":1, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade"], "Indexes":["Index: Vote.UserVoteID Unique"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"UserVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"UserVoteID (int) Required FK Index"}, "Name":"UserVoteID", "IsReadOnly":false}, "CurrentValue":1, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Navigations":[{"IsModified":false, "TargetEntry":{"Entity":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 31} Unchanged\r\n  EventId: 31 PK\r\n  Description: 'Event at Locke Burger Castletroy,La Cucina Limerick'\r\n  EndTime: '28/03/2024 23:09:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '26/06/2023 17:02:00'\r\n  Votes: [{VoteId: 3}]\r\n  LunchGroups: []\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 31} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Event (Event) ToPrincipal Event Inverse: Votes", "ShortView":"Event (Event) ToPrincipal Event Inverse: Votes"}, "Name":"Event", "IsReadOnly":false}, "CurrentValue":{"EventId":31, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy,La Cucina Limerick", "StartTime":"2023-06-26T17:02:00Z", "EndTime":"2024-03-28T23:09:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":["Lunch_Tinder.Models.Vote"]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []", "ShortView":"Restaurant {RestaurantID: 2} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Restaurant.RestaurantID PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Restaurant (Restaurant) ToPrincipal Restaurant", "ShortView":"Restaurant (Restaurant) ToPrincipal Restaurant"}, "Name":"Restaurant", "IsReadOnly":false}, "CurrentValue":{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "TargetEntry":{"Entity":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":"Lunch_Tinder.Models.Vote"}, "State":"Unchanged", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.User", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: User"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: User"}, "DebugView":{"LongView":"User {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: {VoteId: 3}\r\n  LunchGroups: []", "ShortView":"User {UserId: 1} Unchanged"}}, "IsLoaded":true, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: User.UserId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: User", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"User (User) ToPrincipal User Inverse: Vote", "ShortView":"User (User) ToPrincipal User Inverse: Vote"}, "Name":"User", "IsReadOnly":false}, "CurrentValue":{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$dVyAexsi1jiGGZFDrxFsPuzyo5ADUGgxEEFPZ8gdZG6LhkxBlDlM6", "UserType":"USER", "LunchGroups":[], "Vote":{"VoteId":3, "UserVoteID":1, "RestaurantVoteID":1, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}}, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Vote.VoteId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"VoteId", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "OriginalValue":31, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"], "Indexes":["Index: Vote.EventVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EventVoteID (int) Required FK Index"}, "Name":"EventVoteID", "IsReadOnly":false}, "CurrentValue":31, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "OriginalValue":2, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ForeignKeys":["ForeignKey: Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"], "Indexes":["Index: Vote.RestaurantVoteID"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantVoteID (int) Required FK Index\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantVoteID (int) Required FK Index"}, "Name":"RestaurantVoteID", "IsReadOnly":false}, "CurrentValue":2, "EntityEntry":{"Entity":{"VoteId":0, "UserVoteID":1, "User":"Lunch_Tinder.Models.User", "RestaurantVoteID":2, "Restaurant":"Lunch_Tinder.Models.Restaurant", "EventVoteID":31, "Event":"Lunch_Tinder.Models.Event"}, "State":"Detached", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"6adc8088-9875-4668-a552-8ee290e672ae:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":["Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry","Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry"], "Collections":[], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Vote"}, "DebugView":{"LongView":"Vote {VoteId: -2147482647} Detached\r\n  VoteId: -2147482647 PK Temporary\r\n  EventVoteID: 31 FK\r\n  RestaurantVoteID: 2 FK\r\n  UserVoteID: 1 FK\r\n  Event: {EventId: 31}\r\n  Restaurant: {RestaurantID: 2}\r\n  User: {UserId: 1}", "ShortView":"Vote {VoteId: -2147482647} Detached FK {EventVoteID: 31} FK {RestaurantVoteID: 2} FK {UserVoteID: 1}"}}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-27 16:42:51.4270|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:42:53.2350|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:42:53.2746|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:42:53.2746|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:42:53.2746|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:42:53.2978|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:42:53.3152|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:42:53.4761|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:42:53.4761|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:42:53.4761|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:42:53.4761|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:42:53.4761|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:42:54.2166|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:42:54.3171|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:42:54.3372|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:42:54.3721|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:42:54.3721|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.378ms 
2023-06-27 16:42:54.3721|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:42:54.3972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:42:54.3972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 183.8164ms 
2023-06-27 16:42:54.4083|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:42:54.4083|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:42:54.6588|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:42:55.0288|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:42:55.0822|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:42:55.2144|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 136.9234ms. 
2023-06-27 16:42:55.2189|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 809.4394ms 
2023-06-27 16:42:55.2189|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:42:55.2529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 855.6730ms 
2023-06-27 16:42:55.2529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:42:55.2529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:42:55.2529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.4620ms 
2023-06-27 16:42:55.2766|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.9979ms 
2023-06-27 16:42:57.7287|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:42:57.7327|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:42:57.7327|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:42:57.7853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:42:57.8133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:42:57.8133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:42:57.8310|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 16.4862ms. 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 113.6175ms 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 119.6568ms 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:42:57.8471|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:42:57.8566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4485ms 
2023-06-27 16:42:57.8566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.8793ms 
2023-06-27 16:42:59.6869|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:42:59.6869|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:42:59.6869|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:46:27.8934|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:46:29.6951|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:46:29.7357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:46:29.7357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:46:29.7357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:46:29.7598|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:46:29.7773|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:46:29.9439|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:46:29.9439|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:46:29.9439|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:46:29.9439|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:46:29.9439|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:46:30.5506|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:46:30.6527|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:46:30.6732|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:46:30.7074|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:46:30.7074|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.3219ms 
2023-06-27 16:46:30.7074|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:46:30.7342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:46:30.7342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 186.4669ms 
2023-06-27 16:46:30.7342|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:46:30.7342|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:46:30.9917|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:46:31.3668|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:46:31.4206|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:46:31.5534|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 136.7754ms. 
2023-06-27 16:46:31.5534|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 811.1177ms 
2023-06-27 16:46:31.5534|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:46:31.5889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:46:31.5889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 855.2184ms 
2023-06-27 16:46:31.5938|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.8205ms 
2023-06-27 16:46:31.5938|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:46:31.6123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.7175ms 
2023-06-27 16:46:34.3642|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:46:34.3642|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:46:34.3642|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:46:34.4221|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:46:34.4497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:46:34.4528|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:46:34.4528|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 18.3079ms. 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 115.3716ms 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 121.8967ms 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:46:34.4846|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4432ms 
2023-06-27 16:46:34.4995|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.7593ms 
2023-06-27 16:46:36.7475|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:46:36.7495|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:46:36.7495|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:46:41.5180|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:46:42.6573|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:46:46.5060|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Votes] SET [EventVoteID] = @p0, [RestaurantVoteID] = @p1, [UserVoteID] = @p2
OUTPUT 1
WHERE [VoteId] = @p3; 
2023-06-27 16:46:49.8578|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:46:49.8578|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 13107.7051ms 
2023-06-27 16:46:49.8578|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:46:49.8578|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 - 302 0 - 13110.7703ms 
2023-06-27 16:46:49.8610|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:46:49.8610|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:46:49.8610|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:46:52.6497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:46:52.6497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:46:52.6497|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:46:52.6497|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:46:52.6497|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 3.2456ms. 
2023-06-27 16:46:52.6497|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 2792.5308ms 
2023-06-27 16:46:52.6497|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:46:52.6593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 2798.2068ms 
2023-06-27 16:46:52.6593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:46:52.6593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:46:52.6593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2074ms 
2023-06-27 16:46:52.6720|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.4831ms 
2023-06-27 16:46:54.9339|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:46:54.9339|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:46:54.9339|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:46:58.9863|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:46:59.8576|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:47:03.1546|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Votes] SET [EventVoteID] = @p0, [RestaurantVoteID] = @p1, [UserVoteID] = @p2
OUTPUT 1
WHERE [VoteId] = @p3; 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 11991.4153ms 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 - 302 0 - 11992.5962ms 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:47:06.9261|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:47:06.9261|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:47:06.9261|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 2.9037ms. 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 4.5947ms 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:47:06.9261|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 6.8032ms 
2023-06-27 16:47:06.9417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:47:06.9417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:47:06.9417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3186ms 
2023-06-27 16:47:06.9417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6412ms 
2023-06-27 16:48:32.9234|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:48:34.7421|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:48:34.7806|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:48:34.7806|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:48:34.7806|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:48:34.8071|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:48:34.8246|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:48:34.9947|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:48:34.9947|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:48:34.9947|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:48:34.9947|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:48:34.9947|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:48:35.6496|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:48:35.7480|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:48:35.7668|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:48:35.8018|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:48:35.8018|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.1609ms 
2023-06-27 16:48:35.8018|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:48:35.8260|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:48:35.8260|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 180.2572ms 
2023-06-27 16:48:35.8363|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:48:35.8363|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:48:36.0852|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:48:36.4522|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:48:36.5060|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:48:36.6397|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 137.7751ms. 
2023-06-27 16:48:36.6397|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 806.4737ms 
2023-06-27 16:48:36.6397|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:48:36.6734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 847.4174ms 
2023-06-27 16:48:36.6734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:48:36.6734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.4297ms 
2023-06-27 16:48:36.6734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:48:36.6997|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.2735ms 
2023-06-27 16:48:38.9167|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:48:38.9167|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:48:38.9212|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:48:38.9738|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:48:39.0011|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:48:39.0011|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:48:39.0175|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 16.6998ms. 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 112.7313ms 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 118.5571ms 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:48:39.0338|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5233ms 
2023-06-27 16:48:39.0473|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.4115ms 
2023-06-27 16:48:40.3245|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 
2023-06-27 16:48:40.3245|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:48:40.3245|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:48:53.1724|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:48:54.4898|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:49:24.9405|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Votes] SET [EventVoteID] = @p0, [RestaurantVoteID] = @p1, [UserVoteID] = @p2
OUTPUT 1
WHERE [VoteId] = @p3; 
2023-06-27 16:49:42.1229|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:49:42.1229|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 61795.4548ms 
2023-06-27 16:49:42.1229|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:49:42.1229|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=2 application/x-www-form-urlencoded 0 - 302 0 - 61798.6252ms 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:49:42.1310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:49:42.1310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:49:42.1310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 5.1753ms. 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 7.6469ms 
2023-06-27 16:49:42.1310|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:49:42.1432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 12.1145ms 
2023-06-27 16:49:42.1432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:49:42.1432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:49:42.1432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3385ms 
2023-06-27 16:49:42.1432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3941ms 
2023-06-27 16:50:46.8920|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:50:48.8516|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:50:48.8932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:50:48.8932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:50:48.8932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:50:48.9191|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:50:48.9369|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:50:49.0999|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:50:49.0999|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:50:49.0999|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:50:49.0999|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:50:49.0999|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:50:49.7203|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:50:49.8199|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:50:49.8395|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:50:49.8725|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:50:49.8770|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.5078ms 
2023-06-27 16:50:49.8770|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:50:49.8964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:50:49.8964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 178.8226ms 
2023-06-27 16:50:49.9065|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:50:49.9065|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:50:50.1533|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:50:50.5307|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:50:50.5849|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:50:50.7192|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 138.2525ms. 
2023-06-27 16:50:50.7192|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 815.644ms 
2023-06-27 16:50:50.7192|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:50:50.7524|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 855.9705ms 
2023-06-27 16:50:50.7524|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:50:50.7524|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.1785ms 
2023-06-27 16:50:50.7524|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:50:50.7750|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.1468ms 
2023-06-27 16:50:55.5320|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:50:55.5320|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:50:55.5320|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:50:55.5885|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:50:55.6159|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:50:55.6159|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:50:55.6321|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:50:55.6465|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 14.7223ms. 
2023-06-27 16:50:55.6465|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 109.6667ms 
2023-06-27 16:50:55.6465|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:50:55.6465|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 115.7769ms 
2023-06-27 16:50:55.6555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:50:55.6555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:50:55.6555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4517ms 
2023-06-27 16:50:55.6555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3999ms 
2023-06-27 16:50:57.6916|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 
2023-06-27 16:50:57.6916|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:50:57.6916|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "VoteInEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult VoteInEvent(Int32, Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:51:19.3994|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:51:20.2284|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:51:21.1156|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Votes] SET [EventVoteID] = @p0, [RestaurantVoteID] = @p1, [UserVoteID] = @p2
OUTPUT 1
WHERE [VoteId] = @p3; 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/DisplayEvent?eventid=31. 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder) in 24907.8248ms 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.VoteInEvent (Lunch Tinder)' 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/VoteInEvent?eventid=31&restaurantid=1 application/x-www-form-urlencoded 0 - 302 0 - 24911.1050ms 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:51:22.6024|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:51:22.6098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:51:22.6098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:51:22.6098|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:51:22.6098|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:51:22.6098|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 4.6367ms. 
2023-06-27 16:51:22.6098|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 6.4463ms 
2023-06-27 16:51:22.6098|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:51:22.6098|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 12.4200ms 
2023-06-27 16:51:22.6281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:51:22.6281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:51:22.6281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3455ms 
2023-06-27 16:51:22.6281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.0112ms 
2023-06-27 16:51:30.9169|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:51:30.9169|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:51:30.9169|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:51:30.9169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:51:30.9169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:51:30.9169|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:51:30.9169|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 2.9574ms. 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 4.7696ms 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 9.5868ms 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:51:30.9229|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1892ms 
2023-06-27 16:56:21.4661|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:56:23.1845|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:56:23.2236|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:56:23.2236|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:56:23.2236|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:56:23.2481|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:56:23.2651|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:56:23.4339|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:56:23.4339|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:56:23.4339|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:56:23.4339|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:56:23.4339|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:56:24.2354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:56:24.3354|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:56:24.3546|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:56:24.3879|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:56:24.3928|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 33.8736ms 
2023-06-27 16:56:24.3928|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:56:24.4106|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:56:24.4106|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 178.8334ms 
2023-06-27 16:56:24.4106|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:56:24.4219|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:56:24.6671|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:56:25.0298|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:56:25.0811|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:56:25.2133|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 136.3136ms. 
2023-06-27 16:56:25.2133|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 794.9706ms 
2023-06-27 16:56:25.2133|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:56:25.2549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:56:25.2549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 844.6335ms 
2023-06-27 16:56:25.2549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.0908ms 
2023-06-27 16:56:25.2549|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:56:25.2793|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.4976ms 
2023-06-27 16:56:28.1562|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:56:28.1562|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:56:28.1562|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:56:28.2145|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:56:28.2451|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:56:28.2451|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:56:28.2615|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:56:28.2752|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 14.1287ms. 
2023-06-27 16:56:28.2752|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 114.1041ms 
2023-06-27 16:56:28.2752|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:56:28.2752|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 120.3312ms 
2023-06-27 16:56:28.2838|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=QW-ZUm96o3ob6cpZ7UuG1lHuVnFXMcJRHMFY8ZYhrCg - - 
2023-06-27 16:56:28.2838|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:56:28.2838|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3154ms 
2023-06-27 16:56:28.2838|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:56:28.2838|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6256ms 
2023-06-27 16:56:28.2980|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 16:56:28.2980|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=QW-ZUm96o3ob6cpZ7UuG1lHuVnFXMcJRHMFY8ZYhrCg - - - 200 1089 text/css 14.3352ms 
2023-06-27 16:57:43.5914|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 16:57:45.2782|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:57:45.3175|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:57:45.3175|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 16:57:45.3175|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 16:57:45.3415|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 16:57:45.3585|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 16:57:45.5159|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 16:57:45.5159|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 16:57:45.5159|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 16:57:45.5159|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 16:57:45.5159|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 16:57:46.3197|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 16:57:46.4189|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:57:46.4376|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 16:57:46.4696|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 16:57:46.4696|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 32.4974ms 
2023-06-27 16:57:46.4696|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 16:57:46.4924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 16:57:46.4924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 176.2184ms 
2023-06-27 16:57:46.5023|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:57:46.5023|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 16:57:46.7430|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 16:57:47.1065|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 16:57:47.1608|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 16:57:47.2936|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 138.3039ms. 
2023-06-27 16:57:47.2974|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 794.3002ms 
2023-06-27 16:57:47.2974|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 16:57:47.3313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:57:47.3313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 839.4504ms 
2023-06-27 16:57:47.3313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.4254ms 
2023-06-27 16:57:47.3313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:57:47.3576|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.8028ms 
2023-06-27 16:57:48.8977|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 16:57:48.8977|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:57:48.8977|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 16:57:48.9562|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 16:57:48.9841|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 16:57:48.9871|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 16:57:48.9871|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 16:57:49.0145|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 14.9689ms. 
2023-06-27 16:57:49.0145|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 112.1361ms 
2023-06-27 16:57:49.0145|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 16:57:49.0145|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 117.9100ms 
2023-06-27 16:57:49.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg - - 
2023-06-27 16:57:49.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 16:57:49.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 16:57:49.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4484ms 
2023-06-27 16:57:49.0313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.8787ms 
2023-06-27 16:57:49.0313|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 16:57:49.0313|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg - - - 200 1164 text/css 18.4684ms 
2023-06-27 16:58:25.4279|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=9330e1c6d5b348e9bcdf81aedc0f56f0 - - 
2023-06-27 16:58:25.4279|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 16:58:25.4279|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=9330e1c6d5b348e9bcdf81aedc0f56f0 - - - 200 1191 text/css 2.8945ms 
2023-06-27 16:58:49.2531|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=b016f49b765b42b997ad84584a1434bd - - 
2023-06-27 16:58:49.2681|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 16:58:49.2681|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=b016f49b765b42b997ad84584a1434bd - - - 200 1211 text/css 15.1306ms 
2023-06-27 17:01:21.5551|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=b03f2a546c36475e8041cbe45cbf0c12 - - 
2023-06-27 17:01:21.5551|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:01:21.5551|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=b03f2a546c36475e8041cbe45cbf0c12 - - - 200 1335 text/css 6.2059ms 
2023-06-27 17:02:38.2281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=92d10a494879479887718dbc8deb55fe - - 
2023-06-27 17:02:38.2379|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:02:38.2379|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Do1nnIs05S0eASKtgUgdHQV9C4yebwMZhQLVZsIJwBg&__browserLink_refresh=92d10a494879479887718dbc8deb55fe - - - 200 1351 text/css 9.8415ms 
2023-06-27 17:03:16.1893|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 17:03:18.0104|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 17:03:18.0507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 17:03:18.0507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 17:03:18.0507|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 17:03:18.0748|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 17:03:18.0918|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 17:03:18.2505|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 17:03:18.2505|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 17:03:18.2505|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 17:03:18.2505|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 17:03:18.2505|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 17:03:19.0182|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 17:03:19.1156|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 17:03:19.1343|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 17:03:19.1656|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 17:03:19.1656|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 31.7298ms 
2023-06-27 17:03:19.1656|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 17:03:19.1919|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 17:03:19.1919|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 177.8690ms 
2023-06-27 17:03:19.1919|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 17:03:19.1919|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 17:03:19.4468|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 17:03:19.8209|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 17:03:19.8729|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 17:03:20.0028|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 133.6714ms. 
2023-06-27 17:03:20.0028|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 803.6069ms 
2023-06-27 17:03:20.0028|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 17:03:20.0396|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 17:03:20.0396|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 849.7029ms 
2023-06-27 17:03:20.0396|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.1998ms 
2023-06-27 17:03:20.0492|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 17:03:20.0647|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.5152ms 
2023-06-27 17:03:21.6798|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 17:03:21.6798|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 17:03:21.6798|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 17:03:21.7427|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 17:03:21.7718|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 17:03:21.7718|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 17:03:21.7901|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 17:03:21.8075|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 18.0156ms. 
2023-06-27 17:03:21.8075|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 123.1675ms 
2023-06-27 17:03:21.8075|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 17:03:21.8075|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 129.2350ms 
2023-06-27 17:03:21.8161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=-xu03XeOKJzuRrrqYpVTNsamZnbtaG3pOSumSPUK-s4 - - 
2023-06-27 17:03:21.8161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 17:03:21.8161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3319ms 
2023-06-27 17:03:21.8161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 17:03:21.8161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.2930ms 
2023-06-27 17:03:21.8298|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:03:21.8298|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=-xu03XeOKJzuRrrqYpVTNsamZnbtaG3pOSumSPUK-s4 - - - 200 1351 text/css 13.8224ms 
2023-06-27 17:06:32.6427|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=-xu03XeOKJzuRrrqYpVTNsamZnbtaG3pOSumSPUK-s4&__browserLink_refresh=fc5bbfdc06bc488999b428db1ede0ee6 - - 
2023-06-27 17:06:32.6427|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:06:32.6427|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=-xu03XeOKJzuRrrqYpVTNsamZnbtaG3pOSumSPUK-s4&__browserLink_refresh=fc5bbfdc06bc488999b428db1ede0ee6 - - - 200 1417 text/css 5.5951ms 
2023-06-27 17:06:38.5102|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-27 17:06:40.3158|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 17:06:40.3604|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 17:06:40.3604|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-27 17:06:40.3604|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-27 17:06:40.3880|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-27 17:06:40.4064|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-27 17:06:40.5773|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-27 17:06:40.5773|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-27 17:06:40.5791|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-27 17:06:40.5791|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-27 17:06:40.5791|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-27 17:06:41.2660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-27 17:06:41.3682|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 17:06:41.3885|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login(System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-27 17:06:41.4238|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-27 17:06:41.4238|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 36.1415ms 
2023-06-27 17:06:41.4238|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-27 17:06:41.4478|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-27 17:06:41.4478|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 184.8140ms 
2023-06-27 17:06:41.4587|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 17:06:41.4587|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-27 17:06:41.7194|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-27 17:06:42.1067|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userId_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-27 17:06:42.1657|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-27 17:06:42.3118|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 150.0481ms. 
2023-06-27 17:06:42.3155|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 855.9052ms 
2023-06-27 17:06:42.3155|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-27 17:06:42.3475|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 899.6079ms 
2023-06-27 17:06:42.3475|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 17:06:42.3475|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.3452ms 
2023-06-27 17:06:42.3475|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 17:06:42.3743|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.2892ms 
2023-06-27 17:06:43.4870|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - 
2023-06-27 17:06:43.4870|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 17:06:43.4870|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayEvent(Int32) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-27 17:06:43.5526|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[EventId], [t].[Description], [t].[EndTime], [t].[Name], [t].[StartTime], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName]
FROM (
    SELECT TOP(1) [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
    FROM [Events] AS [e]
    WHERE [e].[EventId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [e0].[EventsEventId], [e0].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
    FROM [EventRestaurant] AS [e0]
    INNER JOIN [Restaurants] AS [r] ON [e0].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
) AS [t0] ON [t].[EventId] = [t0].[EventsEventId]
ORDER BY [t].[EventId], [t0].[EventsEventId], [t0].[RestaurantOptionsRestaurantID] 
2023-06-27 17:06:43.5833|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Votes] AS [v]
        WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-27 17:06:43.5833|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__eventid_0='?' (DbType = Int32), @__userid_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v]
WHERE [v].[EventVoteID] = @__eventid_0 AND [v].[UserVoteID] = @__userid_1 
2023-06-27 17:06:43.6006|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml. 
2023-06-27 17:06:43.6156|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LunchGroupEvent.cshtml executed in 15.2915ms. 
2023-06-27 17:06:43.6156|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder) in 123.0655ms 
2023-06-27 17:06:43.6156|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.DisplayEvent (Lunch Tinder)' 
2023-06-27 17:06:43.6156|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/DisplayEvent?eventid=31 - - - 200 - text/html;+charset=utf-8 129.9176ms 
2023-06-27 17:06:43.6156|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc - - 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2067ms 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.9264ms 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:06:43.6253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc - - - 200 1417 text/css 14.8566ms 
2023-06-27 17:06:58.3086|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=a989534ec8b5477f8074c37ae56746d6 - - 
2023-06-27 17:06:58.3086|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:06:58.3086|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=a989534ec8b5477f8074c37ae56746d6 - - - 200 1393 text/css 2.7079ms 
2023-06-27 17:07:06.9191|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=446814fbe6b644338b65dc17149463ce - - 
2023-06-27 17:07:06.9276|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:07:06.9276|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=446814fbe6b644338b65dc17149463ce - - - 200 1417 text/css 8.6118ms 
2023-06-27 17:07:16.3387|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=cc655a0fd44148d78c345c11eb2814c9 - - 
2023-06-27 17:07:16.3387|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:07:16.3387|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=cc655a0fd44148d78c345c11eb2814c9 - - - 200 1419 text/css 3.3832ms 
2023-06-27 17:07:24.2297|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=fa4c11e3333d49f0a5944584bb798d9e - - 
2023-06-27 17:07:24.2297|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:07:24.2297|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=fa4c11e3333d49f0a5944584bb798d9e - - - 200 1351 text/css 3.1364ms 
2023-06-27 17:08:47.5003|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=5eb9ddd1311e48f99bc41dc15b214364 - - 
2023-06-27 17:08:47.5003|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/lunchgroupevent.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\lunchgroupevent.css' 
2023-06-27 17:08:47.5003|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/lunchgroupevent.css?v=Rnqk-QxMzDz4LVMdv0b_UQpe3v3sPSawrWWbWXHrWWc&__browserLink_refresh=5eb9ddd1311e48f99bc41dc15b214364 - - - 200 1397 text/css 9.5134ms 
