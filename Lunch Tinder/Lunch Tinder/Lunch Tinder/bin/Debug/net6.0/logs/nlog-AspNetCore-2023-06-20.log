2023-06-20 09:17:28.2286|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 09:17:33.3501|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:17:33.3932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:17:33.3932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:17:33.3932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:17:33.4195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 09:17:33.4380|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 09:17:33.7878|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 09:17:33.7878|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 09:17:33.7878|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 09:17:33.7878|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 09:17:33.7878|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 09:17:36.7867|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 09:17:36.9352|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:17:36.9551|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 09:17:36.9663|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 5.3329ms 
2023-06-20 09:17:36.9663|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:17:36.9663|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"System.Object GetService(System.IServiceProvider, System.Type, System.Type, Boolean)", "Message":"Unable to resolve service for type 'Lunch_Tinder.Data.IRepository`1[Lunch_Tinder.Models.User]' while attempting to activate 'Lunch_Tinder.Controllers.UserController'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection.Abstractions", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method66(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 09:17:37.6234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 09:17:37.6234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 09:17:37.6234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 500 - text/html;+charset=utf-8 845.1303ms 
2023-06-20 09:17:37.6234|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.7959ms 
2023-06-20 09:17:37.6747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.2000ms 
2023-06-20 09:31:30.7866|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 09:31:33.8774|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:31:33.9167|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:31:33.9167|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:31:33.9167|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:31:33.9431|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 09:31:33.9613|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 09:31:34.1213|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 09:31:34.1213|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 09:31:34.1213|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 09:31:34.1213|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 09:31:34.1213|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 09:31:35.0657|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 09:31:35.1622|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:31:35.1758|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 09:31:35.1833|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 3.069ms 
2023-06-20 09:31:35.1833|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:31:35.1833|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"System.Object GetService(System.IServiceProvider, System.Type, System.Type, Boolean)", "Message":"Unable to resolve service for type 'Lunch_Tinder.Data.IRepository`1[Lunch_Tinder.Models.User]' while attempting to activate 'Lunch_Tinder.Controllers.UserController'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection.Abstractions", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method66(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 09:31:35.4291|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 500 - text/html;+charset=utf-8 365.8915ms 
2023-06-20 09:31:35.4390|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 09:31:35.4390|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 09:31:35.4496|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 10.5499ms 
2023-06-20 09:31:35.4496|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.4789ms 
2023-06-20 09:52:58.0756|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 09:53:00.8854|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:53:00.9298|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:53:00.9328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:53:00.9328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:53:00.9571|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 09:53:00.9785|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 09:53:01.1431|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 09:53:01.1431|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 09:53:01.1431|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 09:53:01.1431|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 09:53:01.1431|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 09:53:01.8443|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 09:53:01.9307|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:53:01.9420|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 09:53:01.9486|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 2.5778ms 
2023-06-20 09:53:01.9486|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:53:01.9486|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"System.Object GetService(System.IServiceProvider, System.Type, System.Type, Boolean)", "Message":"Unable to resolve service for type 'Lunch_Tinder.Data.IRepository`1[Lunch_Tinder.Models.Invites]' while attempting to activate 'Lunch_Tinder.Controllers.UserController'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection.Abstractions", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method66(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 09:53:02.1462|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 09:53:02.1462|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 09:53:02.1462|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 500 - text/html;+charset=utf-8 304.4842ms 
2023-06-20 09:53:02.1634|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 17.1940ms 
2023-06-20 09:53:02.1746|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.3989ms 
2023-06-20 09:56:40.2811|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 09:56:42.1732|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:56:42.2178|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:56:42.2178|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 09:56:42.2178|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 09:56:42.2460|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 09:56:42.2662|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 09:56:42.4410|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 09:56:42.4410|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 09:56:42.4410|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 09:56:42.4410|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 09:56:42.4410|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 09:56:42.8186|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 09:56:42.9170|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:56:42.9286|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 09:56:42.9450|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 09:56:43.1264|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 185.1373ms. 
2023-06-20 09:56:43.1317|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 203.546ms 
2023-06-20 09:56:43.1317|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:56:43.1720|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 09:56:43.1720|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 09:56:43.1720|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 09:56:43.1801|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 364.3869ms 
2023-06-20 09:56:43.1801|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 10.1161ms 
2023-06-20 09:56:43.1954|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.4508ms 
2023-06-20 09:56:43.1954|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/login.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\login.css' 
2023-06-20 09:56:43.1954|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 200 1882 text/css 28.0054ms 
2023-06-20 09:56:50.3763|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 09:56:50.3763|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:56:50.3945|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 09:56:50.6887|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 09:56:50.8615|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 605.7954ms 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 09:56:50.9974|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 302 0 - 632.9208ms 
2023-06-20 09:56:51.0117|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 09:56:51.0117|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 09:56:51.0117|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 0.7813ms 
2023-06-20 09:56:51.0117|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 09:56:51.0117|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"System.Object GetService(System.IServiceProvider, System.Type, System.Type, Boolean)", "Message":"Unable to resolve service for type 'Lunch_Tinder.Data.IRepository`1[Lunch_Tinder.Models.Event]' while attempting to activate 'Lunch_Tinder.Controllers.LGUController'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection.Abstractions", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method133(Closure , IServiceProvider , Object[] )\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 09:56:51.0812|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 500 - text/html;+charset=utf-8 79.2172ms 
2023-06-20 09:56:51.0910|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 09:56:51.0910|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 09:56:51.0910|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.6187ms 
2023-06-20 09:56:51.0910|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.1745ms 
2023-06-20 10:01:40.0305|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 10:01:41.8918|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 10:01:41.9318|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 10:01:41.9318|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 10:01:41.9318|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 10:01:41.9565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 10:01:41.9743|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 10:01:42.1356|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 10:01:42.1356|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 10:01:42.1356|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 10:01:42.1356|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 10:01:42.1356|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 10:01:42.7589|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 10:01:42.8551|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:01:42.8663|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:01:42.8879|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 10:01:42.8879|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 21.9975ms 
2023-06-20 10:01:42.8879|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:01:42.9112|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 10:01:42.9112|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 154.9772ms 
2023-06-20 10:01:42.9112|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:01:42.9112|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:01:43.1638|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:01:43.5377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (42ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 10:01:43.5890|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 10:01:43.7208|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 135.5964ms. 
2023-06-20 10:01:43.7243|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 800.2468ms 
2023-06-20 10:01:43.7243|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:01:43.7566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:01:43.7566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 847.1874ms 
2023-06-20 10:01:43.7566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - 
2023-06-20 10:01:43.7566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.0966ms 
2023-06-20 10:01:43.7723|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:01:43.7723|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\site.css' 
2023-06-20 10:01:43.7723|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - - 200 989 text/css 19.9132ms 
2023-06-20 10:01:43.7867|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.4195ms 
2023-06-20 10:13:13.6003|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 10:13:16.4716|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 10:13:16.5133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 10:13:16.5133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 10:13:16.5133|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 10:13:16.5390|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 10:13:16.5575|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 10:13:16.7213|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 10:13:16.7213|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 10:13:16.7228|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 10:13:16.7228|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 10:13:16.7228|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 10:13:17.1676|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 10:13:17.2724|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:13:17.2860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:13:17.3213|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 10:13:17.3213|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.9997ms 
2023-06-20 10:13:17.3213|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:13:17.3487|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 10:13:17.3487|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 185.2481ms 
2023-06-20 10:13:17.3487|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:13:17.3487|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:13:17.5993|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:13:17.9633|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 10:13:18.0124|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 10:13:18.4628|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 454.1764ms. 
2023-06-20 10:13:18.4628|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 1105.0275ms 
2023-06-20 10:13:18.4628|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:13:18.4964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:18.4964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 1147.9614ms 
2023-06-20 10:13:18.4964|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.5029ms 
2023-06-20 10:13:18.5051|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:18.5196|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.5028ms 
2023-06-20 10:13:24.9849|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 10:13:24.9882|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:13:24.9882|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:13:25.0274|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:13:25.0274|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:13:25.0773|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 49.5859ms. 
2023-06-20 10:13:25.0773|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 88.4558ms 
2023-06-20 10:13:25.0773|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:13:25.0773|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 94.3840ms 
2023-06-20 10:13:25.0863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:25.0863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:25.0863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - 
2023-06-20 10:13:25.0863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3729ms 
2023-06-20 10:13:25.0863|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3457ms 
2023-06-20 10:13:25.1012|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/profile.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\profile.css' 
2023-06-20 10:13:25.1012|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - - 200 2781 text/css 14.5976ms 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:13:28.2384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:13:28.2384|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 4.3599ms. 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 8.3774ms 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:13:28.2384|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 11.7618ms 
2023-06-20 10:13:28.2574|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:28.2574|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:28.2574|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1855ms 
2023-06-20 10:13:28.2574|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2068ms 
2023-06-20 10:13:29.2774|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 10:13:29.2774|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:13:29.2774|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:13:29.2774|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:13:29.2774|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 3.9759ms. 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 5.4326ms 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 10.0102ms 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3144ms 
2023-06-20 10:13:29.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.0262ms 
2023-06-20 10:13:43.2629|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 492 
2023-06-20 10:13:43.2629|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 10:13:43.2795|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ResetPassword", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:13:43.3050|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:13:43.6413|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 10:13:43.6473|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:13:43.6473|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 6.4568ms. 
2023-06-20 10:13:43.6473|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder) in 374.3147ms 
2023-06-20 10:13:43.6473|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 10:13:43.6473|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 492 - 200 - text/html;+charset=utf-8 392.7941ms 
2023-06-20 10:13:43.6623|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:43.6623|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:43.6623|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2532ms 
2023-06-20 10:13:43.6623|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3279ms 
2023-06-20 10:13:58.1186|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 492 
2023-06-20 10:13:58.1186|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 10:13:58.1186|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ResetPassword", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:13:58.1186|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:13:58.3892|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 10:13:58.3892|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 6.3416ms. 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder) in 275.9946ms 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 492 - 200 - text/html;+charset=utf-8 278.9507ms 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3630ms 
2023-06-20 10:13:58.3957|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.0253ms 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:14:00.6803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:14:00.6803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 3.0368ms. 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 7.173ms 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 10:14:00.6803|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 9.6042ms 
2023-06-20 10:14:00.6967|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:00.6967|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:00.6967|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3530ms 
2023-06-20 10:14:00.6967|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.1376ms 
2023-06-20 10:14:01.7424|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - 
2023-06-20 10:14:01.7424|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 10:14:01.7424|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ViewLunchGroup", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ViewLunchGroup(System.String) on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:14:01.8019|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 10:14:01.8264|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 10:14:01.8363|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t0].[RestaurantID], [t0].[EventsEventId0], [t0].[RestaurantDescription], [t0].[RestaurantName], [t0].[RestaurantsRestaurantID], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime], [r].[RestaurantID], [r].[EventsEventId] AS [EventsEventId0], [r].[RestaurantDescription], [r].[RestaurantName], [r].[RestaurantsRestaurantID]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
    LEFT JOIN [Restaurants] AS [r] ON [e0].[EventId] = [r].[EventsEventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[RestaurantID], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 10:14:01.8363|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml. 
2023-06-20 10:14:01.8519|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml executed in 12.8869ms. 
2023-06-20 10:14:01.8519|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder) in 107.6204ms 
2023-06-20 10:14:01.8519|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 10:14:01.8519|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 112.4020ms 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1877ms 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/ViewLunchGroupDetailsLGU.css was not modified 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /js/site.js was not modified 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - - 304 - application/javascript 0.6848ms 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - - 304 - text/css 0.8018ms 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:01.8624|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.0839ms 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:14:04.4499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 2.9191ms. 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 3.9851ms 
2023-06-20 10:14:04.4499|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:14:04.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 6.6044ms 
2023-06-20 10:14:04.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:04.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:04.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2716ms 
2023-06-20 10:14:04.4565|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.5211ms 
2023-06-20 10:14:05.5124|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-20 10:14:05.5124|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 10:14:05.5124|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 4.1819ms 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 7.9847ms 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:14:05.5200|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 11.6279ms. 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 11.9331ms 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 13.2436ms 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2949ms 
2023-06-20 10:14:05.5345|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3628ms 
2023-06-20 10:14:18.7344|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 
2023-06-20 10:14:18.7344|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:14:18.7383|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:14:18.7383|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 10:14:18.8821|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 10:14:19.0175|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 10:14:19.0175|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 10:14:19.0175|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 279.2932ms 
2023-06-20 10:14:19.0175|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 10:14:19.0175|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 - 302 0 - 283.6034ms 
2023-06-20 10:14:19.0206|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 10:14:19.0206|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 10:14:19.0206|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 10:14:19.0206|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:14:19.0206|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 10:14:19.0206|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 10:14:19.0206|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 10.0443ms. 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 12.007ms 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 14.6419ms 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3257ms 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=F2KrEDiClOWB4ilhngcxQStMPXrsXhQivzE1yTjnAAc - - 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/AdminHome.css was not modified 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=F2KrEDiClOWB4ilhngcxQStMPXrsXhQivzE1yTjnAAc - - - 304 - text/css 0.3698ms 
2023-06-20 10:14:19.0342|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4440ms 
2023-06-20 10:14:22.4660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ManageGroups/NotifyLunchGroupUsers application/x-www-form-urlencoded 0 
2023-06-20 10:14:22.4660|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.NotifyLunchGroupUsers (Lunch Tinder)' 
2023-06-20 10:14:22.4660|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "NotifyLunchGroupUsers", controller = "ManageGroups"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] NotifyLunchGroupUsers() on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 10:14:22.4820|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = 1
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 10:14:22.5101|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.NotifyLunchGroupUsers (Lunch Tinder) in 1964.4045ms 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.NotifyLunchGroupUsers (Lunch Tinder)' 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ManageGroups/NotifyLunchGroupUsers application/x-www-form-urlencoded 0 - 302 0 - 1968.0280ms 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 10:14:24.4335|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 10:14:24.4335|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 10:14:24.4335|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 10:14:24.4335|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 3.3026ms. 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 4.4668ms 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 7.7796ms 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:24.4432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2248ms 
2023-06-20 10:14:24.4569|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.2094ms 
2023-06-20 10:14:28.7375|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 10:14:28.7384|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 10:14:28.7384|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 10:14:28.7667|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 10:14:28.8063|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE 0 = 1 
2023-06-20 10:14:28.8063|WARN|Microsoft.EntityFrameworkCore.Query|The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased. 
2023-06-20 10:14:28.8063|WARN|Microsoft.EntityFrameworkCore.Query|The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased. 
2023-06-20 10:14:28.8063|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE 0 = 1
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 10:14:28.8063|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 10:14:28.8239|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 11.8776ms. 
2023-06-20 10:14:28.8239|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 85.0028ms 
2023-06-20 10:14:28.8239|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 10:14:28.8239|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 87.7828ms 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/mangeUser.css?v=dwso-uoLkKIf5JlvLTgKuoFKsc-QpOk79km1urSJLfU - - 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3625ms 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/mangeUser.css was not modified 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/mangeUser.css?v=dwso-uoLkKIf5JlvLTgKuoFKsc-QpOk79km1urSJLfU - - - 304 - text/css 0.5732ms 
2023-06-20 10:14:28.8343|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.0346ms 
2023-06-20 10:14:38.2749|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ManageUsers/SendInvitation application/x-www-form-urlencoded 252 
2023-06-20 10:14:38.2749|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder)' 
2023-06-20 10:14:38.2749|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "SendInvitation", controller = "ManageUsers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SendInvitation(Lunch_Tinder.Models.MailData) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 10:14:38.2858|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 10:14:38.3286|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Invites] ([EmailAddress], [Status], [UserName])
OUTPUT INSERTED.[InviteId]
VALUES (@p0, @p1, @p2); 
2023-06-20 10:14:38.3484|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 10:14:39.9608|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageUsers/Index. 
2023-06-20 10:14:39.9608|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder) in 1690.9663ms 
2023-06-20 10:14:39.9608|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder)' 
2023-06-20 10:14:39.9608|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ManageUsers/SendInvitation application/x-www-form-urlencoded 252 - 302 0 - 1695.4091ms 
2023-06-20 10:14:39.9725|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 10:14:39.9725|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 10:14:39.9725|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 10:14:39.9725|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 10:14:39.9725|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE [i].[InviteId] = 1 
2023-06-20 10:14:39.9725|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[InviteId] = 1
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 10:14:39.9725|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 7.523ms. 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 16.5229ms 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 18.2637ms 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:14:39.9896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3602ms 
2023-06-20 10:14:40.0061|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.7116ms 
2023-06-20 10:16:51.2940|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 10:16:51.3016|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__id_0 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 2.9888ms. 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 4.6861ms 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 10:16:51.3016|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 16.3674ms 
2023-06-20 10:16:51.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:16:51.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:16:51.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2549ms 
2023-06-20 10:16:51.3159|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.7625ms 
2023-06-20 10:16:53.6616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/Index - - 
2023-06-20 10:16:53.6616|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 10:16:53.6616|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageGroups"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 10:16:53.6616|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 10:16:53.6616|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/ManageGroups.cshtml. 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/ManageGroups.cshtml executed in 12.413ms. 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder) in 14.3679ms 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/Index - - - 200 - text/html;+charset=utf-8 18.9171ms 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/Groups.css?v=dPa9_gC-JTlxCP2q3mFPSPqU5X59cwX4rWFwNjBRtXo - - 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3324ms 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/Groups.css was not modified 
2023-06-20 10:16:53.6788|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/Groups.css?v=dPa9_gC-JTlxCP2q3mFPSPqU5X59cwX4rWFwNjBRtXo - - - 304 - text/css 0.2935ms 
2023-06-20 10:16:53.6943|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:16:53.6943|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.9050ms 
2023-06-20 10:17:21.3673|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ManageGroups/Create application/x-www-form-urlencoded 275 
2023-06-20 10:17:21.3673|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder)' 
2023-06-20 10:17:21.3673|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Create", controller = "ManageGroups"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Create(System.String, System.String) on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 10:17:21.3786|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [LunchGroups] ([Description], [GroupName])
OUTPUT INSERTED.[GroupId]
VALUES (@p0, @p1); 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=HRLunchGroup. 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder) in 11.1974ms 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder)' 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ManageGroups/Create application/x-www-form-urlencoded 275 - 302 0 - 13.8067ms 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 10:17:21.3786|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 10:17:21.3786|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 10:17:21.3993|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 10:17:21.3993|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 10:17:21.3993|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 10:17:21.4405|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 33.3286ms. 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 54.3472ms 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - - 200 - text/html;+charset=utf-8 59.4353ms 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3839ms 
2023-06-20 10:17:21.4406|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:17:21.4570|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/LunchGroupDetails.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\LunchGroupDetails.css' 
2023-06-20 10:17:21.4570|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - - 200 575 text/css 5.4251ms 
2023-06-20 10:17:21.4570|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.3500ms 
2023-06-20 10:17:33.6865|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 335 
2023-06-20 10:17:33.6865|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-20 10:17:33.6865|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "InviteToLunchGroup", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] InviteToLunchGroup(Lunch_Tinder.ViewModels.VMInviteLG) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 10:17:33.7032|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [InvitesLG] ([LunchGroupName], [Status], [UsernameEmail])
OUTPUT INSERTED.[InviteID]
VALUES (@p0, @p1, @p2); 
2023-06-20 10:17:33.7067|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 10:17:35.4575|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 10:17:35.4575|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 5.4679ms. 
2023-06-20 10:17:35.4575|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder) in 1773.1579ms 
2023-06-20 10:17:35.4575|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-20 10:17:35.4575|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 335 - 200 - text/html;+charset=utf-8 1778.3034ms 
2023-06-20 10:17:35.4757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 10:17:35.4757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 10:17:35.4757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3088ms 
2023-06-20 10:17:35.4757|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3205ms 
2023-06-20 12:43:34.9416|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 12:44:13.6671|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 12:48:22.7253|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 12:50:49.2539|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 12:54:39.6800|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 12:57:54.3197|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 13:01:13.9005|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 13:01:28.7505|ERROR|Program|Stopped program because of exception {"Type":"System.InvalidOperationException", "TargetSite":"Void ValidateService(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)", "Message":"Error while validating the service descriptor 'ServiceType: Lunch_Tinder.Data.LunchTinderContext Lifetime: Scoped ImplementationType: Lunch_Tinder.Data.LunchTinderContext': Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "InnerException":{"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite[] CreateArgumentCallSites(System.Type, Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain, System.Reflection.ParameterInfo[], Boolean)", "Message":"Unable to resolve service for type 'NLog.Logger' while attempting to activate 'Lunch_Tinder.Data.LunchTinderContext'.", "Data":{}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceDescriptor serviceDescriptor, CallSiteChain callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)"}, "Source":"Microsoft.Extensions.DependencyInjection", "HResult":-2146233079, "StackTrace":"   at Microsoft.Extensions.DependencyInjection.ServiceProvider.ValidateService(ServiceDescriptor descriptor)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider..ctor(ICollection`1 serviceDescriptors, ServiceProviderOptions options)"}
2023-06-20 14:04:34.7593|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:04:39.9119|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:04:39.9564|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:04:39.9594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:04:39.9594|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:04:39.9857|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:04:40.0045|INFO|Microsoft.EntityFrameworkCore.Migrations|Applying migration '20230615161706_EventLunchRelationship'. 
2023-06-20 14:04:40.1316|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Restaurants] DROP CONSTRAINT [FK_Restaurants_Events_EventsEventId]; 
2023-06-20 14:04:40.1316|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE [Restaurants] DROP CONSTRAINT [FK_Restaurants_Restaurants_RestaurantsRestaurantID]; 
2023-06-20 14:04:40.1316|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP INDEX [IX_Restaurants_EventsEventId] ON [Restaurants]; 
2023-06-20 14:04:40.1316|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DROP INDEX [IX_Restaurants_RestaurantsRestaurantID] ON [Restaurants]; 
2023-06-20 14:04:40.1703|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Restaurants]') AND [c].[name] = N'EventsEventId');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [Restaurants] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [Restaurants] DROP COLUMN [EventsEventId]; 
2023-06-20 14:04:40.1797|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Restaurants]') AND [c].[name] = N'RestaurantsRestaurantID');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Restaurants] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Restaurants] DROP COLUMN [RestaurantsRestaurantID]; 
2023-06-20 14:04:40.1797|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [EventRestaurant] (
    [EventsEventId] int NOT NULL,
    [RestaurantOptionsRestaurantID] int NOT NULL,
    CONSTRAINT [PK_EventRestaurant] PRIMARY KEY ([EventsEventId], [RestaurantOptionsRestaurantID]),
    CONSTRAINT [FK_EventRestaurant_Events_EventsEventId] FOREIGN KEY ([EventsEventId]) REFERENCES [Events] ([EventId]) ON DELETE CASCADE,
    CONSTRAINT [FK_EventRestaurant_Restaurants_RestaurantOptionsRestaurantID] FOREIGN KEY ([RestaurantOptionsRestaurantID]) REFERENCES [Restaurants] ([RestaurantID]) ON DELETE CASCADE
); 
2023-06-20 14:04:40.1797|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Events] SET [EndTime] = '2023-06-15T16:22:05.8048496Z', [StartTime] = '2023-06-15T16:17:05.8048491Z'
WHERE [EventId] = 1;
SELECT @@ROWCOUNT; 
2023-06-20 14:04:40.1944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RestaurantID', N'RestaurantDescription', N'RestaurantName') AND [object_id] = OBJECT_ID(N'[Restaurants]'))
    SET IDENTITY_INSERT [Restaurants] ON;
INSERT INTO [Restaurants] ([RestaurantID], [RestaurantDescription], [RestaurantName])
VALUES (1, N'We don’t do burgers, we do Locke burgers.', N'Locke Burger Castletroy'),
(2, N'Italian pizza and European dishes', N'La Cucina Limerick'),
(3, N'Sandwhiches, Salads,Breakfast Foods', N'Delish Cafe'),
(4, N'Hotel, Traditional Food', N'McLaughlins Restaurant');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RestaurantID', N'RestaurantDescription', N'RestaurantName') AND [object_id] = OBJECT_ID(N'[Restaurants]'))
    SET IDENTITY_INSERT [Restaurants] OFF; 
2023-06-20 14:04:40.1944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Password] = N'$2a$11$Wh0t3jRNHyZRGTsd6bO/veOwOA2hwVo3zqt7JsK8T4EB261e5ld9i'
WHERE [UserId] = 1;
SELECT @@ROWCOUNT; 
2023-06-20 14:04:40.1944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE [Users] SET [Password] = N'$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'
WHERE [UserId] = 2;
SELECT @@ROWCOUNT; 
2023-06-20 14:04:40.1944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE INDEX [IX_EventRestaurant_RestaurantOptionsRestaurantID] ON [EventRestaurant] ([RestaurantOptionsRestaurantID]); 
2023-06-20 14:04:40.1944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230615161706_EventLunchRelationship', N'7.0.5'); 
2023-06-20 14:04:40.5912|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:04:40.5912|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:04:40.5912|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:04:40.5912|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:04:40.5912|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:04:41.2541|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:04:41.4393|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:04:41.4437|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:04:41.4609|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:04:41.4784|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:04:41.7155|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 242.9861ms. 
2023-06-20 14:04:41.7155|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 258.9167ms 
2023-06-20 14:04:41.7155|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:04:41.8274|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:04:41.8274|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:04:41.8274|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 14:04:41.8471|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 9.1853ms 
2023-06-20 14:04:41.8471|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 581.9521ms 
2023-06-20 14:04:41.8629|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.5260ms 
2023-06-20 14:04:41.8670|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/login.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\login.css' 
2023-06-20 14:04:41.8670|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 200 1882 text/css 39.9782ms 
2023-06-20 14:05:01.8885|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:05:03.8442|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:05:03.8875|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:05:03.8875|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:05:03.8875|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:05:03.9143|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:05:03.9335|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:05:04.1179|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:05:04.1179|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:05:04.1179|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:05:04.1179|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:05:04.1179|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:05:04.5677|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:05:04.7223|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:05:04.7243|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:05:04.7243|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:05:04.7507|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:05:04.9386|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 189.7671ms. 
2023-06-20 14:05:04.9441|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 206.0023ms 
2023-06-20 14:05:04.9441|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:05:04.9874|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:05:04.9874|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:05:04.9954|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 431.0340ms 
2023-06-20 14:05:04.9954|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.8629ms 
2023-06-20 14:05:05.0137|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.2547ms 
2023-06-20 14:05:11.9054|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:05:11.9054|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:05:11.9054|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:05:11.9217|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:05:12.4315|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 509.742ms 
2023-06-20 14:05:12.4315|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:05:12.4315|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress != null && u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:05:12.5556|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 650.2379ms 
2023-06-20 14:05:12.5556|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:05:12.5556|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:05:12.5556|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3224ms 
2023-06-20 14:05:12.5681|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.8851ms 
2023-06-20 14:11:18.9718|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:11:21.0512|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:11:21.0973|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:11:21.0973|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:11:21.0973|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:11:21.1246|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:11:21.1539|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:11:21.3421|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:11:21.3421|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:11:21.3421|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:11:21.3421|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:11:21.3421|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:11:22.0409|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:11:22.1629|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:11:22.1629|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:11:22.1783|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:11:22.1920|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:11:22.3798|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 189.6923ms. 
2023-06-20 14:11:22.3798|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 206.0438ms 
2023-06-20 14:11:22.3798|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:11:22.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:11:22.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:11:22.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 410.7686ms 
2023-06-20 14:11:22.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 8.7544ms 
2023-06-20 14:11:22.4695|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.2710ms 
2023-06-20 14:15:05.3178|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:15:07.2840|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:15:07.3273|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:15:07.3299|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:15:07.3299|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:15:07.3540|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:15:07.3729|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:15:07.5519|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:15:07.5519|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:15:07.5519|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:15:07.5519|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:15:07.5519|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:15:08.0878|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:15:08.1857|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:15:08.1857|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:15:08.1993|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:15:08.2108|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:15:08.3659|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 156.6749ms. 
2023-06-20 14:15:08.3659|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 171.6986ms 
2023-06-20 14:15:08.3659|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:15:08.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 14:15:08.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:15:08.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:15:08.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 331.2495ms 
2023-06-20 14:15:08.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.6417ms 
2023-06-20 14:15:08.4262|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-20 14:15:08.4262|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 13.5371ms 
2023-06-20 14:15:08.4262|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.2829ms 
2023-06-20 14:15:15.1570|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:15:15.1594|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:15:15.1594|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:15:15.1594|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:15:15.6150|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 442.2385ms 
2023-06-20 14:15:15.6150|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:15:15.6150|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:15:15.7023|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 545.2903ms 
2023-06-20 14:15:15.7085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:15:15.7085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:15:15.7085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3248ms 
2023-06-20 14:15:15.7085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3029ms 
2023-06-20 14:16:33.0916|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:16:35.1545|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:16:35.2026|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (25ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:16:35.2054|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:16:35.2054|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:16:35.2317|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:16:35.2545|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:16:35.4394|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:16:35.4394|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:16:35.4394|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:16:35.4394|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:16:35.4394|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:16:36.2636|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:16:36.3580|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:16:36.3580|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:16:36.3719|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:16:36.3826|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:16:36.5300|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 149.8046ms. 
2023-06-20 14:16:36.5355|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 163.4ms 
2023-06-20 14:16:36.5355|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:16:36.5743|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:16:36.5743|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:16:36.5743|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 315.7827ms 
2023-06-20 14:16:36.5812|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.9233ms 
2023-06-20 14:16:36.5972|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.9660ms 
2023-06-20 14:16:43.9424|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:16:43.9424|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:16:43.9424|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:16:43.9563|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:16:44.3910|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 434.6046ms 
2023-06-20 14:16:44.3910|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:16:44.3910|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:16:44.4779|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 535.5613ms 
2023-06-20 14:16:44.4779|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:16:44.4779|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:16:44.4779|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3778ms 
2023-06-20 14:16:44.4883|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.4446ms 
2023-06-20 14:18:42.3699|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:18:44.3681|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:18:44.4101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:18:44.4101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:18:44.4101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:18:44.4357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:18:44.4538|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:18:44.6157|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:18:44.6157|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:18:44.6157|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:18:44.6157|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:18:44.6157|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:18:45.4595|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:18:45.5620|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:18:45.5639|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:18:45.5639|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:18:45.5884|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:18:45.7423|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 156.3262ms. 
2023-06-20 14:18:45.7423|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 170.043ms 
2023-06-20 14:18:45.7423|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:18:45.7841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:18:45.7841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:18:45.7841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.1635ms 
2023-06-20 14:18:45.7841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 335.2693ms 
2023-06-20 14:18:45.8056|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.5139ms 
2023-06-20 14:18:53.8253|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:18:53.8253|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:18:53.8253|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:18:53.8390|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:19:03.5775|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 9738.4223ms 
2023-06-20 14:19:03.5775|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:19:03.5832|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:19:03.6845|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 9859.1996ms 
2023-06-20 14:19:03.7323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:19:03.7323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:19:03.7323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4999ms 
2023-06-20 14:19:03.7370|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3095ms 
2023-06-20 14:21:58.0097|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:22:00.0381|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:22:00.0801|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:22:00.0801|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:22:00.0801|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:22:00.1065|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:22:00.1256|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:22:00.3037|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:22:00.3037|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:22:00.3037|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:22:00.3037|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:22:00.3037|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:22:00.7999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:22:00.8940|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:22:00.8940|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:22:00.9077|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:22:00.9077|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:22:01.0706|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 154.6868ms. 
2023-06-20 14:22:01.0706|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 167.7428ms 
2023-06-20 14:22:01.0706|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:22:01.1149|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:22:01.1149|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:22:01.1149|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 321.8853ms 
2023-06-20 14:22:01.1149|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.5948ms 
2023-06-20 14:22:01.1381|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.1675ms 
2023-06-20 14:22:09.6805|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:22:09.6805|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:22:09.6805|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:22:09.6948|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:22:49.5089|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 39814.057ms 
2023-06-20 14:22:49.5089|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:22:49.5089|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:22:49.6040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 39923.5248ms 
2023-06-20 14:22:49.6040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:22:49.6040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:22:49.6040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2473ms 
2023-06-20 14:22:49.6168|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.2716ms 
2023-06-20 14:28:21.7883|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:28:24.2021|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:28:24.2510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:28:24.2510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:28:24.2510|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:28:24.2854|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:28:24.3063|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:28:24.4745|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:28:24.4745|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:28:24.4745|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:28:24.4745|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:28:24.4745|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:28:25.2865|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:28:25.3796|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:28:25.3796|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:28:25.3932|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:28:25.3932|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:28:25.5536|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 150.9236ms. 
2023-06-20 14:28:25.5536|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 164.7485ms 
2023-06-20 14:28:25.5536|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:28:25.5961|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 14:28:25.5961|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:28:25.5961|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:28:25.5961|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 317.2491ms 
2023-06-20 14:28:25.5961|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 12.5975ms 
2023-06-20 14:28:25.6108|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-20 14:28:25.6108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 15.4873ms 
2023-06-20 14:28:25.6108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.3175ms 
2023-06-20 14:28:32.9508|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:28:32.9508|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:28:32.9508|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:28:32.9645|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:28:40.8359|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 14:28:51.7748|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 18810.329ms 
2023-06-20 14:28:51.7748|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:28:51.7748|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress != null && u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:28:51.8753|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:28:51.8753|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:28:51.8753|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4887ms 
2023-06-20 14:28:51.8791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 18928.3518ms 
2023-06-20 14:28:51.8791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3805ms 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 7.821ms. 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 8.341ms 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:29:00.6429|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 12.1819ms 
2023-06-20 14:29:00.6660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:29:00.6660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2246ms 
2023-06-20 14:29:06.8173|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:29:06.8173|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:29:06.8173|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:29:06.8173|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:29:12.3703|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 14:29:22.2071|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 15388.4728ms 
2023-06-20 14:29:22.2071|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:29:22.2071|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress != null && u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:29:22.2233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 15406.0795ms 
2023-06-20 14:29:22.2233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:29:22.2233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:29:22.2233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1841ms 
2023-06-20 14:29:22.2233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.6800ms 
2023-06-20 14:53:45.8706|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:53:48.6867|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:53:48.7268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:53:48.7268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:53:48.7268|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:53:48.7545|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:53:48.7740|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:53:48.9411|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:53:48.9411|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:53:48.9411|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:53:48.9411|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:53:48.9411|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:53:49.4134|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:53:49.5087|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:53:49.5087|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:53:49.5237|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:53:49.5357|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:53:49.7080|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 175.4225ms. 
2023-06-20 14:53:49.7080|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 189.2884ms 
2023-06-20 14:53:49.7080|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 346.3100ms 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 9.9715ms 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-20 14:53:49.7536|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 13.0369ms 
2023-06-20 14:53:49.7791|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.4958ms 
2023-06-20 14:53:56.8831|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:53:56.8831|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:53:56.8831|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:53:56.8965|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:54:10.9278|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 14031.1087ms 
2023-06-20 14:54:10.9278|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:54:10.9278|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:54:11.0193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 14136.0585ms 
2023-06-20 14:54:11.0193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:54:11.0193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:54:11.0193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4683ms 
2023-06-20 14:54:11.0193|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5911ms 
2023-06-20 14:55:39.2437|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:55:41.1797|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:55:41.2217|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:55:41.2217|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:55:41.2217|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:55:41.2482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:55:41.2672|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:55:41.4373|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:55:41.4373|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:55:41.4373|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:55:41.4373|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:55:41.4373|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:55:42.0873|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:55:42.1795|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:55:42.1795|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:55:42.1924|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:55:42.1924|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:55:42.3483|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 147.3924ms. 
2023-06-20 14:55:42.3483|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 160.4948ms 
2023-06-20 14:55:42.3483|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:55:42.3936|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:55:42.3936|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:55:42.3936|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 311.7686ms 
2023-06-20 14:55:42.3936|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 10.6927ms 
2023-06-20 14:55:42.4179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.2715ms 
2023-06-20 14:55:48.9504|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:55:48.9504|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:55:48.9504|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:55:48.9637|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:55:49.3999|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 436.0584ms 
2023-06-20 14:55:49.3999|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:55:49.3999|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:55:49.4933|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 542.9052ms 
2023-06-20 14:55:49.5147|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:55:49.5147|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1963ms 
2023-06-20 14:55:49.5180|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:55:49.5180|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4863ms 
2023-06-20 14:56:19.2252|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:56:21.3120|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:56:21.3528|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:56:21.3528|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:56:21.3528|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:56:21.3791|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:56:21.3982|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:56:21.5777|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:56:21.5777|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:56:21.5777|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:56:21.5777|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:56:21.5777|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:56:22.1660|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:56:22.2618|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:56:22.2618|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:56:22.2747|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:56:22.2842|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:56:22.4330|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 150.2443ms. 
2023-06-20 14:56:22.4330|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 163.6325ms 
2023-06-20 14:56:22.4330|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:56:22.4782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:56:22.4782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:56:22.4782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 320.9576ms 
2023-06-20 14:56:22.4782|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.9361ms 
2023-06-20 14:56:22.4993|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.0103ms 
2023-06-20 14:56:29.2710|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:56:29.2710|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:56:29.2710|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:56:29.2846|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:56:33.2096|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 3924.8639ms 
2023-06-20 14:56:33.2096|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:56:33.2096|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Any(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.Any[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.VerifyLoginCredentials(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 68\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:56:33.3036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 4032.4781ms 
2023-06-20 14:56:33.3036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:56:33.3036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:56:33.3036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3240ms 
2023-06-20 14:56:33.3036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3641ms 
2023-06-20 14:57:17.3255|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:57:19.2804|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:57:19.3209|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:57:19.3209|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:57:19.3209|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:57:19.3480|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:57:19.3657|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:57:19.5309|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:57:19.5309|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:57:19.5309|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:57:19.5309|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:57:19.5309|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:57:19.9616|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:57:20.0587|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:57:20.0587|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:57:20.0716|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:57:20.0831|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:57:20.2463|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 164.7494ms. 
2023-06-20 14:57:20.2463|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 179.8813ms 
2023-06-20 14:57:20.2527|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:57:20.2960|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:57:20.2960|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:57:20.2960|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 339.8486ms 
2023-06-20 14:57:20.3125|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 16.4742ms 
2023-06-20 14:57:20.3265|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.5247ms 
2023-06-20 14:57:28.9403|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:57:28.9403|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:57:28.9403|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:57:28.9403|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:57:32.6958|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 14:57:34.5102|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 5555.7383ms 
2023-06-20 14:57:34.5102|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:57:34.5102|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress != null && u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:57:34.6099|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:57:34.6099|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:57:34.6099|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4205ms 
2023-06-20 14:57:34.6136|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 5673.3269ms 
2023-06-20 14:57:34.6136|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3982ms 
2023-06-20 14:58:27.5264|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 14:58:29.6450|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:58:29.6901|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:58:29.6927|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 14:58:29.6927|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 14:58:29.7168|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 14:58:29.7358|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 14:58:29.9014|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 14:58:29.9014|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 14:58:29.9014|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 14:58:29.9014|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 14:58:29.9014|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 14:58:30.2519|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 14:58:30.3456|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:58:30.3473|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:58:30.3473|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:58:30.3681|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 14:58:30.5140|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 147.5486ms. 
2023-06-20 14:58:30.5197|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 161.1762ms 
2023-06-20 14:58:30.5197|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:58:30.5580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:58:30.5580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:58:30.5580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.7487ms 
2023-06-20 14:58:30.5580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 314.8961ms 
2023-06-20 14:58:30.5784|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.3929ms 
2023-06-20 14:58:37.2051|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 14:58:37.2066|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 14:58:37.2066|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:58:37.2066|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 14:58:40.2508|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 14:58:44.3021|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 7084.0661ms 
2023-06-20 14:58:44.3021|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 14:58:44.3021|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress != null && u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 14:58:44.3981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 14:58:44.3981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 14:58:44.3981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2937ms 
2023-06-20 14:58:44.3981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 7196.4902ms 
2023-06-20 14:58:44.3981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.4588ms 
2023-06-20 15:01:27.4187|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:01:29.4727|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:01:29.5136|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:01:29.5136|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:01:29.5136|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:01:29.5397|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:01:29.5580|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:01:29.7206|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:01:29.7206|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:01:29.7221|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:01:29.7221|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:01:29.7221|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:01:30.1174|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:01:30.2310|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:01:30.2310|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:01:30.2466|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:01:30.2587|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:01:30.4203|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 164.5304ms. 
2023-06-20 15:01:30.4203|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 178.1753ms 
2023-06-20 15:01:30.4257|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:01:30.4645|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:01:30.4645|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:01:30.4731|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 353.4047ms 
2023-06-20 15:01:30.4731|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 9.7810ms 
2023-06-20 15:01:30.4886|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.1810ms 
2023-06-20 15:01:47.3598|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 15:01:47.3598|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:01:47.3598|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:01:47.3743|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:01:50.4638|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:01:52.5119|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 5137.569ms 
2023-06-20 15:01:52.5119|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:01:52.5119|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password ?? \"\"))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 15:01:52.6110|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:01:52.6110|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:01:52.6110|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2797ms 
2023-06-20 15:01:52.6170|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 5257.1139ms 
2023-06-20 15:01:52.6170|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.3264ms 
2023-06-20 15:04:08.7561|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:04:10.8832|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:04:10.9240|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:04:10.9270|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:04:10.9270|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:04:10.9496|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:04:10.9685|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:04:11.1325|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:04:11.1325|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:04:11.1325|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:04:11.1325|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:04:11.1325|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:04:11.5396|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:04:11.6363|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:04:11.6363|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:04:11.6505|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:04:11.6633|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:04:11.8192|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 158.1037ms. 
2023-06-20 15:04:11.8192|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 173.5238ms 
2023-06-20 15:04:11.8192|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:04:11.8637|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:04:11.8637|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:04:11.8637|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 329.8687ms 
2023-06-20 15:04:11.8637|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.7248ms 
2023-06-20 15:04:11.8865|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.7821ms 
2023-06-20 15:04:18.2396|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 15:04:18.2396|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:04:18.2396|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:04:18.2535|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:04:21.0751|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (36ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:04:24.7037|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 6450.0738ms 
2023-06-20 15:04:24.7037|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:04:24.7093|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.InvalidOperationException", "TargetSite":"Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression <VisitMethodCall>g__CheckTranslated|15_0(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression, <>c__DisplayClass15_0 ByRef)", "Message":"The LINQ expression 'DbSet<User>()\r\n    .Where(u => u.EmailAddress.Equals(__email_0) && PasswordHelper.VerifyPassword(\r\n        password: __password_1, \r\n        hashedPassword: u.Password))' could not be translated. Additional information: Translation of method 'Lunch_Tinder.Security.PasswordHelper.VerifyPassword' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.", "Data":{}, "Source":"Microsoft.EntityFrameworkCore", "HResult":-2146233079, "StackTrace":"   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.<VisitMethodCall>g__CheckTranslated|15_0(ShapedQueryExpression translated, <>c__DisplayClass15_0& )\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)\r\n   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)\r\n   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)\r\n   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)\r\n   at Lunch_Tinder.Data.LunchTinderContext.GetUserByLogin(String email, String password) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Data\\UserServices.cs:line 81\r\n   at Lunch_Tinder.Controllers.UserController.Login(VMLogin modelLogin) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\UserController.cs:line 77\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 15:04:24.7976|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:04:24.7976|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:04:24.7976|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3067ms 
2023-06-20 15:04:24.8034|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 500 - text/html;+charset=utf-8 6563.8346ms 
2023-06-20 15:04:24.8034|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.5082ms 
2023-06-20 15:06:36.3857|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:06:38.2271|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:06:38.2679|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:06:38.2706|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:06:38.2706|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:06:38.2944|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:06:38.3125|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:06:38.4719|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:06:38.4719|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:06:38.4734|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:06:38.4734|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:06:38.4734|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:06:38.9649|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:06:39.0682|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:06:39.0682|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:06:39.0826|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:06:39.0826|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:06:39.2551|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 162.7927ms. 
2023-06-20 15:06:39.2551|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 177.637ms 
2023-06-20 15:06:39.2551|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:06:39.3006|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:06:39.3006|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:06:39.3006|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 15:06:39.3006|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 342.1350ms 
2023-06-20 15:06:39.3006|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 8.8408ms 
2023-06-20 15:06:39.3232|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-20 15:06:39.3232|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 23.0824ms 
2023-06-20 15:06:39.3232|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.0330ms 
2023-06-20 15:06:51.1251|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:06:53.0589|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:06:53.1019|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (23ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:06:53.1019|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:06:53.1019|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:06:53.1289|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:06:53.1474|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:06:53.3531|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:06:53.3531|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:06:53.3531|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:06:53.3531|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:06:53.3531|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:06:53.8083|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:06:53.9183|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:06:53.9183|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:06:53.9314|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:06:53.9418|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:06:54.0902|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 150.2825ms. 
2023-06-20 15:06:54.0902|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 163.6417ms 
2023-06-20 15:06:54.0902|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:06:54.1340|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:06:54.1340|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:06:54.1340|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 335.2727ms 
2023-06-20 15:06:54.1340|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.3628ms 
2023-06-20 15:06:54.1524|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 18.4073ms 
2023-06-20 15:08:01.2041|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:08:03.7249|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:08:03.7707|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:08:03.7707|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:08:03.7707|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:08:03.8011|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:08:03.8228|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:08:04.0199|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:08:04.0199|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:08:04.0199|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:08:04.0199|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:08:04.0199|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:08:04.9539|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:08:05.0625|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:08:05.0625|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:08:05.0776|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:08:05.0899|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:08:05.2729|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 185.6423ms. 
2023-06-20 15:08:05.2729|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 199.4398ms 
2023-06-20 15:08:05.2729|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:08:05.3984|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:08:05.3984|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:08:05.3984|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 450.3490ms 
2023-06-20 15:08:05.3984|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.4264ms 
2023-06-20 15:08:05.4334|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.0044ms 
2023-06-20 15:08:13.9812|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 
2023-06-20 15:08:13.9812|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 15:08:13.9812|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:08:13.9949|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:08:17.8063|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:08:19.9290|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:08:22.1938|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 15:08:29.0462|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 15:08:29.0462|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 15051.648ms 
2023-06-20 15:08:29.0462|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:08:29.0462|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 15:08:29.0552|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 247 - 302 0 - 15074.0088ms 
2023-06-20 15:08:29.0552|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 15:08:29.0552|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 15:08:29.1047|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:08:29.2469|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:08:29.2834|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 15:08:29.3083|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 25.3204ms. 
2023-06-20 15:08:29.3083|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 248.2021ms 
2023-06-20 15:08:29.3083|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 15:08:29.3083|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 260.1989ms 
2023-06-20 15:08:29.3300|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2613ms 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/site.css was not modified 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/site.css?v=DCYbtMtBGubm-VvPIQkAacWcbAqPwaD8d0W4nXWnuqY - - - 304 - text/css 6.7234ms 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:08:29.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.4868ms 
2023-06-20 15:08:32.6280|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 15:08:32.6298|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 15:08:32.6298|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:08:32.6298|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:08:32.6298|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 36.8972ms. 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 48.7475ms 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 53.0381ms 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - 
2023-06-20 15:08:32.6792|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3348ms 
2023-06-20 15:08:32.6922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3111ms 
2023-06-20 15:08:32.6922|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/profile.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\profile.css' 
2023-06-20 15:08:32.6922|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - - 200 2781 text/css 7.8032ms 
2023-06-20 15:08:40.8578|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/Profile application/x-www-form-urlencoded 508 
2023-06-20 15:08:40.8578|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 15:08:40.8676|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:08:40.9139|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__ToUpper_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE UPPER(LTRIM(RTRIM([u].[UserName]))) = @__ToUpper_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-20 15:08:40.9139|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:08:40.9929|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 15:08:40.9929|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 5.1552ms. 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 136.7965ms 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/Profile application/x-www-form-urlencoded 508 - 200 - text/html;+charset=utf-8 148.4245ms 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:08:41.0043|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4045ms 
2023-06-20 15:08:41.0194|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.9978ms 
2023-06-20 15:08:56.2443|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 494 
2023-06-20 15:08:56.2443|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 15:08:56.2443|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ResetPassword", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:08:56.2443|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:08:56.5177|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 15:08:56.5177|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 15:08:56.5246|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 6.8199ms. 
2023-06-20 15:08:56.5246|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder) in 278.3877ms 
2023-06-20 15:08:56.5246|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 15:08:56.5246|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 494 - 200 - text/html;+charset=utf-8 283.2648ms 
2023-06-20 15:08:56.5358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:08:56.5358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:08:56.5358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3923ms 
2023-06-20 15:08:56.5358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.4109ms 
2023-06-20 15:14:26.1095|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:14:28.0157|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:14:28.0591|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:14:28.0591|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:14:28.0591|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:14:28.0836|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:14:28.1017|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:14:28.2661|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:14:28.2661|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:14:28.2661|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:14:28.2661|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:14:28.2661|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:14:28.7482|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:14:28.8409|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:28.8517|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:14:28.8742|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 15:14:28.8742|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 22.9068ms 
2023-06-20 15:14:28.8742|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:28.8971|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 15:14:28.8971|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 151.7193ms 
2023-06-20 15:14:28.9226|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 15:14:28.9226|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 15:14:29.1723|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:14:29.5446|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:14:29.5979|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 15:14:29.7250|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 131.0471ms. 
2023-06-20 15:14:29.7250|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 805.3474ms 
2023-06-20 15:14:29.7250|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 15:14:29.7601|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 863.0290ms 
2023-06-20 15:14:29.7601|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:14:29.7601|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.7461ms 
2023-06-20 15:14:29.7695|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:14:29.7861|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.5794ms 
2023-06-20 15:14:35.0805|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - 
2023-06-20 15:14:35.0850|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 15:14:35.0850|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ViewLunchGroup", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ViewLunchGroup(System.String) on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 15:14:35.2119|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:14:35.2306|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:14:35.2494|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:14:35.2667|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (15ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName], [t2].[LunchGroupsGroupId], [t2].[UsersUserId], [t2].[UserId], [t2].[EmailAddress], [t2].[Password], [t2].[UserName], [t2].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime], [t1].[EventsEventId] AS [EventsEventId0], [t1].[RestaurantOptionsRestaurantID], [t1].[RestaurantID], [t1].[RestaurantDescription], [t1].[RestaurantName]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
    LEFT JOIN (
        SELECT [e1].[EventsEventId], [e1].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
        FROM [EventRestaurant] AS [e1]
        INNER JOIN [Restaurants] AS [r] ON [e1].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
    ) AS [t1] ON [e0].[EventId] = [t1].[EventsEventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t2] ON [t].[GroupId] = [t2].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t2].[LunchGroupsGroupId], [t2].[UsersUserId] 
2023-06-20 15:14:35.2667|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml. 
2023-06-20 15:14:35.2825|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml executed in 14.474ms. 
2023-06-20 15:14:35.2825|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder) in 188.2579ms 
2023-06-20 15:14:35.2825|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 15:14:35.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 204.9095ms 
2023-06-20 15:14:35.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - 
2023-06-20 15:14:35.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:14:35.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - 
2023-06-20 15:14:35.2854|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4765ms 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /js/site.js was not modified 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/ViewLunchGroupDetailsLGU.css was not modified 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/js/site.js?v=BMqP4__V9Xba8ijPLlwZH-4VGzxLzdJcjhvfuwQHyf8 - - - 304 - application/javascript 7.4955ms 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/ViewLunchGroupDetailsLGU.css?v=532QZmj5Ht3CYjcX5tqadU2sJWGsYOpD_oRZxnaWCSg - - - 304 - text/css 7.8237ms 
2023-06-20 15:14:35.3014|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.1852ms 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 6.6793ms 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 15:14:38.7869|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 11.7083ms 
2023-06-20 15:14:38.8007|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:14:38.8007|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:38.8007|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:14:38.8007|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 20.0854ms. 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 20.4728ms 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 22.4135ms 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:14:38.8224|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2570ms 
2023-06-20 15:14:38.8335|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3485ms 
2023-06-20 15:14:45.8973|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 
2023-06-20 15:14:45.8973|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:45.8973|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:14:50.2013|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:14:50.3438|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:14:50.3438|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 15:14:50.3438|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:14:50.3438|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 4444.2628ms 
2023-06-20 15:14:50.3438|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:14:50.3438|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 - 302 0 - 4449.0124ms 
2023-06-20 15:14:50.3508|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:14:50.3508|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:14:50.3508|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:14:50.3508|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:14:50.3508|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:14:50.3726|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:14:50.3814|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:14:50.3814|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:14:50.3814|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 9.6569ms. 
2023-06-20 15:14:50.3814|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 38.9136ms 
2023-06-20 15:14:50.3814|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:14:50.3814|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 41.6819ms 
2023-06-20 15:14:50.4036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=F2KrEDiClOWB4ilhngcxQStMPXrsXhQivzE1yTjnAAc - - 
2023-06-20 15:14:50.4036|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/AdminHome.css was not modified 
2023-06-20 15:14:50.4036|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/AdminHome.css?v=F2KrEDiClOWB4ilhngcxQStMPXrsXhQivzE1yTjnAAc - - - 304 - text/css 0.4470ms 
2023-06-20 15:14:50.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:14:50.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.7782ms 
2023-06-20 15:14:50.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:14:50.4131|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.4300ms 
2023-06-20 15:14:55.0231|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:14:55.0231|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:14:55.0231|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:14:55.0231|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:14:55.0393|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:14:55.0393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:14:55.0393|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:14:55.0574|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:14:55.1082|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 51.1963ms. 
2023-06-20 15:14:55.1082|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 80.5707ms 
2023-06-20 15:14:55.1082|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:14:55.1082|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 87.7937ms 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.1720ms 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/LunchGroupDetails.css was not modified 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/LunchGroupDetails.css?v=UPDKe_lCwrXS3WNKWBSjnblAUxWdOlqyWcjYR5-iV1g - - - 304 - text/css 0.5568ms 
2023-06-20 15:14:55.1179|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:14:55.1296|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.8068ms 
2023-06-20 15:15:51.4986|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 15:15:51.5072|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:15:51.5072|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:15:51.5274|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:15:51.7011|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (14ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:15:51.7245|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:15:51.7493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2024%2000%3A00%3A00&EventTime=19%3A30%3A00&VotingCloseDate=01%2F25%2F2024%2000%3A00%3A00&VotingCloseTime=22%3A50%3A00. 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 239.8532ms 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 302 0 - 255.3689ms 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2024%2000%3A00%3A00&EventTime=19%3A30%3A00&VotingCloseDate=01%2F25%2F2024%2000%3A00%3A00&VotingCloseTime=22%3A50%3A00 - - 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:15:51.7537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2024%2000%3A00%3A00&EventTime=19%3A30%3A00&VotingCloseDate=01%2F25%2F2024%2000%3A00%3A00&VotingCloseTime=22%3A50%3A00 - - - 405 0 - 0.9482ms 
2023-06-20 15:18:11.0413|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:18:12.8736|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:18:12.9123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:18:12.9123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:18:12.9123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:18:12.9367|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:18:12.9540|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:18:13.1171|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:18:13.1171|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:18:13.1171|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:18:13.1171|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:18:13.1171|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:18:13.8857|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:18:13.9833|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:18:13.9958|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:18:14.0177|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:18:14.0219|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 22.3785ms 
2023-06-20 15:18:14.0219|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:18:14.0403|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:18:14.0403|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 157.9747ms 
2023-06-20 15:18:14.0403|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:18:14.0403|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:18:14.3084|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:18:14.6172|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:18:14.6341|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:18:14.6959|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:18:14.6959|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:18:14.8328|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 134.7965ms. 
2023-06-20 15:18:14.8328|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 787.9787ms 
2023-06-20 15:18:14.8328|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:18:14.8686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 828.2815ms 
2023-06-20 15:18:14.8686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:18:14.8686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.6188ms 
2023-06-20 15:18:14.8686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:18:14.8903|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.8031ms 
2023-06-20 15:18:16.1095|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:18:16.1140|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:18:16.1140|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:18:16.2023|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:18:16.2551|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:18:16.2551|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:18:16.2744|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:18:16.2744|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:18:16.2867|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:18:16.3459|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 59.542ms. 
2023-06-20 15:18:16.3459|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 220.5655ms 
2023-06-20 15:18:16.3459|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:18:16.3484|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 238.9118ms 
2023-06-20 15:18:16.3484|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:18:16.3484|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3520ms 
2023-06-20 15:18:16.3632|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:18:16.3632|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.6037ms 
2023-06-20 15:19:12.2734|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 15:19:12.2734|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:19:12.2867|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:19:12.3115|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:19:12.4689|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:19:12.4907|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:19:12.5044|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2026%2000%3A00%3A00&EventTime=07%3A30%3A00&VotingCloseDate=01%2F25%2F2026%2000%3A00%3A00&VotingCloseTime=17%3A30%3A00. 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 69472.6663ms 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 302 0 - 69486.3511ms 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2026%2000%3A00%3A00&EventTime=07%3A30%3A00&VotingCloseDate=01%2F25%2F2026%2000%3A00%3A00&VotingCloseTime=17%3A30%3A00 - - 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:20:21.7592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?Group=Lunch_Tinder.Models.LunchGroup&Event=Lunch_Tinder.Models.Event&SelectedVenues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&EventDate=01%2F25%2F2026%2000%3A00%3A00&EventTime=07%3A30%3A00&VotingCloseDate=01%2F25%2F2026%2000%3A00%3A00&VotingCloseTime=17%3A30%3A00 - - - 405 0 - 1.1499ms 
2023-06-20 15:32:04.1673|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:32:07.1239|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:32:07.1625|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:32:07.1625|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:32:07.1625|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:32:07.1892|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:32:07.2065|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:32:07.3727|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:32:07.3727|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:32:07.3727|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:32:07.3727|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:32:07.3727|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:32:07.8942|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:32:07.9942|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:32:08.0061|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:32:08.0303|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:32:08.0303|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 24.6713ms 
2023-06-20 15:32:08.0303|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:32:08.0578|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:32:08.0578|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 165.8484ms 
2023-06-20 15:32:08.0578|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:32:08.0578|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:32:08.3144|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:32:08.6291|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:32:08.6464|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:32:08.7088|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:32:08.7088|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:32:08.8473|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 136.0651ms. 
2023-06-20 15:32:08.8473|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 785.0383ms 
2023-06-20 15:32:08.8473|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:32:08.8826|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 824.7809ms 
2023-06-20 15:32:08.8826|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:32:08.8826|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.9299ms 
2023-06-20 15:32:08.8944|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:32:08.9108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.3568ms 
2023-06-20 15:32:10.3063|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:32:10.3063|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:32:10.3212|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:32:10.3978|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:32:10.4539|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:32:10.4639|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:32:10.4639|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:32:10.4761|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:32:10.4761|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 53.7398ms. 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 217.6991ms 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 236.4786ms 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:32:10.5388|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3554ms 
2023-06-20 15:32:10.5548|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:32:10.5548|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.5205ms 
2023-06-20 15:32:48.9002|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 458 
2023-06-20 15:32:48.9002|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:32:48.9101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:32:48.9330|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:32:49.0889|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:32:49.1101|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:33:23.2308|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup. 
2023-06-20 15:33:23.2308|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 34320.9401ms 
2023-06-20 15:33:23.2308|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:33:23.2308|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 458 - 302 0 - 34331.7483ms 
2023-06-20 15:33:23.2404|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - 
2023-06-20 15:33:23.2404|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:33:23.2404|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:33:23.2404|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - - 405 0 - 0.8367ms 
2023-06-20 15:36:49.5093|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:36:51.3714|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:36:51.4113|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:36:51.4113|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:36:51.4113|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:36:51.4362|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:36:51.4544|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:36:51.6155|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:36:51.6155|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:36:51.6155|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:36:51.6155|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:36:51.6155|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:36:52.0824|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:36:52.1772|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:36:52.1772|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:36:52.2122|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:36:52.2122|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 23.021ms 
2023-06-20 15:36:52.2122|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:36:52.2354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:36:52.2354|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 155.5960ms 
2023-06-20 15:36:52.2441|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:36:52.2441|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:36:52.4921|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:36:52.8125|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:36:52.8307|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:36:52.8948|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:36:52.8948|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:36:53.0324|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 132.6653ms. 
2023-06-20 15:36:53.0375|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 792.4577ms 
2023-06-20 15:36:53.0375|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:36:53.0689|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 833.5352ms 
2023-06-20 15:36:53.0689|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:36:53.0689|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.6239ms 
2023-06-20 15:36:53.0689|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:36:53.0974|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.4344ms 
2023-06-20 15:36:58.0146|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:36:58.0193|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:36:58.0193|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:36:58.1130|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:36:58.1669|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:36:58.1771|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:36:58.1771|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:36:58.1771|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:36:58.1976|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:36:58.2553|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 58.0502ms. 
2023-06-20 15:36:58.2553|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 225.0979ms 
2023-06-20 15:36:58.2553|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:36:58.2553|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 246.6423ms 
2023-06-20 15:36:58.2717|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:36:58.2717|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:36:58.2717|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4482ms 
2023-06-20 15:36:58.2717|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.0235ms 
2023-06-20 15:37:37.6836|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 15:37:37.6836|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:37:37.6930|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:37:37.7183|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:37:37.8737|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:37:37.8947|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:37:37.8947|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup. 
2023-06-20 15:37:37.8947|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 215.5013ms 
2023-06-20 15:37:37.8947|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:37:37.8947|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 302 0 - 225.1758ms 
2023-06-20 15:37:37.9127|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - 
2023-06-20 15:37:37.9127|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:37:37.9127|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:37:37.9127|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - - 405 0 - 3.6847ms 
2023-06-20 15:43:43.8458|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:43:45.6925|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:43:45.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:43:45.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:43:45.7321|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:43:45.7574|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:43:45.7755|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:43:45.9360|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:43:45.9360|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:43:45.9360|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:43:45.9360|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:43:45.9360|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:43:46.4707|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:43:46.5701|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:43:46.5701|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:43:46.6026|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:43:46.6026|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 21.8217ms 
2023-06-20 15:43:46.6026|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:43:46.6301|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:43:46.6301|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 161.9690ms 
2023-06-20 15:43:46.6301|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:43:46.6301|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:43:46.8844|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:43:47.2057|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:43:47.2248|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:43:47.2867|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:43:47.2867|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:43:47.4246|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 135.7539ms. 
2023-06-20 15:43:47.4246|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 788.3381ms 
2023-06-20 15:43:47.4246|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:43:47.4604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:43:47.4604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 832.3147ms 
2023-06-20 15:43:47.4604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 3.8144ms 
2023-06-20 15:43:47.4604|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:43:47.4834|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.0612ms 
2023-06-20 15:43:51.4052|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:43:51.4101|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:43:51.4101|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:43:51.4969|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:43:51.5504|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:43:51.5504|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:43:51.5680|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:43:51.5680|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:43:51.5822|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:43:51.6344|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 52.5453ms. 
2023-06-20 15:43:51.6344|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 214.715ms 
2023-06-20 15:43:51.6344|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:43:51.6344|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 231.8899ms 
2023-06-20 15:43:51.6444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:43:51.6444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3105ms 
2023-06-20 15:43:51.6444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:43:51.6444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.6927ms 
2023-06-20 15:44:33.4460|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 15:44:33.4460|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:44:33.4587|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:44:33.4826|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:44:33.6491|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:44:33.6702|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Event/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup. 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 225.3769ms 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 302 0 - 238.3789ms 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Event/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint '405 HTTP Method Not Supported' 
2023-06-20 15:44:33.6841|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Event/NotifyLunchGroupUsers?venues=Locke%20Burger%20Castletroy,La%20Cucina%20Limerick,Delish%20Cafe&newEvent=Lunch_Tinder.Models.Event&lunchgroup=Lunch_Tinder.Models.LunchGroup - - - 405 0 - 1.6104ms 
2023-06-20 15:48:18.0143|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 15:48:19.9334|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:48:19.9742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:48:19.9742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 15:48:19.9742|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 15:48:19.9991|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 15:48:20.0176|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 15:48:20.1775|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 15:48:20.1775|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 15:48:20.1775|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 15:48:20.1775|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 15:48:20.1775|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 15:48:20.6639|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 15:48:20.7619|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:48:20.7730|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:48:20.7954|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 15:48:20.7954|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 22.8241ms 
2023-06-20 15:48:20.7954|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 15:48:20.8194|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 15:48:20.8194|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 157.9667ms 
2023-06-20 15:48:20.8194|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:48:20.8194|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:48:21.0773|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 15:48:21.3935|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:48:21.4140|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 15:48:21.4736|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 15:48:21.4736|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 15:48:21.6155|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 139.7537ms. 
2023-06-20 15:48:21.6155|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 789.4073ms 
2023-06-20 15:48:21.6155|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 15:48:21.6513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 831.8282ms 
2023-06-20 15:48:21.6513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:48:21.6513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:48:21.6513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.5221ms 
2023-06-20 15:48:21.6724|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 15.4724ms 
2023-06-20 15:48:26.0454|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:48:26.0454|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:48:26.0602|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:48:26.1375|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:48:26.1926|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:48:26.1926|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:48:26.2105|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:48:26.2105|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:48:26.2227|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:48:26.2784|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 56.1878ms. 
2023-06-20 15:48:26.2784|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 218.226ms 
2023-06-20 15:48:26.2784|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:48:26.2784|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 235.8928ms 
2023-06-20 15:48:26.2889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:48:26.2889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2731ms 
2023-06-20 15:48:26.2889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:48:26.2889|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.7919ms 
2023-06-20 15:49:18.2593|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 15:49:18.2593|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:49:18.2693|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 15:49:18.2945|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:49:18.4505|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 15:49:18.4721|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 15:49:39.1918|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 15:49:46.2196|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-20 15:49:46.2196|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 27950.582ms 
2023-06-20 15:49:46.2196|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 15:49:46.2196|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 302 0 - 27960.8367ms 
2023-06-20 15:49:46.2362|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 15:49:46.2362|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:49:46.2499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 15:49:46.2583|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:49:46.2583|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 15:49:46.2583|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 15:49:46.2583|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 15:49:46.2583|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.4499ms. 
2023-06-20 15:49:46.2583|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 17.2513ms 
2023-06-20 15:49:46.2583|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 15:49:46.2715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 35.3051ms 
2023-06-20 15:49:46.2715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:49:46.2715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:49:46.2715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3819ms 
2023-06-20 15:49:46.2715|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3999ms 
2023-06-20 15:51:40.5032|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - 
2023-06-20 15:51:40.5032|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-20 15:51:40.5032|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "AcceptLunchGroupInvite", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AcceptLunchGroupInvite(System.String, System.String) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 15:51:40.5195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 15:51:40.5195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l]
WHERE [l].[GroupName] = @__p_0 
2023-06-20 15:51:40.5195|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 4000), @__p_1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i]
WHERE [i].[UsernameEmail] = @__p_0 AND [i].[LunchGroupName] = @__p_1 
2023-06-20 15:51:40.5377|WARN|Microsoft.EntityFrameworkCore.Query|The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results. 
2023-06-20 15:51:40.5377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 15:51:40.5377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [InvitesLG] SET [LunchGroupName] = @p0, [Status] = @p1, [UsernameEmail] = @p2
OUTPUT 1
WHERE [InviteID] = @p3; 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/ViewLunchGroup?groupName=Software%20Development. 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder) in 40.5611ms 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.AcceptLunchGroupInvite (Lunch Tinder)' 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/AcceptLunchGroupInvite?email=useremail%40gmail.com&lunchgroup=Software%20Development - - - 302 0 - 50.0405ms 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 15:51:40.5529|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ViewLunchGroup", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ViewLunchGroup(System.String) on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 15:51:40.5705|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 15:51:40.5907|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 15:51:40.6010|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t0].[RestaurantDescription], [t0].[RestaurantName], [t2].[LunchGroupsGroupId], [t2].[UsersUserId], [t2].[UserId], [t2].[EmailAddress], [t2].[Password], [t2].[UserName], [t2].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime], [t1].[EventsEventId] AS [EventsEventId0], [t1].[RestaurantOptionsRestaurantID], [t1].[RestaurantID], [t1].[RestaurantDescription], [t1].[RestaurantName]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
    LEFT JOIN (
        SELECT [e1].[EventsEventId], [e1].[RestaurantOptionsRestaurantID], [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
        FROM [EventRestaurant] AS [e1]
        INNER JOIN [Restaurants] AS [r] ON [e1].[RestaurantOptionsRestaurantID] = [r].[RestaurantID]
    ) AS [t1] ON [e0].[EventId] = [t1].[EventsEventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t2] ON [t].[GroupId] = [t2].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[EventsEventId0], [t0].[RestaurantOptionsRestaurantID], [t0].[RestaurantID], [t2].[LunchGroupsGroupId], [t2].[UsersUserId] 
2023-06-20 15:51:40.6010|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml. 
2023-06-20 15:51:40.6161|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/ViewLunchGroupDetailsLGU.cshtml executed in 14.3016ms. 
2023-06-20 15:51:40.6161|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder) in 54.9763ms 
2023-06-20 15:51:40.6161|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.ViewLunchGroup (Lunch Tinder)' 
2023-06-20 15:51:40.6161|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/ViewLunchGroup?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 68.6056ms 
2023-06-20 15:51:40.6302|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 15:51:40.6302|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3044ms 
2023-06-20 15:51:40.6302|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 15:51:40.6432|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.9790ms 
2023-06-20 16:01:11.6600|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:01:14.8002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:01:14.8407|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (21ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:01:14.8407|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:01:14.8407|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:01:14.8665|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:01:14.8854|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:01:15.0483|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:01:15.0483|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:01:15.0483|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:01:15.0483|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:01:15.0483|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:01:15.3783|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:01:15.4733|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:15.4847|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:01:15.5091|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /LGU/Index. 
2023-06-20 16:01:15.5129|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 24.7904ms 
2023-06-20 16:01:15.5129|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:15.5348|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/Index - - 
2023-06-20 16:01:15.5348|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 159.8397ms 
2023-06-20 16:01:15.5630|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 16:01:15.5630|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "LGU"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 16:01:15.8253|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:01:16.2160|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[@__userid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__userid_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:01:16.2703|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/LunchGroupUser/LGUHomePage.cshtml. 
2023-06-20 16:01:16.4028|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/LunchGroupUser/LGUHomePage.cshtml executed in 136.7481ms. 
2023-06-20 16:01:16.4028|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder) in 843.0427ms 
2023-06-20 16:01:16.4028|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.Index (Lunch Tinder)' 
2023-06-20 16:01:16.4412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:01:16.4412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/Index - - - 200 - text/html;+charset=utf-8 908.7526ms 
2023-06-20 16:01:16.4412|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.3573ms 
2023-06-20 16:01:16.4537|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:01:16.4679|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.1708ms 
2023-06-20 16:01:20.1329|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/LGU/LogOut - - 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "LogOut", controller = "LGU"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogOut() on controller Lunch_Tinder.Controllers.LGUController (Lunch Tinder). 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed out. 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /. 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder) in 6.4392ms 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.LGUController.LogOut (Lunch Tinder)' 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/LGU/LogOut - - - 302 0 - 13.4349ms 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:01:20.1373|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 16:01:20.1752|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 25.3351ms. 
2023-06-20 16:01:20.1752|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 25.9753ms 
2023-06-20 16:01:20.1752|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:20.1752|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 27.6281ms 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3263ms 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5327ms 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|The file /css/login.css was not modified 
2023-06-20 16:01:20.1839|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 304 - text/css 8.0924ms 
2023-06-20 16:01:27.2527|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 
2023-06-20 16:01:27.2527|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:27.2642|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:01:27.3247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 16:01:27.4627|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 201.0377ms 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 - 302 0 - 212.9009ms 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:01:27.4651|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:01:27.4651|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:01:27.4853|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:01:27.4962|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:01:27.4962|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:01:27.4962|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:01:27.5199|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 10.0629ms. 
2023-06-20 16:01:27.5199|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 50.0175ms 
2023-06-20 16:01:27.5199|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:01:27.5199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 53.6363ms 
2023-06-20 16:01:27.5289|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:01:27.5289|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:01:27.5289|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3691ms 
2023-06-20 16:01:27.5289|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3178ms 
2023-06-20 16:01:29.3385|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:01:29.3411|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:01:29.3411|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:01:29.3581|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:01:29.3581|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:01:29.3767|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:01:29.3767|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:01:29.3887|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:01:29.3887|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:01:29.4461|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 48.825ms. 
2023-06-20 16:01:29.4461|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 103.0012ms 
2023-06-20 16:01:29.4461|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:01:29.4488|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 110.2785ms 
2023-06-20 16:01:29.4488|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:01:29.4488|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2066ms 
2023-06-20 16:01:29.4488|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:01:29.4488|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.3308ms 
2023-06-20 16:02:07.2178|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 
2023-06-20 16:02:07.2178|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:02:07.2178|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:02:07.2394|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:02:07.4143|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6;
MERGE [Restaurants] USING (
VALUES (@p7, @p8, 0),
(@p9, @p10, 1),
(@p11, @p12, 2),
(@p13, @p14, 3)) AS i ([RestaurantDescription], [RestaurantName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([RestaurantDescription], [RestaurantName])
VALUES (i.[RestaurantDescription], i.[RestaurantName])
OUTPUT INSERTED.[RestaurantID], i._Position; 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.5122|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.5300|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.5910|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.6208|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.4805|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'RestaurantDescription', table 'LunchTinderDB.dbo.Restaurants'; column does not allow nulls. UPDATE fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.Read()
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSet(Int32 startCommandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
ClientConnectionId:cadb435f-4d3b-4cd8-b750-31e5aaf593eb
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[{"RestaurantID":0, "RestaurantName":"La Cucina Limerick", "Events":[]},{"RestaurantID":0, "RestaurantName":"Delish Cafe", "Events":[]},{"RestaurantID":0, "RestaurantName":"McLaughlins Restaurant", "Events":[]}], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]},{"RestaurantID":0, "RestaurantName":"La Cucina Limerick", "Events":[]},{"RestaurantID":0, "RestaurantName":"Delish Cafe", "Events":[]},{"RestaurantID":0, "RestaurantName":"McLaughlins Restaurant", "Events":[]}], "Votes":[]}]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary Originally 13\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: EventRestaurant (Dictionary<string, object>).RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Restaurant.Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: Vote.RestaurantVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade", "ShortView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Restaurant", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: EventRestaurant (Dictionary<string, object>).RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Restaurant.Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: Vote.RestaurantVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade", "ShortView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Restaurant", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":["Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant"], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":["Lunch_Tinder.Models.User"], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary Originally 13\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Navigations":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "References":[], "Collections":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":["Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant"], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":["Lunch_Tinder.Models.User"], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Navigations":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy"}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-20 16:02:07.7313|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 504.1575ms 
2023-06-20 16:02:07.7313|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.7313|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [v].[VoteId], [v].[EventVoteID], [v].[RestaurantVoteID], [v].[UserVoteID]
FROM [Votes] AS [v] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i] 
2023-06-20 16:02:07.7485|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteID], [i].[LunchGroupName], [i].[Status], [i].[UsernameEmail]
FROM [InvitesLG] AS [i] 
2023-06-20 16:02:07.7313|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[{"RestaurantID":0, "RestaurantName":"La Cucina Limerick", "Events":[]},{"RestaurantID":0, "RestaurantName":"Delish Cafe", "Events":[]},{"RestaurantID":0, "RestaurantName":"McLaughlins Restaurant", "Events":[]}], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]},{"RestaurantID":0, "RestaurantName":"La Cucina Limerick", "Events":[]},{"RestaurantID":0, "RestaurantName":"Delish Cafe", "Events":[]},{"RestaurantID":0, "RestaurantName":"McLaughlins Restaurant", "Events":[]}], "Votes":[]}]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]}], "Events":[{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]}], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: EventRestaurant (Dictionary<string, object>).RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Restaurant.Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: Vote.RestaurantVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade", "ShortView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Restaurant", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: EventRestaurant (Dictionary<string, object>).RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Restaurant.Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: Vote.RestaurantVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade", "ShortView":"Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Restaurant", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"RestaurantID PK", "ShortView":"RestaurantID PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":["Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant"], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":["Lunch_Tinder.Models.User"], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Navigations":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "References":[], "Collections":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "IsKeySet":false, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":["Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant","Lunch_Tinder.Models.Restaurant"], "Votes":[]}]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":["Lunch_Tinder.Models.User"], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 3 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 4 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 5 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 6 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 7 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 8 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 9 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 10 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 11 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 12 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482647 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482646 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482645 PK FK Temporary\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added\r\n  EventsEventId: -2147482647 PK FK Temporary Originally 13\r\n  RestaurantOptionsRestaurantID: -2147482644 PK FK Temporary\r\nEvent {EventId: -2147482647} Added\r\n  EventId: -2147482647 PK Temporary\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2025 20:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 18:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: [{RestaurantID: -2147482647}, {RestaurantID: -2147482646}, {RestaurantID: -2147482645}, {RestaurantID: -2147482644}]\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 3}, {EventId: 4}, {EventId: 5}, {EventId: 6}, {EventId: 7}, {EventId: 8}, {EventId: 9}, {EventId: 10}, {EventId: 11}, {EventId: 12}, {EventId: -2147482647}]\r\n  Users: [{UserId: 1}]\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482646} Added\r\n  RestaurantID: -2147482646 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482645} Added\r\n  RestaurantID: -2147482645 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: -2147482644} Added\r\n  RestaurantID: -2147482644 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: [{EventId: -2147482647}]\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: [{GroupId: 1}]\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged\r\n  LunchGroupsGroupId: 1 PK FK\r\n  UsersUserId: 1 PK FK\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: -2147482647, LunchGroupsGroupId: 1} Added FK {EventsEventId: -2147482647} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 3, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 3} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 4, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 4} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 5, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 5} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 6, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 6} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 7, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 7} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 8, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 8} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 9, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 9} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 10, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 10} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 11, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 11} FK {LunchGroupsGroupId: 1}\r\nEventLunchGroup (Dictionary<string, object>) {EventsEventId: 12, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 12} FK {LunchGroupsGroupId: 1}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482647} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482647}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482646} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482646}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482645} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482645}\r\nEventRestaurant (Dictionary<string, object>) {EventsEventId: -2147482647, RestaurantOptionsRestaurantID: -2147482644} Added FK {EventsEventId: -2147482647} FK {RestaurantOptionsRestaurantID: -2147482644}\r\nEvent {EventId: -2147482647} Added\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: -2147482647} Added\r\nRestaurant {RestaurantID: -2147482646} Added\r\nRestaurant {RestaurantID: -2147482645} Added\r\nRestaurant {RestaurantID: -2147482644} Added\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\nLunchGroupUser (Dictionary<string, object>) {LunchGroupsGroupId: 1, UsersUserId: 1} Unchanged FK {LunchGroupsGroupId: 1} FK {UsersUserId: 1}\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"690e195e-fb1b-41d0-ab1f-345647fbb791", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Restaurant", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    RestaurantDescription (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    RestaurantName (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Restaurants\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Restaurant\r\n  Properties: \r\n    RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    RestaurantDescription (string) Required\r\n    RestaurantName (string) Required\r\n  Skip navigations: \r\n    Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n  Keys: \r\n    RestaurantID PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Navigations":[{"CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Event", "TargetEntityType":"EntityType: Restaurant", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"RestaurantOptions", "IsReadOnly":false}, "DebugView":{"LongView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions", "ShortView":"Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions"}, "Name":"Events", "IsReadOnly":false}, "CurrentValue":[{"EventId":0, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2025-01-25T18:00:00Z", "EndTime":"2025-01-25T20:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}], "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":true, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "OriginalValue":-2147482647, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Restaurant", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Restaurant.RestaurantID PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"RestaurantID", "IsReadOnly":false}, "CurrentValue":-2147482647, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantDescription (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantDescription (string) Required"}, "Name":"RestaurantDescription", "IsReadOnly":false}, "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "OriginalValue":"Locke Burger Castletroy", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"RestaurantName (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"RestaurantName (string) Required"}, "Name":"RestaurantName", "IsReadOnly":false}, "CurrentValue":"Locke Burger Castletroy", "EntityEntry":{"Entity":{"RestaurantID":0, "RestaurantName":"Locke Burger Castletroy", "Events":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"690e195e-fb1b-41d0-ab1f-345647fbb791:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":false, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Restaurant"}, "DebugView":{"LongView":"Restaurant {RestaurantID: -2147482647} Added\r\n  RestaurantID: -2147482647 PK Temporary\r\n  RestaurantDescription: <null>\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: [{EventId: -2147482647}]", "ShortView":"Restaurant {RestaurantID: -2147482647} Added"}}}], "IsKeySet":false}}], "IsKeySet":false}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Lunch_Tinder.Controllers.EventController.CreateEvent(VMLunchEventForGroupModel model) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\EventController.cs:line 58\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 16:02:07.8044|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 - 500 - text/html;+charset=utf-8 586.6611ms 
2023-06-20 16:02:07.8090|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:02:07.8090|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:02:07.8090|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3086ms 
2023-06-20 16:02:07.8090|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.5577ms 
2023-06-20 16:03:10.1377|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:03:12.0522|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (29ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:03:12.0942|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (22ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:03:12.0942|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:03:12.0942|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:03:12.1214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:03:12.1396|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:03:12.3000|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:03:12.3000|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:03:12.3000|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:03:12.3000|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:03:12.3000|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:03:12.8815|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:03:12.9753|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:03:12.9870|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:03:13.0090|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:03:13.0127|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 22.3585ms 
2023-06-20 16:03:13.0127|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:03:13.0317|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:03:13.0317|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 153.1768ms 
2023-06-20 16:03:13.0317|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:03:13.0410|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:03:13.2803|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:03:13.5948|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:03:13.6123|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:03:13.6709|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:03:13.6709|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:03:13.8115|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 138.6083ms. 
2023-06-20 16:03:13.8115|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 774.2355ms 
2023-06-20 16:03:13.8115|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:03:13.8472|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 815.4728ms 
2023-06-20 16:03:13.8472|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:03:13.8472|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 4.4982ms 
2023-06-20 16:03:13.8541|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:03:13.8685|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 14.3486ms 
2023-06-20 16:03:16.1228|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:03:16.1228|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:03:16.1378|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:03:16.2171|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:03:16.2703|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:03:16.2812|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:03:16.2812|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:03:16.2941|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:03:16.2941|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:03:16.3592|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 57.0775ms. 
2023-06-20 16:03:16.3592|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 221.3331ms 
2023-06-20 16:03:16.3592|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:03:16.3592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 239.1048ms 
2023-06-20 16:03:16.3690|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:03:16.3690|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3437ms 
2023-06-20 16:03:16.3690|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:03:16.3690|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.1380ms 
2023-06-20 16:04:00.0264|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 
2023-06-20 16:04:00.0264|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:04:00.0264|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:04:00.0640|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:04:00.2377|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6;
MERGE [Restaurants] USING (
VALUES (@p7, @p8, 0),
(@p9, @p10, 1),
(@p11, @p12, 2),
(@p13, @p14, 3)) AS i ([RestaurantDescription], [RestaurantName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([RestaurantDescription], [RestaurantName])
VALUES (i.[RestaurantDescription], i.[RestaurantName])
OUTPUT INSERTED.[RestaurantID], i._Position; 
2023-06-20 16:04:00.2628|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (5ms) [Parameters=[@p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32), @p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p15, @p16);
INSERT INTO [EventRestaurant] ([EventsEventId], [RestaurantOptionsRestaurantID])
VALUES (@p17, @p18),
(@p19, @p20),
(@p21, @p22),
(@p23, @p24); 
2023-06-20 16:04:00.3021|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 2433.4776ms 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 - 302 0 - 2445.5872ms 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:04:02.4714|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:04:02.4777|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:04:02.4777|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:04:02.4777|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:04:02.4777|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:04:02.4777|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 6.7085ms. 
2023-06-20 16:04:02.4777|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 9.0517ms 
2023-06-20 16:04:02.4777|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:04:02.4777|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 14.2581ms 
2023-06-20 16:04:02.4945|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:04:02.4945|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2619ms 
2023-06-20 16:04:02.4945|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:04:02.4945|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.7730ms 
2023-06-20 16:29:58.8004|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:30:00.9237|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:30:00.9703|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:30:00.9739|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:30:00.9739|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:30:01.0000|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:30:01.0199|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:30:01.1987|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:30:01.1987|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:30:01.1987|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:30:01.1987|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:30:01.1987|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:30:02.0137|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:30:02.1349|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 16:30:02.1349|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:30:02.1550|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:30:02.1724|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Login. 
2023-06-20 16:30:02.3466|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Login executed in 179.8859ms. 
2023-06-20 16:30:02.3523|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 196.949ms 
2023-06-20 16:30:02.3523|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:30:02.3943|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:30:02.3943|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:30:02.3943|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - 
2023-06-20 16:30:02.4040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 200 - text/html;+charset=utf-8 393.7357ms 
2023-06-20 16:30:02.4040|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 11.1272ms 
2023-06-20 16:30:02.4190|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/login.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\login.css' 
2023-06-20 16:30:02.4190|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.8780ms 
2023-06-20 16:30:02.4190|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/login.css?v=TAtPYGzs3koDlRBFISayeBqbg0sFA6B1noT9LxjkWIs - - - 200 1882 text/css 24.9148ms 
2023-06-20 16:30:10.4917|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 
2023-06-20 16:30:10.4917|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|Cookies was not authenticated. Failure message: Ticket expired 
2023-06-20 16:30:10.4917|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:30:10.5113|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Lunch_Tinder.ViewModels.VMLogin) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:30:11.0141|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 16:30:11.2061|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
FROM [Users] AS [u]
WHERE [u].[EmailAddress] = @__email_0 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler|AuthenticationScheme: Cookies signed in. 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 701.5775ms 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:30:11.2123|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ application/x-www-form-urlencoded 248 - 302 0 - 728.2596ms 
2023-06-20 16:30:11.2648|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:30:11.4106|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:30:11.4233|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:30:11.4788|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:30:11.4788|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:30:11.5110|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 30.9893ms. 
2023-06-20 16:30:11.5110|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 291.2833ms 
2023-06-20 16:30:11.5110|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:30:11.5110|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 297.7980ms 
2023-06-20 16:30:11.5283|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:30:11.5283|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2428ms 
2023-06-20 16:30:11.5283|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:30:11.5363|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.5584ms 
2023-06-20 16:30:15.1335|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:30:15.1335|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:30:15.1335|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:30:15.1640|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:30:15.1640|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:30:15.1866|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:30:15.1954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:30:15.1954|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:30:15.2095|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:30:15.2664|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 57.2848ms. 
2023-06-20 16:30:15.2664|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 127.2217ms 
2023-06-20 16:30:15.2664|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:30:15.2664|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 136.0205ms 
2023-06-20 16:30:15.2765|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:30:15.2765|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2556ms 
2023-06-20 16:30:15.2765|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:30:15.2927|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.4448ms 
2023-06-20 16:31:04.5002|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 16:31:04.5068|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:31:04.5068|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:31:04.5347|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__model_Group_GroupName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l]
WHERE [l].[GroupName] = @__model_Group_GroupName_0 
2023-06-20 16:31:04.7241|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:31:04.7490|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:31:04.7744|ERROR|Microsoft.EntityFrameworkCore.Database.Command|Failed executing DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime2), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([EventId], [Description], [EndTime], [Name], [StartTime])
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [LunchGroups] SET [Description] = @p5, [GroupName] = @p6
OUTPUT 1
WHERE [GroupId] = @p7; 
2023-06-20 16:31:04.8079|ERROR|Microsoft.EntityFrameworkCore.Update|An exception occurred in the database while saving changes for context type 'Lunch_Tinder.Data.LunchTinderContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert explicit value for identity column in table 'Events' when IDENTITY_INSERT is set to OFF.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:f06f8006-1447-40f5-beac-b3e094f69449
Error Number:544,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess) {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Vote.EventVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventLunchGroup (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventLunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"], "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventRestaurant (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Vote.EventVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventLunchGroup (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventLunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"], "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventRestaurant (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"Staff Lunch", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"Staff Lunch", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T19:30:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T19:30:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "Navigations":[{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"Staff Lunch", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"Staff Lunch", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T19:30:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T19:30:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "References":[], "Collections":[{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "IsKeySet":true, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z"}], "IsKeySet":true}}], "IsKeySet":true}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)"}
2023-06-20 16:31:05.1313|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 613.9863ms 
2023-06-20 16:31:05.1313|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:31:05.1313|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"Microsoft.EntityFrameworkCore.DbUpdateException", "Entries":[{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Vote.EventVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventLunchGroup (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventLunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"], "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventRestaurant (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":["Property: Vote.EventVoteID (int) Required FK Index"], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Vote", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade", "ShortView":"Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventLunchGroup (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventLunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"], "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false},{"Properties":["Property: EventRestaurant (Dictionary<string, object>).EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw"], "DeclaringEntityType":{"Name":"EventRestaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrincipalEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ReferencingSkipNavigations":["SkipNavigation: Event.RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"], "DebugView":{"LongView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade", "ShortView":"EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade"}, "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":[{"Properties":[], "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "ReferencingForeignKeys":[{"Properties":[], "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false},{"Properties":[], "DeclaringEntityType":"EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>", "PrincipalEntityType":"EntityType: Event", "ReferencingSkipNavigations":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}], "DebugView":{"LongView":"EventId PK", "ShortView":"EventId PK"}, "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.Int32", "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.Int32,System.Int32,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"Type":"System.Boolean", "NodeType":"Equal", "CanReduce":false, "Right":"v2", "Left":"v1", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.Int32,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.Int32", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"Staff Lunch", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"Staff Lunch", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T19:30:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T19:30:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "Navigations":[{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "Properties":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "OriginalValue":"Staff Lunch", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false}, "CurrentValue":"Staff Lunch", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T19:30:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T19:30:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "References":[], "Collections":[{"CurrentValue":[], "IsModified":false, "IsLoaded":false, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "Metadata":{"ForeignKey":{"Properties":[], "PrincipalKey":"Key: Event.EventId PK", "DeclaringEntityType":"EntityType: Vote", "PrincipalEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "DebugView":{"LongView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event", "ShortView":"Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event"}, "Name":"Votes", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.LunchGroup", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: LunchGroup", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events", "ShortView":"LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events"}, "Name":"LunchGroups", "IsReadOnly":false}, "CurrentValue":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"CurrentValue":[], "IsModified":true, "IsLoaded":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TargetEntityType":{"Name":"Lunch_Tinder.Models.Restaurant", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Inverse":{"DeclaringEntityType":"EntityType: Restaurant", "TargetEntityType":"EntityType: Event", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "Name":"Events", "IsReadOnly":false}, "DebugView":{"LongView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events", "ShortView":"RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events"}, "Name":"RestaurantOptions", "IsReadOnly":false}, "CurrentValue":[], "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "IsKeySet":true, "CurrentValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}}, "OriginalValues":{"Properties":[{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Name (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Name (string) Required"}, "Name":"Name", "IsReadOnly":false},{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"StartTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"StartTime (DateTime) Required"}, "Name":"StartTime", "IsReadOnly":false}], "EntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "KeyComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}, "ProviderValueComparer":{"Type":"System.String", "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}, "EqualsExpression":{"Type":"System.Func`3[System.String,System.String,System.Boolean]", "NodeType":"Lambda", "Parameters":["v1","v2"], "Body":{"NodeType":"Equal", "Type":"System.Boolean", "CanReduce":false, "Right":"v2", "Left":"v1", "Method":"Boolean op_Equality(System.String, System.String)", "IsLifted":false, "IsLiftedToNull":false}, "ReturnType":"System.Boolean", "TailCall":false, "CanReduce":false}, "HashCodeExpression":{"Type":"System.Func`2[System.String,System.Int32]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"ArgumentCount":0, "NodeType":"Call", "Type":"System.Int32", "Method":"Int32 GetHashCode()", "Object":"Convert(v, Object)", "Arguments":[], "CanReduce":false}, "ReturnType":"System.Int32", "TailCall":false, "CanReduce":false}, "SnapshotExpression":{"Type":"System.Func`2[System.String,System.String]", "NodeType":"Lambda", "Parameters":["v"], "Body":{"Type":"System.String", "NodeType":"Parameter", "Name":"v", "IsByRef":false, "CanReduce":false}, "ReturnType":"System.String", "TailCall":false, "CanReduce":false}}}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":[]}], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[{"UserId":1, "EmailAddress":"useremail@gmail.com", "UserName":"eddiewalsh98", "Password":"$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i", "UserType":"USER", "LunchGroups":[]},{"UserId":2, "EmailAddress":"adminemail@gmail.com", "UserName":"Test", "Password":"$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC", "UserType":"ADMIN", "LunchGroups":[]}], "LunchGroups":[{"GroupId":1, "GroupName":"Software Development", "Description":"We codessss", "Users":[], "Events":["Lunch_Tinder.Models.Event","Lunch_Tinder.Models.Event"]},{"GroupId":3, "GroupName":"HRLunchGroup", "Description":"Everyone in HR", "Users":[], "Events":[]}], "Events":[{"EventId":1, "Name":"Locke Burger", "Description":"Great Burgers", "StartTime":"2023-06-15T16:17:05.8048491Z", "EndTime":"2023-06-15T16:22:05.8048496Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":3, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":4, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":5, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2024-01-25T19:30:00Z", "EndTime":"2024-01-25T22:50:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":6, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":7, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":8, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2026-01-25T07:30:00Z", "EndTime":"2026-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":9, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick", "StartTime":"2025-01-25T07:30:00Z", "EndTime":"2025-01-25T17:15:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":10, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2027-01-25T07:30:00Z", "EndTime":"2027-01-25T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":11, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2025-01-27T07:30:00Z", "EndTime":"2025-01-27T17:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":12, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2028-09-30T14:00:00Z", "EndTime":"2028-09-30T21:00:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":14, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe, McLaughlins Restaurant", "StartTime":"2027-01-30T17:00:00Z", "EndTime":"2027-01-30T22:30:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]},{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":["Lunch_Tinder.Models.LunchGroup"], "RestaurantOptions":[], "Votes":[]}], "Restaurants":[{"RestaurantID":1, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"We don’t do burgers, we do Locke burgers.", "Events":[]},{"RestaurantID":2, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Italian pizza and European dishes", "Events":[]},{"RestaurantID":3, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Sandwhiches, Salads,Breakfast Foods", "Events":[]},{"RestaurantID":4, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Hotel, Traditional Food", "Events":[]},{"RestaurantID":6, "RestaurantName":"Locke Burger Castletroy", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":7, "RestaurantName":"La Cucina Limerick", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":8, "RestaurantName":"Delish Cafe", "RestaurantDescription":"Great Food", "Events":[]},{"RestaurantID":9, "RestaurantName":"McLaughlins Restaurant", "RestaurantDescription":"Great Food", "Events":[]}], "Votes":[], "Invites":[{"InviteId":1, "UserName":"NoUserName", "EmailAddress":"j@gmail.com", "Status":"Pending"}], "InvitesLG":[{"InviteID":1, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":2, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":3, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":4, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":5, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":6, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":7, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":8, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":9, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":10, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":11, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":12, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":13, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":14, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":15, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":16, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":17, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":18, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":19, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":20, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":21, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":22, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":23, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":24, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":26, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":27, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":28, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":29, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":30, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":31, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":32, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":33, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":34, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":35, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":36, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":37, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":38, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":39, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":40, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":41, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":42, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":43, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":44, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":45, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":46, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":47, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":48, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":49, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":50, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":51, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":52, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":53, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":54, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":55, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":56, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":57, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":58, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":59, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":60, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":61, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":62, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":63, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":64, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Accepted"},{"InviteID":65, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":66, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":67, "LunchGroupName":"Software Development", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"},{"InviteID":68, "LunchGroupName":"HRLunchGroup", "UsernameEmail":"useremail@gmail.com", "Status":"Pending"}], "Database":{"AutoTransactionsEnabled":true, "AutoTransactionBehavior":"WhenNeeded", "AutoSavepointsEnabled":true, "ProviderName":"Microsoft.EntityFrameworkCore.SqlServer"}, "ChangeTracker":{"AutoDetectChangesEnabled":true, "LazyLoadingEnabled":true, "QueryTrackingBehavior":"TrackAll", "DeleteOrphansTiming":"Immediate", "CascadeDeleteTiming":"Immediate", "DebugView":{"LongView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged\r\n  EventsEventId: 15 PK FK\r\n  LunchGroupsGroupId: 1 PK FK\r\nEvent {EventId: 1} Unchanged\r\n  EventId: 1 PK\r\n  Description: 'Great Burgers'\r\n  EndTime: '15/06/2023 16:22:05'\r\n  Name: 'Locke Burger'\r\n  StartTime: '15/06/2023 16:17:05'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 3} Unchanged\r\n  EventId: 3 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 4} Unchanged\r\n  EventId: 4 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 5} Unchanged\r\n  EventId: 5 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2024 22:50:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2024 19:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 6} Unchanged\r\n  EventId: 6 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 7} Unchanged\r\n  EventId: 7 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 8} Unchanged\r\n  EventId: 8 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2026 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2026 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 9} Unchanged\r\n  EventId: 9 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick'\r\n  EndTime: '25/01/2025 17:15:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 10} Unchanged\r\n  EventId: 10 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '25/01/2027 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '25/01/2027 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 11} Unchanged\r\n  EventId: 11 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '27/01/2025 17:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '27/01/2025 07:30:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 12} Unchanged\r\n  EventId: 12 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/09/2028 21:00:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/09/2028 14:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 14} Unchanged\r\n  EventId: 14 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/01/2027 22:30:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/01/2027 17:00:00'\r\n  Votes: []\r\n  LunchGroups: []\r\n  RestaurantOptions: []\r\nEvent {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []\r\nInvites {InviteId: 1} Unchanged\r\n  InviteId: 1 PK\r\n  EmailAddress: 'j@gmail.com'\r\n  Status: 'Pending'\r\n  UserName: 'NoUserName'\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\n  InviteID: 1 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\n  InviteID: 2 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\n  InviteID: 3 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\n  InviteID: 4 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\n  InviteID: 5 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\n  InviteID: 6 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\n  InviteID: 7 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\n  InviteID: 8 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\n  InviteID: 9 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\n  InviteID: 10 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\n  InviteID: 11 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\n  InviteID: 12 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\n  InviteID: 13 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\n  InviteID: 14 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\n  InviteID: 15 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\n  InviteID: 16 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\n  InviteID: 17 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\n  InviteID: 18 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\n  InviteID: 19 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\n  InviteID: 20 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\n  InviteID: 21 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\n  InviteID: 22 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\n  InviteID: 23 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\n  InviteID: 24 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\n  InviteID: 26 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\n  InviteID: 27 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\n  InviteID: 28 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\n  InviteID: 29 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\n  InviteID: 30 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\n  InviteID: 31 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\n  InviteID: 32 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\n  InviteID: 33 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\n  InviteID: 34 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\n  InviteID: 35 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\n  InviteID: 36 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\n  InviteID: 37 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\n  InviteID: 38 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\n  InviteID: 39 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\n  InviteID: 40 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\n  InviteID: 41 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\n  InviteID: 42 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\n  InviteID: 43 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\n  InviteID: 44 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\n  InviteID: 45 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\n  InviteID: 46 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\n  InviteID: 47 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\n  InviteID: 48 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\n  InviteID: 49 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\n  InviteID: 50 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\n  InviteID: 51 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\n  InviteID: 52 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\n  InviteID: 53 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\n  InviteID: 54 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\n  InviteID: 55 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\n  InviteID: 56 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\n  InviteID: 57 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\n  InviteID: 58 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\n  InviteID: 59 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\n  InviteID: 60 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\n  InviteID: 61 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\n  InviteID: 62 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\n  InviteID: 63 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\n  InviteID: 64 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Accepted'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\n  InviteID: 65 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\n  InviteID: 66 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\n  InviteID: 67 PK\r\n  LunchGroupName: 'Software Development'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\n  InviteID: 68 PK\r\n  LunchGroupName: 'HRLunchGroup'\r\n  Status: 'Pending'\r\n  UsernameEmail: 'useremail@gmail.com'\r\nLunchGroup {GroupId: 1} Modified\r\n  GroupId: 1 PK\r\n  Description: 'We codessss' Modified\r\n  GroupName: 'Software Development' Modified\r\n  Events: [{EventId: 15}, {EventId: 15}]\r\n  Users: []\r\nLunchGroup {GroupId: 3} Unchanged\r\n  GroupId: 3 PK\r\n  Description: 'Everyone in HR'\r\n  GroupName: 'HRLunchGroup'\r\n  Events: []\r\n  Users: []\r\nRestaurant {RestaurantID: 1} Unchanged\r\n  RestaurantID: 1 PK\r\n  RestaurantDescription: 'We don’t do burgers, we do Locke burgers.'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 2} Unchanged\r\n  RestaurantID: 2 PK\r\n  RestaurantDescription: 'Italian pizza and European dishes'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 3} Unchanged\r\n  RestaurantID: 3 PK\r\n  RestaurantDescription: 'Sandwhiches, Salads,Breakfast Foods'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 4} Unchanged\r\n  RestaurantID: 4 PK\r\n  RestaurantDescription: 'Hotel, Traditional Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nRestaurant {RestaurantID: 6} Unchanged\r\n  RestaurantID: 6 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Locke Burger Castletroy'\r\n  Events: []\r\nRestaurant {RestaurantID: 7} Unchanged\r\n  RestaurantID: 7 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'La Cucina Limerick'\r\n  Events: []\r\nRestaurant {RestaurantID: 8} Unchanged\r\n  RestaurantID: 8 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'Delish Cafe'\r\n  Events: []\r\nRestaurant {RestaurantID: 9} Unchanged\r\n  RestaurantID: 9 PK\r\n  RestaurantDescription: 'Great Food'\r\n  RestaurantName: 'McLaughlins Restaurant'\r\n  Events: []\r\nUser {UserId: 1} Unchanged\r\n  UserId: 1 PK\r\n  EmailAddress: 'useremail@gmail.com'\r\n  Password: '$2a$11$XIzCtfPh3yXs.9vBTaaR3u1ScXSb./JiN5W5hRoEYKzeX3dK8zv0i'\r\n  UserName: 'eddiewalsh98'\r\n  UserType: 'USER'\r\n  Vote: <null>\r\n  LunchGroups: []\r\nUser {UserId: 2} Unchanged\r\n  UserId: 2 PK\r\n  EmailAddress: 'adminemail@gmail.com'\r\n  Password: '$2a$11$kaEvJe64ff4Jl.WonGDkAe3xWZBqrmRyG/DNGKDBPKf01iLtd4VlC'\r\n  UserName: 'Test'\r\n  UserType: 'ADMIN'\r\n  Vote: <null>\r\n  LunchGroups: []\r\n", "ShortView":"EventLunchGroup (Dictionary<string, object>) {EventsEventId: 15, LunchGroupsGroupId: 1} Unchanged FK {EventsEventId: 15} FK {LunchGroupsGroupId: 1}\r\nEvent {EventId: 1} Unchanged\r\nEvent {EventId: 3} Unchanged\r\nEvent {EventId: 4} Unchanged\r\nEvent {EventId: 5} Unchanged\r\nEvent {EventId: 6} Unchanged\r\nEvent {EventId: 7} Unchanged\r\nEvent {EventId: 8} Unchanged\r\nEvent {EventId: 9} Unchanged\r\nEvent {EventId: 10} Unchanged\r\nEvent {EventId: 11} Unchanged\r\nEvent {EventId: 12} Unchanged\r\nEvent {EventId: 14} Unchanged\r\nEvent {EventId: 15} Added\r\nInvites {InviteId: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 1} Unchanged\r\nInviteToLunchGroup {InviteID: 2} Unchanged\r\nInviteToLunchGroup {InviteID: 3} Unchanged\r\nInviteToLunchGroup {InviteID: 4} Unchanged\r\nInviteToLunchGroup {InviteID: 5} Unchanged\r\nInviteToLunchGroup {InviteID: 6} Unchanged\r\nInviteToLunchGroup {InviteID: 7} Unchanged\r\nInviteToLunchGroup {InviteID: 8} Unchanged\r\nInviteToLunchGroup {InviteID: 9} Unchanged\r\nInviteToLunchGroup {InviteID: 10} Unchanged\r\nInviteToLunchGroup {InviteID: 11} Unchanged\r\nInviteToLunchGroup {InviteID: 12} Unchanged\r\nInviteToLunchGroup {InviteID: 13} Unchanged\r\nInviteToLunchGroup {InviteID: 14} Unchanged\r\nInviteToLunchGroup {InviteID: 15} Unchanged\r\nInviteToLunchGroup {InviteID: 16} Unchanged\r\nInviteToLunchGroup {InviteID: 17} Unchanged\r\nInviteToLunchGroup {InviteID: 18} Unchanged\r\nInviteToLunchGroup {InviteID: 19} Unchanged\r\nInviteToLunchGroup {InviteID: 20} Unchanged\r\nInviteToLunchGroup {InviteID: 21} Unchanged\r\nInviteToLunchGroup {InviteID: 22} Unchanged\r\nInviteToLunchGroup {InviteID: 23} Unchanged\r\nInviteToLunchGroup {InviteID: 24} Unchanged\r\nInviteToLunchGroup {InviteID: 26} Unchanged\r\nInviteToLunchGroup {InviteID: 27} Unchanged\r\nInviteToLunchGroup {InviteID: 28} Unchanged\r\nInviteToLunchGroup {InviteID: 29} Unchanged\r\nInviteToLunchGroup {InviteID: 30} Unchanged\r\nInviteToLunchGroup {InviteID: 31} Unchanged\r\nInviteToLunchGroup {InviteID: 32} Unchanged\r\nInviteToLunchGroup {InviteID: 33} Unchanged\r\nInviteToLunchGroup {InviteID: 34} Unchanged\r\nInviteToLunchGroup {InviteID: 35} Unchanged\r\nInviteToLunchGroup {InviteID: 36} Unchanged\r\nInviteToLunchGroup {InviteID: 37} Unchanged\r\nInviteToLunchGroup {InviteID: 38} Unchanged\r\nInviteToLunchGroup {InviteID: 39} Unchanged\r\nInviteToLunchGroup {InviteID: 40} Unchanged\r\nInviteToLunchGroup {InviteID: 41} Unchanged\r\nInviteToLunchGroup {InviteID: 42} Unchanged\r\nInviteToLunchGroup {InviteID: 43} Unchanged\r\nInviteToLunchGroup {InviteID: 44} Unchanged\r\nInviteToLunchGroup {InviteID: 45} Unchanged\r\nInviteToLunchGroup {InviteID: 46} Unchanged\r\nInviteToLunchGroup {InviteID: 47} Unchanged\r\nInviteToLunchGroup {InviteID: 48} Unchanged\r\nInviteToLunchGroup {InviteID: 49} Unchanged\r\nInviteToLunchGroup {InviteID: 50} Unchanged\r\nInviteToLunchGroup {InviteID: 51} Unchanged\r\nInviteToLunchGroup {InviteID: 52} Unchanged\r\nInviteToLunchGroup {InviteID: 53} Unchanged\r\nInviteToLunchGroup {InviteID: 54} Unchanged\r\nInviteToLunchGroup {InviteID: 55} Unchanged\r\nInviteToLunchGroup {InviteID: 56} Unchanged\r\nInviteToLunchGroup {InviteID: 57} Unchanged\r\nInviteToLunchGroup {InviteID: 58} Unchanged\r\nInviteToLunchGroup {InviteID: 59} Unchanged\r\nInviteToLunchGroup {InviteID: 60} Unchanged\r\nInviteToLunchGroup {InviteID: 61} Unchanged\r\nInviteToLunchGroup {InviteID: 62} Unchanged\r\nInviteToLunchGroup {InviteID: 63} Unchanged\r\nInviteToLunchGroup {InviteID: 64} Unchanged\r\nInviteToLunchGroup {InviteID: 65} Unchanged\r\nInviteToLunchGroup {InviteID: 66} Unchanged\r\nInviteToLunchGroup {InviteID: 67} Unchanged\r\nInviteToLunchGroup {InviteID: 68} Unchanged\r\nLunchGroup {GroupId: 1} Modified\r\nLunchGroup {GroupId: 3} Unchanged\r\nRestaurant {RestaurantID: 1} Unchanged\r\nRestaurant {RestaurantID: 2} Unchanged\r\nRestaurant {RestaurantID: 3} Unchanged\r\nRestaurant {RestaurantID: 4} Unchanged\r\nRestaurant {RestaurantID: 6} Unchanged\r\nRestaurant {RestaurantID: 7} Unchanged\r\nRestaurant {RestaurantID: 8} Unchanged\r\nRestaurant {RestaurantID: 9} Unchanged\r\nUser {UserId: 1} Unchanged\r\nUser {UserId: 2} Unchanged\r\n"}}, "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ContextId":{"InstanceId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf", "Lease":0}}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":{"DebugView":{"LongView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventLunchGroup\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: EventRestaurant\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroupUser\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      EndTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Name (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      StartTime (DateTime) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Events\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      LunchGroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UsernameEmail (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: InvitesLG\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Status (string)\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Keys: \r\n      InviteId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Invites\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      Description (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      GroupName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: LunchGroups\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      RestaurantDescription (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Restaurants\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EmailAddress (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      Password (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserName (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserType (string) Required\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Users\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: IdentityColumn\r\n      EventVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      RestaurantVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n      UserVoteID (int) Required FK Index\r\n        Annotations: \r\n          SqlServer:ValueGenerationStrategy: None\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique\r\n    Annotations: \r\n      DiscriminatorProperty: \r\n      Relational:FunctionName: \r\n      Relational:Schema: \r\n      Relational:SqlQuery: \r\n      Relational:TableName: Votes\r\n      Relational:ViewName: \r\n      Relational:ViewSchema: \r\nAnnotations: \r\n  ProductVersion: 7.0.5\r\n  Relational:MaxIdentifierLength: 128\r\n  SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"Model: \r\n  EntityType: EventLunchGroup (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, LunchGroupsGroupId PK\r\n    Foreign keys: \r\n      EventLunchGroup (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventLunchGroup (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n    Indexes: \r\n      LunchGroupsGroupId\r\n  EntityType: EventRestaurant (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      EventsEventId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      RestaurantOptionsRestaurantID (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      EventsEventId, RestaurantOptionsRestaurantID PK\r\n    Foreign keys: \r\n      EventRestaurant (Dictionary<string, object>) {'EventsEventId'} -> Event {'EventId'} Cascade\r\n      EventRestaurant (Dictionary<string, object>) {'RestaurantOptionsRestaurantID'} -> Restaurant {'RestaurantID'} Cascade\r\n    Indexes: \r\n      RestaurantOptionsRestaurantID\r\n  EntityType: LunchGroupUser (Dictionary<string, object>) CLR Type: Dictionary<string, object>\r\n    Properties: \r\n      LunchGroupsGroupId (no field, int) Indexer Required PK FK AfterSave:Throw\r\n      UsersUserId (no field, int) Indexer Required PK FK Index AfterSave:Throw\r\n    Keys: \r\n      LunchGroupsGroupId, UsersUserId PK\r\n    Foreign keys: \r\n      LunchGroupUser (Dictionary<string, object>) {'LunchGroupsGroupId'} -> LunchGroup {'GroupId'} Cascade\r\n      LunchGroupUser (Dictionary<string, object>) {'UsersUserId'} -> User {'UserId'} Cascade\r\n    Indexes: \r\n      UsersUserId\r\n  EntityType: Event\r\n    Properties: \r\n      EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      EndTime (DateTime) Required\r\n      Name (string) Required\r\n      StartTime (DateTime) Required\r\n    Navigations: \r\n      Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n      RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n    Keys: \r\n      EventId PK\r\n  EntityType: InviteToLunchGroup\r\n    Properties: \r\n      InviteID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      LunchGroupName (string) Required\r\n      Status (string) Required\r\n      UsernameEmail (string) Required\r\n    Keys: \r\n      InviteID PK\r\n  EntityType: Invites\r\n    Properties: \r\n      InviteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Status (string)\r\n      UserName (string) Required\r\n    Keys: \r\n      InviteId PK\r\n  EntityType: LunchGroup\r\n    Properties: \r\n      GroupId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Description (string) Required\r\n      GroupName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: LunchGroups\r\n      Users (ICollection<User>) CollectionUser Inverse: LunchGroups\r\n    Keys: \r\n      GroupId PK\r\n  EntityType: Restaurant\r\n    Properties: \r\n      RestaurantID (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      RestaurantDescription (string) Required\r\n      RestaurantName (string) Required\r\n    Skip navigations: \r\n      Events (ICollection<Event>) CollectionEvent Inverse: RestaurantOptions\r\n    Keys: \r\n      RestaurantID PK\r\n  EntityType: User\r\n    Properties: \r\n      UserId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EmailAddress (string) Required\r\n      Password (string) Required\r\n      UserName (string) Required\r\n      UserType (string) Required\r\n    Navigations: \r\n      Vote (Vote) ToDependent Vote Inverse: User\r\n    Skip navigations: \r\n      LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Users\r\n    Keys: \r\n      UserId PK\r\n  EntityType: Vote\r\n    Properties: \r\n      VoteId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      EventVoteID (int) Required FK Index\r\n      RestaurantVoteID (int) Required FK Index\r\n      UserVoteID (int) Required FK Index\r\n    Navigations: \r\n      Event (Event) ToPrincipal Event Inverse: Votes\r\n      Restaurant (Restaurant) ToPrincipal Restaurant\r\n      User (User) ToPrincipal User Inverse: Vote\r\n    Keys: \r\n      VoteId PK\r\n    Foreign keys: \r\n      Vote {'EventVoteID'} -> Event {'EventId'} ToDependent: Votes ToPrincipal: Event Cascade\r\n      Vote {'RestaurantVoteID'} -> Restaurant {'RestaurantID'} ToPrincipal: Restaurant Cascade\r\n      Vote {'UserVoteID'} -> User {'UserId'} Unique ToDependent: Vote ToPrincipal: User Cascade\r\n    Indexes: \r\n      EventVoteID\r\n      RestaurantVoteID\r\n      UserVoteID Unique"}, "IsReadOnly":false}, "ConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "ServiceOnlyConstructorBinding":{"Constructor":"Void .ctor()", "RuntimeType":"Lunch_Tinder.Models.Event", "ParameterBindings":[]}, "DebugView":{"LongView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: IdentityColumn\r\n    Description (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    EndTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    Name (string) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n    StartTime (DateTime) Required\r\n      Annotations: \r\n        SqlServer:ValueGenerationStrategy: None\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK\r\n  Annotations: \r\n    DiscriminatorProperty: \r\n    Relational:FunctionName: \r\n    Relational:Schema: \r\n    Relational:SqlQuery: \r\n    Relational:TableName: Events\r\n    Relational:ViewName: \r\n    Relational:ViewSchema: ", "ShortView":"EntityType: Event\r\n  Properties: \r\n    EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n    Description (string) Required\r\n    EndTime (DateTime) Required\r\n    Name (string) Required\r\n    StartTime (DateTime) Required\r\n  Navigations: \r\n    Votes (ICollection<Vote>) Collection ToDependent Vote Inverse: Event\r\n  Skip navigations: \r\n    LunchGroups (ICollection<LunchGroup>) CollectionLunchGroup Inverse: Events\r\n    RestaurantOptions (ICollection<Restaurant>) CollectionRestaurant Inverse: Events\r\n  Keys: \r\n    EventId PK"}, "IsReadOnly":false}, "Members":[{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "OriginalValue":15, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "PrimaryKey":{"Properties":[], "DeclaringEntityType":"EntityType: Event", "ReferencingForeignKeys":[], "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IdentityMapFactory":"System.Func`2[System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap]", "IsReadOnly":false}, "Keys":["Key: Event.EventId PK"], "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"int", "StoreTypeNameBase":"int", "DbType":"Int32", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.Int32", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.Int32]"}, "DebugView":{"LongView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: IdentityColumn", "ShortView":"EventId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd"}, "Name":"EventId", "IsReadOnly":false}, "CurrentValue":15, "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "OriginalValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"None", "StoreType":"nvarchar(max)", "StoreTypeNameBase":"nvarchar", "DbType":"String", "IsUnicode":true, "IsFixedLength":false, "ClrType":"System.String", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.String]"}, "DebugView":{"LongView":"Description (string) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"Description (string) Required"}, "Name":"Description", "IsReadOnly":false}, "CurrentValue":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}},{"IsModified":false, "IsTemporary":false, "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "OriginalValue":"2023-06-30T20:34:00Z", "Metadata":{"DeclaringEntityType":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "TypeMapping":{"StoreTypePostfix":"Precision", "StoreType":"datetime2", "StoreTypeNameBase":"datetime2", "DbType":"DateTime2", "IsUnicode":false, "IsFixedLength":false, "ClrType":"System.DateTime", "Comparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "KeyComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]", "ProviderValueComparer":"Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer+DefaultValueComparer`1[System.DateTime]"}, "DebugView":{"LongView":"EndTime (DateTime) Required\r\n  Annotations: \r\n    SqlServer:ValueGenerationStrategy: None", "ShortView":"EndTime (DateTime) Required"}, "Name":"EndTime", "IsReadOnly":false}, "CurrentValue":"2023-06-30T20:34:00Z", "EntityEntry":{"Entity":{"EventId":15, "Name":"Staff Lunch", "Description":"Event at Locke Burger Castletroy, La Cucina Limerick, Delish Cafe", "StartTime":"2023-06-30T19:30:00Z", "EndTime":"2023-06-30T20:34:00Z", "LunchGroups":[], "RestaurantOptions":[], "Votes":[]}, "State":"Added", "Context":{"Users":[], "LunchGroups":[], "Events":[], "Restaurants":[], "Votes":[], "Invites":[], "InvitesLG":[], "Database":"Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade", "ChangeTracker":"Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ContextId":"e3867f23-835f-423a-b1bc-63ef9bce7eaf:0"}, "Metadata":{"Name":"Lunch_Tinder.Models.Event", "Model":"Microsoft.EntityFrameworkCore.Metadata.RuntimeModel", "ConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "ServiceOnlyConstructorBinding":"Microsoft.EntityFrameworkCore.Metadata.ConstructorBinding", "DebugView":"Microsoft.EntityFrameworkCore.Infrastructure.DebugView", "IsReadOnly":false}, "Members":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Navigations":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "Properties":["Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry","Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry"], "References":[], "Collections":["Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry","Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry"], "IsKeySet":true, "CurrentValues":{"Properties":[], "EntityType":"EntityType: Event"}, "OriginalValues":{"Properties":[], "EntityType":"EntityType: Event"}, "DebugView":{"LongView":"Event {EventId: 15} Added\r\n  EventId: 15 PK\r\n  Description: 'Event at Locke Burger Castletroy, La Cucina Limerick, Delish...'\r\n  EndTime: '30/06/2023 20:34:00'\r\n  Name: 'Staff Lunch'\r\n  StartTime: '30/06/2023 19:30:00'\r\n  Votes: []\r\n  LunchGroups: [{GroupId: 1}]\r\n  RestaurantOptions: []", "ShortView":"Event {EventId: 15} Added"}}}], "IsKeySet":true}}], "IsKeySet":true}], "Message":"An error occurred while saving the entity changes. See the inner exception for details.", "Source":"Microsoft.EntityFrameworkCore.Relational", "HResult":-2146233088, "StackTrace":"   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.Execute(IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)\r\n   at Lunch_Tinder.Controllers.EventController.CreateEvent(VMLunchEventForGroupModel model) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\EventController.cs:line 43\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 16:31:05.2084|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 - 500 - text/html;+charset=utf-8 708.1617ms 
2023-06-20 16:31:05.2084|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:31:05.2084|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:31:05.2084|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2948ms 
2023-06-20 16:31:05.2303|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.8205ms 
2023-06-20 16:32:20.6378|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:32:23.1156|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:32:23.1670|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:32:23.1670|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:32:23.1670|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:32:23.2001|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:32:23.2236|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:32:23.4270|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:32:23.4270|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:32:23.4270|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:32:23.4270|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:32:23.4270|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:32:24.0592|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:32:24.2088|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:32:24.2257|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:32:24.2612|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:32:24.2612|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 36.6221ms 
2023-06-20 16:32:24.2612|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:32:24.2925|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:32:24.2925|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 238.4030ms 
2023-06-20 16:32:24.3165|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:32:24.3180|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:32:24.6671|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:32:25.1063|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:32:25.1286|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:32:25.2114|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:32:25.2114|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:32:25.3986|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 184.3293ms. 
2023-06-20 16:32:25.3986|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1085.5669ms 
2023-06-20 16:32:25.3986|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:32:25.4405|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:32:25.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1151.6626ms 
2023-06-20 16:32:25.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.0958ms 
2023-06-20 16:32:25.4442|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:32:25.4797|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.5778ms 
2023-06-20 16:32:26.8747|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:32:26.8747|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:32:26.8898|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:32:26.9780|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:32:27.0375|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (43ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:32:27.0375|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:32:27.0596|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:32:27.0596|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:32:27.0749|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:32:27.1429|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 68.434ms. 
2023-06-20 16:32:27.1429|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 253.0643ms 
2023-06-20 16:32:27.1429|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:32:27.1466|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 271.8851ms 
2023-06-20 16:32:27.1466|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:32:27.1466|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3169ms 
2023-06-20 16:32:27.1631|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:32:27.1631|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.3816ms 
2023-06-20 16:33:21.9302|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 486 
2023-06-20 16:33:21.9302|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:33:21.9446|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:33:21.9731|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__model_Group_GroupName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l]
WHERE [l].[GroupName] = @__model_Group_GroupName_0 
2023-06-20 16:33:22.1505|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:33:22.1752|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 248.6709ms 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 486 - 302 0 - 263.4160ms 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:33:22.1932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:33:22.1932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:33:22.1932|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:33:22.1932|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:33:22.2125|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 9.9075ms. 
2023-06-20 16:33:22.2125|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 15.2561ms 
2023-06-20 16:33:22.2125|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:33:22.2125|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 21.3729ms 
2023-06-20 16:33:22.2235|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:33:22.2235|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:33:22.2235|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4435ms 
2023-06-20 16:33:22.2235|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.7811ms 
2023-06-20 16:35:05.4945|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:35:08.1502|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (41ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:35:08.2092|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:35:08.2092|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:35:08.2092|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:35:08.2452|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:35:08.2716|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:35:08.5065|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:35:08.5065|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:35:08.5065|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:35:08.5065|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:35:08.5065|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:35:09.0669|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:35:09.2437|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:35:09.2632|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:35:09.3020|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:35:09.3020|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 39.3507ms 
2023-06-20 16:35:09.3020|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:35:09.3402|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:35:09.3402|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 279.9037ms 
2023-06-20 16:35:09.3539|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:35:09.3539|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:35:09.7488|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:35:10.1755|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:35:10.1894|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:35:10.3153|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:35:10.3247|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:35:10.5284|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 209.5563ms. 
2023-06-20 16:35:10.5284|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1179.0665ms 
2023-06-20 16:35:10.5284|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:35:10.5780|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:35:10.5780|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1238.5861ms 
2023-06-20 16:35:10.5857|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.7156ms 
2023-06-20 16:35:10.5857|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:35:10.6308|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.8351ms 
2023-06-20 16:35:13.2689|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:35:13.2743|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:35:13.2916|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:35:13.4109|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:35:13.4904|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (51ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:35:13.5096|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:35:13.5096|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:35:13.5096|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:35:13.5327|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:35:13.6268|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 94.5871ms. 
2023-06-20 16:35:13.6268|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 335.1941ms 
2023-06-20 16:35:13.6268|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:35:13.6319|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 363.0054ms 
2023-06-20 16:35:13.6319|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:35:13.6319|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5429ms 
2023-06-20 16:35:13.6566|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:35:13.6659|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.4264ms 
2023-06-20 16:35:51.9962|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 
2023-06-20 16:35:51.9962|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:35:52.0080|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:35:52.0357|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__model_Group_GroupName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
FROM [LunchGroups] AS [l]
WHERE [l].[GroupName] = @__model_Group_GroupName_0 
2023-06-20 16:35:52.2386|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:35:52.2619|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:36:58.3595|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:37:00.8583|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:37:00.9383|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (45ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:37:00.9420|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:37:00.9420|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:37:00.9786|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:37:01.0099|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:37:01.2564|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:37:01.2564|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:37:01.2564|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:37:01.2564|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:37:01.2564|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:37:02.0385|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:37:02.2086|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:37:02.2312|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:37:02.2661|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:37:02.2725|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.9608ms 
2023-06-20 16:37:02.2725|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:37:02.3000|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:37:02.3020|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 267.6312ms 
2023-06-20 16:37:02.3020|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:37:02.3020|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:37:02.6696|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:37:03.1143|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:37:03.1143|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:37:03.2085|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:37:03.2085|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:37:03.4022|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 190.5514ms. 
2023-06-20 16:37:03.4022|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1093.9875ms 
2023-06-20 16:37:03.4022|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:37:03.4481|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:37:03.4481|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1149.4129ms 
2023-06-20 16:37:03.4481|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.3320ms 
2023-06-20 16:37:03.4607|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:37:03.4833|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.5661ms 
2023-06-20 16:37:04.6888|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:37:04.6935|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:37:04.6935|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:37:04.7942|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:37:04.8523|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (40ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:37:04.8658|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:37:04.8658|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:37:04.8658|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:37:04.8852|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:37:04.9562|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 71.5006ms. 
2023-06-20 16:37:04.9562|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 251.6986ms 
2023-06-20 16:37:04.9562|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:37:04.9609|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 272.1132ms 
2023-06-20 16:37:04.9609|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:37:04.9609|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3879ms 
2023-06-20 16:37:04.9763|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:37:04.9763|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 10.3676ms 
2023-06-20 16:37:49.8872|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 
2023-06-20 16:37:49.8872|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:37:49.9022|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:37:49.9316|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:37:50.1002|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:37:50.1214|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:38:45.9164|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 56014.1627ms 
2023-06-20 16:38:45.9164|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:38:45.9164|ERROR|Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware|An unhandled exception has occurred while executing the request. {"Type":"System.NullReferenceException", "TargetSite":"T GetValue[T](Microsoft.Extensions.Configuration.IConfiguration, System.String, T)", "Message":"Object reference not set to an instance of an object.", "Data":{}, "Source":"Microsoft.Extensions.Configuration.Binder", "HResult":-2147467261, "StackTrace":"   at Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue[T](IConfiguration configuration, String key, T defaultValue)\r\n   at Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue[T](IConfiguration configuration, String key)\r\n   at Lunch_Tinder.Controllers.EventController.CreateEvent(VMLunchEventForGroupModel model) in C:\\Users\\ewalsh\\source\\repos\\Lunch Tinder\\Lunch Tinder\\Lunch Tinder\\Controllers\\EventController.cs:line 52\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)"}
2023-06-20 16:38:46.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 - 500 - text/html;+charset=utf-8 56136.6807ms 
2023-06-20 16:38:46.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:38:46.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:38:46.0238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2815ms 
2023-06-20 16:38:46.0358|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.1129ms 
2023-06-20 16:42:18.1990|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:42:20.7885|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:42:20.8442|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:42:20.8442|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:42:20.8482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:42:20.8786|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:42:20.9035|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:42:21.1203|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:42:21.1203|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:42:21.1203|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:42:21.1203|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:42:21.1203|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:42:21.6231|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:42:21.7948|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:42:21.8117|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:42:21.8481|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:42:21.8481|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 36.6415ms 
2023-06-20 16:42:21.8481|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:42:21.8893|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:42:21.8893|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 271.2128ms 
2023-06-20 16:42:21.9020|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:42:21.9020|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:42:22.2798|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:42:22.7354|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:42:22.7578|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:42:22.8410|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:42:22.8501|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:42:23.0266|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 182.7147ms. 
2023-06-20 16:42:23.0266|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1128.8948ms 
2023-06-20 16:42:23.0266|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:42:23.0716|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1182.3425ms 
2023-06-20 16:42:23.0716|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:42:23.0716|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.0189ms 
2023-06-20 16:42:23.0833|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:42:23.1082|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.8273ms 
2023-06-20 16:42:26.0277|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:42:26.0277|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:42:26.0451|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:42:26.1352|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:42:26.1983|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (46ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:42:26.2103|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:42:26.2103|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:42:26.2238|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:42:26.2238|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:42:26.3069|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 72.2735ms. 
2023-06-20 16:42:26.3069|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 261.7958ms 
2023-06-20 16:42:26.3069|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:42:26.3069|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 282.1261ms 
2023-06-20 16:42:26.3199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:42:26.3199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3131ms 
2023-06-20 16:42:26.3199|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:42:26.3351|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.8656ms 
2023-06-20 16:43:31.0902|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 483 
2023-06-20 16:43:31.0902|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:43:31.1058|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:43:31.1394|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:43:31.3333|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:43:31.3589|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:46:17.5197|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:46:20.3697|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:46:20.4231|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:46:20.4264|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:46:20.4264|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:46:20.4566|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:46:20.4806|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:46:20.7218|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:46:20.7218|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:46:20.7239|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:46:20.7239|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:46:20.7239|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:46:21.6555|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:46:21.8117|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:46:21.8312|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:46:21.8678|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:46:21.8678|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 37.1265ms 
2023-06-20 16:46:21.8678|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:46:21.9035|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:46:21.9035|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 253.2078ms 
2023-06-20 16:46:21.9035|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:46:21.9177|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:46:22.2873|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:46:22.7797|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:46:22.8068|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:46:22.9010|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:46:22.9098|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:46:23.1182|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 214.2185ms. 
2023-06-20 16:46:23.1182|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1205.8897ms 
2023-06-20 16:46:23.1182|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:46:23.1686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:46:23.1686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1267.7364ms 
2023-06-20 16:46:23.1686|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 6.5015ms 
2023-06-20 16:46:23.1835|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:46:23.2090|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.5329ms 
2023-06-20 16:46:24.5139|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:46:24.5139|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:46:24.5306|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:46:24.6245|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:46:24.6889|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (47ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:46:24.7011|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:46:24.7103|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:46:24.7103|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:46:24.7258|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:46:24.7995|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 74.161ms. 
2023-06-20 16:46:24.7995|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 269.033ms 
2023-06-20 16:46:24.7995|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:46:24.8029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 288.9956ms 
2023-06-20 16:46:24.8029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:46:24.8029|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4356ms 
2023-06-20 16:46:24.8215|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:46:24.8215|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 10.3191ms 
2023-06-20 16:46:49.4152|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 472 
2023-06-20 16:46:49.4152|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:46:49.4258|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:46:49.4544|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:46:49.6303|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:46:49.6531|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:48:12.6882|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:48:15.3498|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:48:15.4006|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:48:15.4006|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:48:15.4006|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:48:15.4328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:48:15.4552|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:48:15.6507|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:48:15.6507|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:48:15.6507|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:48:15.6507|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:48:15.6507|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:48:16.2026|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:48:16.3394|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:48:16.3590|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:48:16.3907|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:48:16.3967|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 32.4477ms 
2023-06-20 16:48:16.3967|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:48:16.4233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:48:16.4233|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 224.5906ms 
2023-06-20 16:48:16.4469|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:48:16.4469|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:48:16.7937|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:48:17.2260|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:48:17.2482|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:48:17.3328|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:48:17.3328|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:48:17.5305|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 194.6992ms. 
2023-06-20 16:48:17.5375|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1089.3469ms 
2023-06-20 16:48:17.5375|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:48:17.5817|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1157.9075ms 
2023-06-20 16:48:17.5830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:48:17.5830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.0698ms 
2023-06-20 16:48:17.5830|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:48:17.6189|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.7873ms 
2023-06-20 16:48:21.4853|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:48:21.4923|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:48:21.5074|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:48:21.6009|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:48:21.6654|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (46ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:48:21.6784|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:48:21.6784|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (6ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:48:21.6920|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:48:21.6920|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:48:21.7745|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 72.2298ms. 
2023-06-20 16:48:21.7745|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 267.1425ms 
2023-06-20 16:48:21.7745|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:48:21.7745|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 292.4180ms 
2023-06-20 16:48:21.7871|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:48:21.7871|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4558ms 
2023-06-20 16:48:21.7871|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:48:21.8020|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.2574ms 
2023-06-20 16:48:52.8096|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 
2023-06-20 16:48:52.8096|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:48:52.8206|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(Lunch_Tinder.ViewModels.VMLunchEventForGroupModel) on controller Lunch_Tinder.Controllers.EventController (Lunch Tinder). 
2023-06-20 16:48:52.8486|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:48:53.0259|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p6='?' (DbType = Int32), @p4='?' (Size = 4000), @p5='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Events] ([Description], [EndTime], [Name], [StartTime])
OUTPUT INSERTED.[EventId]
VALUES (@p0, @p1, @p2, @p3);
UPDATE [LunchGroups] SET [Description] = @p4, [GroupName] = @p5
OUTPUT 1
WHERE [GroupId] = @p6; 
2023-06-20 16:48:53.0493|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Int32), @p8='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [EventLunchGroup] ([EventsEventId], [LunchGroupsGroupId])
VALUES (@p7, @p8); 
2023-06-20 16:49:02.5168|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 16:49:18.0856|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=Software%20Development. 
2023-06-20 16:49:18.0856|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder) in 25265.3131ms 
2023-06-20 16:49:18.0856|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.EventController.CreateEvent (Lunch Tinder)' 
2023-06-20 16:49:18.0856|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Event/CreateEvent application/x-www-form-urlencoded 497 - 302 0 - 25276.5992ms 
2023-06-20 16:49:18.1068|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - 
2023-06-20 16:49:18.1068|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:49:18.1257|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:49:18.1385|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:49:18.1385|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:49:18.1385|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:49:18.1385|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:49:18.1513|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 10.6438ms. 
2023-06-20 16:49:18.1513|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 25.5273ms 
2023-06-20 16:49:18.1513|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:49:18.1513|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=Software%20Development - - - 200 - text/html;+charset=utf-8 49.8546ms 
2023-06-20 16:49:18.1662|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:49:18.1662|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2453ms 
2023-06-20 16:49:18.1662|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:49:18.1985|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.1262ms 
2023-06-20 16:55:34.0458|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:55:36.5026|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:55:36.5565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (28ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:55:36.5565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:55:36.5565|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:55:36.5922|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:55:36.6163|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:55:36.8747|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:55:36.8747|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:55:36.8747|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:55:36.8747|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:55:36.8747|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:55:37.4182|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:55:37.5738|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:55:37.5920|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:55:37.6265|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:55:37.6333|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.3118ms 
2023-06-20 16:55:37.6333|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:55:37.6695|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:55:37.6695|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 256.1122ms 
2023-06-20 16:55:37.6924|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:55:37.7079|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:55:38.0711|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:55:38.5334|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:55:38.5455|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:55:38.6247|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:55:38.6355|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:55:38.8191|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 191.3105ms. 
2023-06-20 16:55:38.8191|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1116.0323ms 
2023-06-20 16:55:38.8191|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:55:38.8702|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:55:38.8702|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1201.4510ms 
2023-06-20 16:55:38.8702|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.2671ms 
2023-06-20 16:55:38.8835|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:55:38.9108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.3552ms 
2023-06-20 16:55:44.1183|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 16:55:44.1183|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:44.1326|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 16:55:44.2311|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 16:55:44.2874|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE [i].[InviteId] = 1 
2023-06-20 16:55:44.2874|WARN|Microsoft.EntityFrameworkCore.Query|The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased. 
2023-06-20 16:55:44.2874|WARN|Microsoft.EntityFrameworkCore.Query|The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased. 
2023-06-20 16:55:44.3444|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (41ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[InviteId] = 1
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 16:55:44.3444|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 17.0618ms. 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 231.7783ms 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 248.1864ms 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:55:44.3633|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.7540ms 
2023-06-20 16:55:44.3822|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.1310ms 
2023-06-20 16:55:51.8832|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ManageUsers/SendInvitation application/x-www-form-urlencoded 257 
2023-06-20 16:55:51.8832|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder)' 
2023-06-20 16:55:51.8832|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "SendInvitation", controller = "ManageUsers"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SendInvitation(Lunch_Tinder.Models.MailData) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 16:55:51.9244|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[EmailAddress] = @__email_0 
2023-06-20 16:55:52.0477|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Invites] ([EmailAddress], [Status], [UserName])
OUTPUT INSERTED.[InviteId]
VALUES (@p0, @p1, @p2); 
2023-06-20 16:55:52.1073|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 16:55:54.2511|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /ManageUsers/Index. 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder) in 2367.3315ms 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.SendInvitation (Lunch Tinder)' 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ManageUsers/SendInvitation application/x-www-form-urlencoded 257 - 302 0 - 2377.7491ms 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:54.2607|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 16:55:54.2607|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 16:55:54.2726|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2) 
2023-06-20 16:55:54.2726|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2)
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 16:55:54.2726|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 16:55:54.2726|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 8.6095ms. 
2023-06-20 16:55:54.2726|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 18.0188ms 
2023-06-20 16:55:54.2726|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:54.2726|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 20.0638ms 
2023-06-20 16:55:54.2924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:55:54.2924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:55:54.2924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4733ms 
2023-06-20 16:55:54.2924|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.7732ms 
2023-06-20 16:55:57.5337|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 16:55:57.5349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 16:55:57.5349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2) 
2023-06-20 16:55:57.5349|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2)
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 3.7478ms. 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 6.5193ms 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:55:57.5349|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 9.0152ms 
2023-06-20 16:55:57.5534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:55:57.5534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:55:57.5534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2551ms 
2023-06-20 16:55:57.5534|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.3451ms 
2023-06-20 16:55:59.7031|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/Index - - 
2023-06-20 16:55:59.7031|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 16:55:59.7031|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageGroups"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 16:55:59.7074|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:55:59.7074|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/ManageGroups.cshtml. 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/ManageGroups.cshtml executed in 15.4469ms. 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder) in 18.2681ms 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/Index - - - 200 - text/html;+charset=utf-8 22.2722ms 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:55:59.7236|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2430ms 
2023-06-20 16:55:59.7404|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:55:59.7404|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.7496ms 
2023-06-20 16:56:11.5896|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/ManageGroups/Create application/x-www-form-urlencoded 276 
2023-06-20 16:56:11.5896|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder)' 
2023-06-20 16:56:11.5896|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Create", controller = "ManageGroups"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Create(System.String, System.String) on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 16:56:11.6062|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [LunchGroups] ([Description], [GroupName])
OUTPUT INSERTED.[GroupId]
VALUES (@p0, @p1); 
2023-06-20 16:56:11.6062|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=HRLunchGroupOne. 
2023-06-20 16:56:11.6062|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder) in 16.077ms 
2023-06-20 16:56:11.6062|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Create (Lunch Tinder)' 
2023-06-20 16:56:11.6062|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/ManageGroups/Create application/x-www-form-urlencoded 276 - 302 0 - 18.8721ms 
2023-06-20 16:56:11.6062|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - 
2023-06-20 16:56:11.6132|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:11.6132|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:11.6351|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:56:11.6351|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:56:11.6488|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:56:11.6488|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:56:11.6488|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:56:11.6668|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:56:11.7281|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 61.628ms. 
2023-06-20 16:56:11.7281|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 111.5321ms 
2023-06-20 16:56:11.7281|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:11.7281|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - - 200 - text/html;+charset=utf-8 120.7292ms 
2023-06-20 16:56:11.7400|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:11.7400|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2821ms 
2023-06-20 16:56:11.7400|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:11.7400|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.2771ms 
2023-06-20 16:56:34.4581|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 341 
2023-06-20 16:56:34.4581|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-20 16:56:34.4581|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "InviteToLunchGroup", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] InviteToLunchGroup(Lunch_Tinder.ViewModels.VMInviteLG) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:34.4824|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [InvitesLG] ([LunchGroupName], [Status], [UsernameEmail])
OUTPUT INSERTED.[InviteID]
VALUES (@p0, @p1, @p2); 
2023-06-20 16:56:34.4900|INFO|Lunch_Tinder.Services.MailService|Initiating method. 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/DisplayGroups?groupName=HRLunchGroupOne. 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder) in 2143.0754ms 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.InviteToLunchGroup (Lunch Tinder)' 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/Admin/InviteToLunchGroup application/x-www-form-urlencoded 341 - 302 0 - 2151.0542ms 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:36.6087|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:36.6142|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:56:36.6142|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:56:36.6142|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:56:36.6142|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:56:36.6142|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.1508ms. 
2023-06-20 16:56:36.6142|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 10.4454ms 
2023-06-20 16:56:36.6142|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:36.6142|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - - 200 - text/html;+charset=utf-8 15.5722ms 
2023-06-20 16:56:36.6323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:36.6323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:36.6323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3739ms 
2023-06-20 16:56:36.6323|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.3280ms 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:42.8784|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:56:42.8784|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:56:42.8784|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 3.4489ms. 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 5.8716ms 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:42.8784|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 9.1512ms 
2023-06-20 16:56:42.8999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:42.8999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:42.8999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3396ms 
2023-06-20 16:56:42.8999|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.3291ms 
2023-06-20 16:56:44.3920|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - 
2023-06-20 16:56:44.3920|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:44.3920|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:44.3920|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:56:44.3946|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:56:44.3946|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:56:44.3946|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:56:44.3946|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.9512ms. 
2023-06-20 16:56:44.3946|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 10.0289ms 
2023-06-20 16:56:44.3946|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:44.3946|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroup - - - 200 - text/html;+charset=utf-8 13.9471ms 
2023-06-20 16:56:44.4172|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:44.4172|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5132ms 
2023-06-20 16:56:44.4172|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:44.4301|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.3940ms 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:45.9499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:56:45.9499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:56:45.9499|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 3.3179ms. 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 5.2935ms 
2023-06-20 16:56:45.9499|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:45.9580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 8.1588ms 
2023-06-20 16:56:45.9580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:45.9580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:45.9580|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.8887ms 
2023-06-20 16:56:45.9742|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.2288ms 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "DisplayGroups", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DisplayGroups(System.String) on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:46.9132|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t0].[EmailAddress], [t0].[Password], [t0].[UserName], [t0].[UserType], [t1].[EventsEventId], [t1].[LunchGroupsGroupId], [t1].[EventId], [t1].[Description], [t1].[EndTime], [t1].[Name], [t1].[StartTime]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupName] = @__name_0
) AS [t]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[UserId], [t1].[EventsEventId], [t1].[LunchGroupsGroupId] 
2023-06-20 16:56:46.9132|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__group_GroupId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[GroupId], [t].[Description], [t].[GroupName], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime], [t1].[LunchGroupsGroupId], [t1].[UsersUserId], [t1].[UserId], [t1].[EmailAddress], [t1].[Password], [t1].[UserName], [t1].[UserType]
FROM (
    SELECT TOP(1) [l].[GroupId], [l].[Description], [l].[GroupName]
    FROM [LunchGroups] AS [l]
    WHERE [l].[GroupId] = @__group_GroupId_0
) AS [t]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [t].[GroupId] = [t0].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t1] ON [t].[GroupId] = [t1].[LunchGroupsGroupId]
ORDER BY [t].[GroupId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t1].[LunchGroupsGroupId], [t1].[UsersUserId] 
2023-06-20 16:56:46.9132|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [r].[RestaurantID], [r].[RestaurantDescription], [r].[RestaurantName]
FROM [Restaurants] AS [r] 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/LunchGroupDetails.cshtml. 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/LunchGroupDetails.cshtml executed in 7.8384ms. 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder) in 10.0446ms 
2023-06-20 16:56:46.9132|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.DisplayGroups (Lunch Tinder)' 
2023-06-20 16:56:46.9270|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/DisplayGroups?groupName=HRLunchGroupOne - - - 200 - text/html;+charset=utf-8 13.8406ms 
2023-06-20 16:56:46.9270|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:46.9270|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2494ms 
2023-06-20 16:56:46.9446|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:46.9446|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.7128ms 
2023-06-20 16:56:47.7054|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:56:47.7054|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:47.7054|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:56:47.7079|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:56:47.7079|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:56:47.7079|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:56:47.7079|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:56:47.7079|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 3.4236ms. 
2023-06-20 16:56:47.7079|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 5.8495ms 
2023-06-20 16:56:47.7079|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:56:47.7079|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 9.1968ms 
2023-06-20 16:56:47.7240|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:56:47.7240|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:56:47.7240|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3523ms 
2023-06-20 16:56:47.7240|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.8209ms 
2023-06-20 16:57:27.6822|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:57:27.6822|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:57:27.6822|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:57:27.6822|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:57:27.6822|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:57:27.6822|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:57:27.6913|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:57:27.6913|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 4.0079ms. 
2023-06-20 16:57:27.6913|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 6.4729ms 
2023-06-20 16:57:27.6913|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:57:27.6913|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 24.7192ms 
2023-06-20 16:57:27.7108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:57:27.7108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:57:27.7108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4690ms 
2023-06-20 16:57:27.7108|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.7713ms 
2023-06-20 16:57:31.4403|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 16:57:31.4403|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:57:31.4426|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:57:31.4578|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:57:31.4578|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 16:57:31.4981|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 39.8561ms. 
2023-06-20 16:57:31.4981|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 55.6164ms 
2023-06-20 16:57:31.4981|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:57:31.4981|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 61.4754ms 
2023-06-20 16:57:31.5128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:57:31.5128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4104ms 
2023-06-20 16:57:31.5128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - 
2023-06-20 16:57:31.5128|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:57:31.5201|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5115ms 
2023-06-20 16:57:31.5364|INFO|Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware|Sending file. Request path: '/css/profile.css'. Physical path: 'C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\wwwroot\css\profile.css' 
2023-06-20 16:57:31.5364|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/css/profile.css?v=U2pfb_SmUbW6xfxbDxrC3bPqNkdcZXTtJ7qSJLD41Vo - - - 200 2781 text/css 23.3377ms 
2023-06-20 16:57:36.4449|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/Profile application/x-www-form-urlencoded 507 
2023-06-20 16:57:36.4449|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:57:36.4449|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:57:36.4828|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[@__ToUpper_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE UPPER(LTRIM(RTRIM([u].[UserName]))) = @__ToUpper_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END 
2023-06-20 16:57:36.4828|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:57:36.4929|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 16:57:36.4929|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 16:57:36.4929|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 4.5282ms. 
2023-06-20 16:57:36.4929|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 49.223ms 
2023-06-20 16:57:36.4929|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:57:36.4929|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/Profile application/x-www-form-urlencoded 507 - 200 - text/html;+charset=utf-8 55.9211ms 
2023-06-20 16:57:36.5100|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:57:36.5100|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:57:36.5100|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3770ms 
2023-06-20 16:57:36.5100|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.2307ms 
2023-06-20 16:57:52.6860|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 493 
2023-06-20 16:57:52.6860|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 16:57:52.6860|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ResetPassword", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:57:52.6860|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:57:52.9908|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 16:57:52.9908|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 16:57:52.9908|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 8.1716ms. 
2023-06-20 16:57:52.9908|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder) in 310.8209ms 
2023-06-20 16:57:52.9908|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 16:57:52.9908|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 493 - 200 - text/html;+charset=utf-8 315.2463ms 
2023-06-20 16:57:53.0141|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:57:53.0141|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:57:53.0141|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.3634ms 
2023-06-20 16:57:53.0243|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 10.1212ms 
2023-06-20 16:58:05.9419|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 493 
2023-06-20 16:58:05.9419|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 16:58:05.9419|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "ResetPassword", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult ResetPassword(Lunch_Tinder.ViewModels.VMProfile) on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:58:05.9419|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:58:06.2269|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [EmailAddress] = @p0, [Password] = @p1, [UserName] = @p2, [UserType] = @p3
OUTPUT 1
WHERE [UserId] = @p4; 
2023-06-20 16:58:06.2269|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 16:58:06.2269|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 3.8384ms. 
2023-06-20 16:58:06.2269|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder) in 288.0806ms 
2023-06-20 16:58:06.2269|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.ResetPassword (Lunch Tinder)' 
2023-06-20 16:58:06.2269|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 POST https://localhost:7215/User/ResetPassword application/x-www-form-urlencoded 493 - 200 - text/html;+charset=utf-8 293.1734ms 
2023-06-20 16:58:06.2417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:58:06.2417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:58:06.2417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4447ms 
2023-06-20 16:58:06.2417|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8893ms 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/User/Profile - - 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Profile", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Profile() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:58:14.5238|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[LunchGroupsGroupId], [t0].[UsersUserId], [t0].[GroupId], [t0].[Description], [t0].[GroupName]
FROM (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [u].[UserId] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t0] ON [t].[UserId] = [t0].[UsersUserId]
ORDER BY [t].[UserId], [t0].[LunchGroupsGroupId], [t0].[UsersUserId] 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view Profile. 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view Profile executed in 4.9147ms. 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder) in 6.539ms 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Profile (Lunch Tinder)' 
2023-06-20 16:58:14.5238|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/User/Profile - - - 200 - text/html;+charset=utf-8 9.9496ms 
2023-06-20 16:58:14.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:58:14.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:58:14.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4620ms 
2023-06-20 16:58:14.5444|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.7993ms 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageGroups/Index - - 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageGroups"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.ManageGroupsController (Lunch Tinder). 
2023-06-20 16:58:16.1530|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/ManageGroups.cshtml. 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/ManageGroups.cshtml executed in 3.7494ms. 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder) in 5.1842ms 
2023-06-20 16:58:16.1530|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageGroupsController.Index (Lunch Tinder)' 
2023-06-20 16:58:16.1606|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageGroups/Index - - - 200 - text/html;+charset=utf-8 7.6414ms 
2023-06-20 16:58:16.1606|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:58:16.1606|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.2480ms 
2023-06-20 16:58:16.1809|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:58:16.1941|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.3044ms 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ManageUsers/Index - - 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "ManageUsers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(Int32, Int32) on controller Lunch_Tinder.Controllers.ManageUsersController (Lunch Tinder). 
2023-06-20 16:58:21.3853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType]
FROM [Invites] AS [i]
OUTER APPLY (
    SELECT TOP(1) [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [Users] AS [u]
    WHERE [i].[EmailAddress] = [u].[EmailAddress]
) AS [t] 
2023-06-20 16:58:21.3853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2) 
2023-06-20 16:58:21.3853|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[InviteId], [i].[EmailAddress], [i].[Status], [i].[UserName]
FROM [Invites] AS [i]
WHERE [i].[InviteId] IN (1, 2)
ORDER BY (SELECT 1)
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/User/ManageUsers.cshtml. 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/User/ManageUsers.cshtml executed in 3.3472ms. 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder) in 5.8482ms 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.ManageUsersController.Index (Lunch Tinder)' 
2023-06-20 16:58:21.3853|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ManageUsers/Index - - - 200 - text/html;+charset=utf-8 8.9133ms 
2023-06-20 16:58:21.4085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:58:21.4085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:58:21.4085|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.4233ms 
2023-06-20 16:58:21.4146|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.8661ms 
2023-06-20 16:59:38.7181|INFO|Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager|User profile is available. Using 'C:\Users\ewalsh\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
2023-06-20 16:59:41.3725|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:59:41.4310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:59:41.4310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1 
2023-06-20 16:59:41.4310|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]'); 
2023-06-20 16:59:41.4648|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId]; 
2023-06-20 16:59:41.4892|INFO|Microsoft.EntityFrameworkCore.Migrations|No migrations were applied. The database is already up to date. 
2023-06-20 16:59:41.7252|INFO|Microsoft.Hosting.Lifetime|Now listening on: https://localhost:7215 
2023-06-20 16:59:41.7252|INFO|Microsoft.Hosting.Lifetime|Now listening on: http://localhost:5176 
2023-06-20 16:59:41.7252|INFO|Microsoft.Hosting.Lifetime|Application started. Press Ctrl+C to shut down. 
2023-06-20 16:59:41.7252|INFO|Microsoft.Hosting.Lifetime|Hosting environment: Development 
2023-06-20 16:59:41.7252|INFO|Microsoft.Hosting.Lifetime|Content root path: C:\Users\ewalsh\source\repos\Lunch Tinder\Lunch Tinder\Lunch Tinder\ 
2023-06-20 16:59:42.1683|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/ - - 
2023-06-20 16:59:42.3121|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:59:42.3297|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Login", controller = "User"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Login() on controller Lunch_Tinder.Controllers.UserController (Lunch Tinder). 
2023-06-20 16:59:42.3645|INFO|Microsoft.AspNetCore.Mvc.RedirectToActionResult|Executing RedirectResult, redirecting to /Admin/Index. 
2023-06-20 16:59:42.3645|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder) in 35.6299ms 
2023-06-20 16:59:42.3645|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.UserController.Login (Lunch Tinder)' 
2023-06-20 16:59:42.3994|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:59:42.3994|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/ - - - 302 0 - 234.3323ms 
2023-06-20 16:59:42.4203|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:59:42.4203|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:59:42.7947|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:59:43.2421|WARN|Microsoft.EntityFrameworkCore.Query|Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'. 
2023-06-20 16:59:43.2652|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:59:43.3490|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:59:43.3490|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:59:43.5408|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 188.3111ms. 
2023-06-20 16:59:43.5408|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 1124.6671ms 
2023-06-20 16:59:43.5408|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:59:43.5881|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:59:43.5881|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 1191.2290ms 
2023-06-20 16:59:43.5881|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 5.3232ms 
2023-06-20 16:59:43.6022|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:59:43.6283|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.0844ms 
2023-06-20 16:59:47.3703|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/Admin/Index - - 
2023-06-20 16:59:47.3703|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executing endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:59:47.3703|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Route matched with {action = "Index", controller = "Admin"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller Lunch_Tinder.Controllers.AdminController (Lunch Tinder). 
2023-06-20 16:59:47.4164|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [e].[EventId], [e].[Description], [e].[EndTime], [e].[Name], [e].[StartTime]
FROM [Events] AS [e] 
2023-06-20 16:59:47.4164|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [l].[GroupId], [l].[Description], [l].[GroupName], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t].[EmailAddress], [t].[Password], [t].[UserName], [t].[UserType], [t0].[EventsEventId], [t0].[LunchGroupsGroupId], [t0].[EventId], [t0].[Description], [t0].[EndTime], [t0].[Name], [t0].[StartTime]
FROM [LunchGroups] AS [l]
LEFT JOIN (
    SELECT [l0].[LunchGroupsGroupId], [l0].[UsersUserId], [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType]
    FROM [LunchGroupUser] AS [l0]
    INNER JOIN [Users] AS [u] ON [l0].[UsersUserId] = [u].[UserId]
) AS [t] ON [l].[GroupId] = [t].[LunchGroupsGroupId]
LEFT JOIN (
    SELECT [e].[EventsEventId], [e].[LunchGroupsGroupId], [e0].[EventId], [e0].[Description], [e0].[EndTime], [e0].[Name], [e0].[StartTime]
    FROM [EventLunchGroup] AS [e]
    INNER JOIN [Events] AS [e0] ON [e].[EventsEventId] = [e0].[EventId]
) AS [t0] ON [l].[GroupId] = [t0].[LunchGroupsGroupId]
ORDER BY [l].[GroupId], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[UserId], [t0].[EventsEventId], [t0].[LunchGroupsGroupId] 
2023-06-20 16:59:47.4164|INFO|Microsoft.EntityFrameworkCore.Database.Command|Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], [u].[EmailAddress], [u].[Password], [u].[UserName], [u].[UserType], [t].[LunchGroupsGroupId], [t].[UsersUserId], [t].[GroupId], [t].[Description], [t].[GroupName]
FROM [Users] AS [u]
LEFT JOIN (
    SELECT [l].[LunchGroupsGroupId], [l].[UsersUserId], [l0].[GroupId], [l0].[Description], [l0].[GroupName]
    FROM [LunchGroupUser] AS [l]
    INNER JOIN [LunchGroups] AS [l0] ON [l].[LunchGroupsGroupId] = [l0].[GroupId]
) AS [t] ON [u].[UserId] = [t].[UsersUserId]
ORDER BY [u].[UserId], [t].[LunchGroupsGroupId], [t].[UsersUserId] 
2023-06-20 16:59:47.4164|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executing ViewResult, running view ~/Views/Admin/AdminHomePage.cshtml. 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor|Executed ViewResult - view ~/Views/Admin/AdminHomePage.cshtml executed in 6.133ms. 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker|Executed action Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder) in 50.2533ms 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Routing.EndpointMiddleware|Executed endpoint 'Lunch_Tinder.Controllers.AdminController.Index (Lunch Tinder)' 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/Admin/Index - - - 200 - text/html;+charset=utf-8 57.0240ms 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request starting HTTP/2 GET https://localhost:7215/_vs/browserLink - - 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 0.5784ms 
2023-06-20 16:59:47.4255|INFO|Microsoft.AspNetCore.Hosting.Diagnostics|Request finished HTTP/2 GET https://localhost:7215/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.6424ms 
